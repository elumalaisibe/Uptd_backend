/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../request","../TimeExtent","../core/Error","../core/HandleOwner","../core/loadAll","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/decorators/writer","../core/accessorSupport/PropertyOrigin","../geometry/Extent","../geometry/support/scaleUtils","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISMapService","./mixins/ArcGISService","./mixins/BlendLayer","./mixins/CustomParametersMixin","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/RefreshableLayer","./mixins/ScaleRangeLayer","./mixins/SublayersOwner","./mixins/TemporalLayer","./support/commonProperties","./support/ExportImageParameters","./support/imageBitmapUtils","./support/Sublayer","./support/sublayerUtils","./support/versionUtils","../time/TimeReference"],(function(e,r,t,i,o,a,s,n,p,l,c,u,y,d,m,h,g,f,S,b,v,_,x,I,O,w,L,M,T,P,E,R,A,U,N,J,F,j){"use strict";let q=function(r){function a(...e){var t;return(t=r.call(this,...e)||this).dateFieldsTimeReference=null,t.datesInUnknownTimezone=!1,t.dpi=96,t.gdbVersion=null,t.imageFormat="png24",t.imageMaxHeight=2048,t.imageMaxWidth=2048,t.imageTransparency=!0,t.isReference=null,t.labelsVisible=!1,t.operationalLayerType="ArcGISMapServiceLayer",t.preferredTimeReference=null,t.sourceJSON=null,t.sublayers=null,t.type="map-image",t.url=null,t}e._inherits(a,r);var n=a.prototype;return n.normalizeCtorArgs=function(e,r){return"string"==typeof e?{url:e,...r}:e},n.load=function(e){const r=null!=e?e.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Map Service"]},e).catch(p.throwIfAbortError).then((()=>this._fetchService(r)))),Promise.resolve(this)},n.readImageFormat=function(e,r){const t=r.supportedImageFormatTypes;return t&&t.includes("PNG32")?"png32":"png24"},n.writeSublayers=function(e,r,t,i){if(!this.loaded||!e)return;const o=e.slice().reverse().flatten((({sublayers:e})=>e&&e.toArray().reverse())).toArray();let a=!1;if(this.capabilities&&this.capabilities.operations.supportsExportMap&&this.capabilities.exportMap?.supportsDynamicLayers){const e=g.nameToId(i.origin);if(e===g.OriginId.PORTAL_ITEM){const e=this.createSublayersForOrigin("service").sublayers;a=J.shouldWriteSublayerStructure(o,e,g.OriginId.SERVICE)}else if(e>g.OriginId.PORTAL_ITEM){const e=this.createSublayersForOrigin("portal-item");a=J.shouldWriteSublayerStructure(o,e.sublayers,g.nameToId(e.origin))}}const s=[],n={writeSublayerStructure:a,...i};let p=a;o.forEach((e=>{const r=e.write({},n);s.push(r),p=p||"user"===e.originOf("visible")}));s.some((e=>Object.keys(e).length>1))&&(r.layers=s),p&&(r.visibleLayers=o.filter((e=>e.visible)).map((e=>e.id)))},n.createExportImageParameters=function(e,r,t,i){const o=i&&i.pixelRatio||1;e&&this.version>=10&&(e=e.clone().shiftCentralMeridian());const a=new A.ExportImageParameters({layer:this,floors:i?.floors,scale:S.getScale({extent:e,width:r})*o}),s=a.toJSON();a.destroy();const n=!i||!i.rotation||this.version<10.3?{}:{rotation:-i.rotation},p=e&&e.spatialReference,l=p.wkid||JSON.stringify(p.toJSON());s.dpi*=o;const c={};if(i?.timeExtent){const{start:e,end:r}=i.timeExtent.toJSON();c.time=e&&r&&e===r?""+e:`${e??"null"},${r??"null"}`}else this.timeInfo&&!this.timeInfo.hasLiveData&&(c.time="null,null");return{bbox:e&&e.xmin+","+e.ymin+","+e.xmax+","+e.ymax,bboxSR:l,imageSR:l,size:r+","+t,...s,...n,...c}},n.fetchImage=async function(e,r,t,i){const{data:o}=await this._fetchImage("image",e,r,t,i);return o},n.fetchImageBitmap=async function(e,r,t,i){const{data:o,url:a}=await this._fetchImage("blob",e,r,t,i);return U.createBitmap(o,a,i?.signal)},n.fetchRecomputedExtents=async function(e={}){const r={...e,query:{returnUpdates:!0,f:"json",...this.customParameters,token:this.apiKey}},{data:o}=await t(this.url,r),{extent:a,fullExtent:s,timeExtent:n}=o,p=a||s;return{fullExtent:p&&f.fromJSON(p),timeExtent:n&&i.fromJSON({start:n[0],end:n[1]})}},n.loadAll=function(){return s.loadAll(this,(e=>{e(this.allSublayers)}))},n.serviceSupportsSpatialReference=function(e){return F.serviceSupportsSpatialReference(this,e)},n._fetchImage=async function(e,r,i,a,s){const n={responseType:e,signal:s?.signal??null,query:{...this.parsedUrl.query,...this.createExportImageParameters(r,i,a,s),f:"image",...this.refreshParameters,...this.customParameters,token:this.apiKey}},l=this.parsedUrl.path+"/export";if(null!=n.query?.dynamicLayers&&!this.capabilities?.exportMap?.supportsDynamicLayers)throw new o("mapimagelayer:dynamiclayer-not-supported",`service ${this.url} doesn't support dynamic layers, which is required to be able to change the sublayer's order, rendering, labeling or source.`,{query:n.query});try{const{data:e}=await t(l,n);return{data:e,url:l}}catch(c){if(p.isAbortError(c))throw c;throw new o("mapimagelayer:image-fetch-error",`Unable to load image: ${l}`,{error:c})}},n._fetchService=async function(e){if(this.sourceJSON)return void this.read(this.sourceJSON,{origin:"service",url:this.parsedUrl});const{data:r,ssl:i}=await t(this.parsedUrl.path,{query:{f:"json",...this.parsedUrl.query,...this.customParameters,token:this.apiKey},signal:e});i&&(this.url=this.url.replace(/^http:/i,"https:")),this.sourceJSON=r,this.read(r,{origin:"service",url:this.parsedUrl})},e._createClass(a)}(I.BlendLayer(E.TemporalLayer(T.ScaleRangeLayer(P.SublayersOwner(_.ArcGISMapService(x.ArcGISService(w.OperationalLayer(L.PortalLayer(n.MultiOriginJSONMixin(M.RefreshableLayer(v.APIKeyMixin(O.CustomParametersMixin(a.HandleOwnerMixin(b))))))))))))));r.__decorate([l.property({type:j})],q.prototype,"dateFieldsTimeReference",void 0),r.__decorate([l.property({type:Boolean})],q.prototype,"datesInUnknownTimezone",void 0),r.__decorate([l.property()],q.prototype,"dpi",void 0),r.__decorate([l.property()],q.prototype,"gdbVersion",void 0),r.__decorate([l.property()],q.prototype,"imageFormat",void 0),r.__decorate([d.reader("imageFormat",["supportedImageFormatTypes"])],q.prototype,"readImageFormat",null),r.__decorate([l.property({json:{origins:{service:{read:{source:"maxImageHeight"}}}}})],q.prototype,"imageMaxHeight",void 0),r.__decorate([l.property({json:{origins:{service:{read:{source:"maxImageWidth"}}}}})],q.prototype,"imageMaxWidth",void 0),r.__decorate([l.property()],q.prototype,"imageTransparency",void 0),r.__decorate([l.property({type:Boolean,json:{read:!1,write:{enabled:!0,overridePolicy:()=>({enabled:!1})}}})],q.prototype,"isReference",void 0),r.__decorate([l.property({json:{read:!1,write:!1}})],q.prototype,"labelsVisible",void 0),r.__decorate([l.property({type:["ArcGISMapServiceLayer"]})],q.prototype,"operationalLayerType",void 0),r.__decorate([l.property({json:{read:!1,write:!1}})],q.prototype,"popupEnabled",void 0),r.__decorate([l.property({type:j})],q.prototype,"preferredTimeReference",void 0),r.__decorate([l.property()],q.prototype,"sourceJSON",void 0),r.__decorate([l.property({json:{write:{ignoreOrigin:!0}}})],q.prototype,"sublayers",void 0),r.__decorate([h.writer("sublayers",{layers:{type:[N]},visibleLayers:{type:[c.Integer]}})],q.prototype,"writeSublayers",null),r.__decorate([l.property({type:["show","hide","hide-children"]})],q.prototype,"listMode",void 0),r.__decorate([l.property({json:{read:!1},readOnly:!0,value:"map-image"})],q.prototype,"type",void 0),r.__decorate([l.property(R.url)],q.prototype,"url",void 0),q=r.__decorate([m.subclass("esri.layers.MapImageLayer")],q);return q}));
