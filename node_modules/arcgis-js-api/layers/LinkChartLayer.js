/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../geometry","../core/Collection","../core/Error","../core/Logger","../core/promiseUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass","../geohash/geohashUtils","./Layer","./graphics/featureConversionUtils","./graphics/OptimizedGeometry","./knowledgeGraph/KnowledgeGraphLayerDataManager","./knowledgeGraph/KnowledgeGraphSublayer","./mixins/BlendLayer","./mixins/ScaleRangeLayer","../libs/linkchartlayout/LinkChartLayout","../rest/knowledgeGraphService","../rest/knowledgeGraph/EntityType","../rest/knowledgeGraph/RelationshipType","../geometry/Extent","../geometry/Point","../geometry/Polyline"],(function(e,t,a,i,o,n,r,s,h,l,c,d,u,p,y,g,_,f,E,C,M,L,m,k,D,I,O){"use strict";const T=(e,t,a)=>(e.has(t)||e.set(t,a()),e.get(t));let b=function(t){function a(e){var a;if((a=t.call(this,e)||this).dataPreloadedInLocalCache=!1,a._currentLinkChartConfig={layoutMode:"RADIAL_TREE",xScaleFactor:1,yScaleFactor:1},a._graphTypeLookup=new Map,a.layers=new i,a.linkChartDiagramLookup=new Map,a.linkChartExtent=new D({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7}),a.linkChartGeohashLookup=new Map,a.sublayerIdsCache=new Map,a.tables=new i,a.type="link-chart",a._originalInclusionList=e.inclusionModeDefinition,e.dataPreloadedInLocalCache&&!e.inclusionModeDefinition)throw new o("knowledge-graph:linkchart-layer-constructor","If creating a link chart composite layer and configured that data is already loaded in the cache, you must specify an inclusion list so the Composite Layer knows what records belong to it");return a}e._inherits(a,t);var s=a.prototype;return s.normalizeCtorArgs=function(e){return{url:e.url,title:e.title,dataPreloadedInLocalCache:e.dataPreloadedInLocalCache,defaultLinkChartConfig:e.defaultLinkChartConfig}},s._initializeLayerProperties=function(e){if(!this.title&&this.url){const e=this.url.split("/");this.title=e[e.length-2]}const t=new Set;let a=[],i=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new o("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((o,r)=>{if(!this._graphTypeLookup.get(r))return n.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(r);this._graphTypeLookup.get(r)instanceof k||"strictOrigin"in this._graphTypeLookup.get(r)?t.has(r)||(t.add(r),i.push(this._graphTypeLookup.get(r))):this._graphTypeLookup.get(r)instanceof m||"properties"in this._graphTypeLookup.get(r)?t.has(r)||(t.add(r),a.push(this._graphTypeLookup.get(r))):(n.getLogger(this).warn(`A named type, ${r}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(r))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],i=e.knowledgeGraph.dataModel.relationshipTypes??[]);const r=new _.KnowledgeGraphLayerDataManager({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=i,this.dataManager=r},s.load=function(e){return this.addResolvingPromise(new Promise((t=>{L.fetchKnowledgeGraph(this.url).then((a=>{if(this._initializeLayerProperties({knowledgeGraph:a,inclusionModeDefinition:this._originalInclusionList}),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.size||(this.dataManager.inclusionModeDefinition={generateAllSublayers:!1,namedTypeDefinitions:new Map},this.dataManager.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})})),this.dataManager.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.set(e.name,{useAllData:!0})}))),this.dataPreloadedInLocalCache)this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach((e=>{e.useAllData=!1,e.members?.forEach((e=>{let t;t=e.linkChartLocation instanceof g?e.linkChartLocation:e.linkChartLocation?y.convertFromGeometry(e.linkChartLocation):null,this.linkChartDiagramLookup.set(e.id,t),t&&2===t.coords.length&&0===t.lengths.length?this.linkChartGeohashLookup.set(e.id,u.encodeGeohash(t.coords[1],t.coords[0],_.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(e.id,"")})),this.addResolvingPromise(this._initializeDiagram().then((async()=>{this.layers.forEach((async e=>{await e.refreshCachedQueryEngine()})),this.tables.forEach((async e=>{await e.refreshCachedQueryEngine()}))})))}));else{const t="GEOGRAPHIC"===this.defaultLinkChartConfig?.layoutMode;this.addResolvingPromise(this.dataManager.refreshCacheContent(void 0,!1,t,!0).then((async()=>{r.throwIfAborted(e);const t=[],a=[];this.loadLayerAssumingLocalCache(),this.dataManager.inclusionModeDefinition&&(this.dataManager.inclusionModeDefinition.generateAllSublayers=!1,this.dataManager.inclusionModeDefinition.namedTypeDefinitions.forEach((e=>{e.useAllData=!1}))),await this._initializeDiagram(),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine()),t.push(new Promise((t=>{e.on("layerview-create",(()=>{t(null)}))})))})),this.tables.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a)})))}t(null)}))}))),Promise.resolve(this)},s.addRecords=async function(e){await this._handleNewRecords(e)},s.expand=async function(e){const t=await this.dataManager.getConnectedRecordIds(e),a=t.filter((e=>!this.sublayerIdsCache.get(e.typeName)?.has(e.id)));return await this._handleNewRecords(t),{records:a}},s.loadLayerAssumingLocalCache=function(){this.memberRelationshipTypes.forEach((e=>{const t=new f({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberEntityTypes.forEach((e=>{const t=new f({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=T(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{if(a.add(e.id),e.linkChartLocation)if(e.linkChartLocation instanceof g)this.linkChartDiagramLookup.set(e.id,e.linkChartLocation),2===e.linkChartLocation.coords.length&&0===e.linkChartLocation.lengths.length?this.linkChartGeohashLookup.set(e.id,u.encodeGeohash(e.linkChartLocation.coords[1],e.linkChartLocation.coords[0],_.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(e.id,"");else{const t=y.convertFromGeometry(e.linkChartLocation);this.linkChartDiagramLookup.set(e.id,e.linkChartLocation?t:null),"x"in e.linkChartLocation&&"y"in e.linkChartLocation?this.linkChartGeohashLookup.set(e.id,u.encodeGeohash(e.linkChartLocation.x,e.linkChartLocation.y,_.GEOHASH_ENCODING_PRECISION)):this.linkChartGeohashLookup.set(e.id,"")}}))}))},s.calculateLinkChartLayout=async function(e="RADIAL_TREE",t){const a=[],i=[];this.dataManager.sublayerCaches.forEach(((e,t)=>{this.dataManager.entityTypeNames.has(t)?e.forEach((e=>{a.push({typeName:t,feature:e})})):this.dataManager.relationshipTypeNames.has(t)&&e.forEach((e=>{i.push({typeName:t,feature:e})}))})),this.linkChartDiagramLookup=new Map;const r=new Map,s=new Map,h=new Map,l=new Map,c=new Uint8Array(a.length),d=new Float64Array(a.length),p=new Float64Array(a.length),g=new Uint32Array(i.length),f=new Uint32Array(i.length),E=[],C="FORCE_DIRECTED",L=t?.xScaleFactor??1,m=t?.yScaleFactor??1,k=new D({xmin:-1e-7,ymin:-1e-7,xmax:1e-7,ymax:1e-7});let T,b="FORCE_DIRECTED",N=0,A=0;switch(b="GEOGRAPHIC"===e?C:e,b){case"FORCE_DIRECTED":T=M.LCForceDirectedLayout.apply;break;case"COMMUNITY":T=M.LCCommunityLayout.apply;break;case"HIERARCHICAL":T=M.LCHierarchicalLayout.apply;break;case"RADIAL_TREE":T=M.LCRadialTreeLayout.apply;break;case"SMART_TREE":T=M.LCSmartTreeLayout.apply;break;default:T=M.LCSimpleLayout.apply}a.forEach((({typeName:a,feature:i})=>{if(t?.lockedNodeLocations?.has(i.attributes[_.MOCK_OID_FIELD_NAME])){"GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)?c[N]=M.NodeFlag.IsGeographic:c[N]=M.NodeFlag.None;const o=t.lockedNodeLocations.get(i.attributes[_.MOCK_OID_FIELD_NAME]);d[N]=o.x,p[N]=o.y}else if("GEOGRAPHIC"===e&&this.dataManager.geographicLookup.has(a)){c[N]=M.NodeFlag.IsGeographic;let e=null;const t=i.attributes[this.dataManager.geographicLookup.get(a).name],o=this.dataManager.geographicLookup.get(a)?.geometryType;switch(o){case"esriGeometryPoint":d[N]=t?.x,p[N]=t?.y;break;case"esriGeometryPolygon":e=t?.centroid,null!=e?.x&&null!=e?.y?(d[N]=e.x,p[N]=e.y):c[N]=M.NodeFlag.IsMovable;break;case"esriGeometryPolyline":case"esriGeometryMultipoint":e=t?.extent?.center,null!=e?.x&&null!=e?.y?(d[N]=e.x,p[N]=e.y):c[N]=M.NodeFlag.IsMovable;break;default:c[N]=M.NodeFlag.IsMovable}(null==d[N]||null==p[N]||Number.isNaN(d[N])||Number.isNaN(p[N]))&&(c[N]=M.NodeFlag.IsMovable,d[N]=0,p[N]=0)}else c[N]=M.NodeFlag.IsMovable,d[N]=0,p[N]=0;l.set(i.attributes[_.MOCK_OID_FIELD_NAME],N),E[N]={feature:i,typeName:a},N++}));let w=!1;i.forEach((e=>{const t=l.get(e.feature.attributes[_.MOCK_ORIGIN_ID_FIELD_NAME]),a=l.get(e.feature.attributes[_.MOCK_DESTINATION_ID_FIELD_NAME]);void 0!==t&&void 0!==a?(g[A]=t,f[A]=a,A++):(w=!0,this.linkChartDiagramLookup.set(e.feature.attributes[_.MOCK_ORIGIN_ID_FIELD_NAME],null),this.linkChartGeohashLookup.set(e.feature.attributes[_.MOCK_ORIGIN_ID_FIELD_NAME],null))})),w&&n.getLogger(this).warn("A relationship is a member of this layer that has either origin or destination entity nodes that are not members. The diagram geometry will be set to null"),await M.load();if(!T(c,d,p,g,f))throw new o("knowledge-graph:layout-failed","Attempting to arrange the records in the specified layout failed");for(let o=0;o<E.length;o++){if(c[o]===M.NodeFlag.IsMovable&&(d[o]=d[o]*L,p[o]=p[o]*m),p[o]>84.9999&&(p[o]=84.9999),p[o]<-84.9999&&(p[o]=-84.9999),d[o]>179.9999&&(d[o]=179.9999),d[o]<-179.9999&&(d[o]=-179.9999),E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]=new I(d[o],p[o]),r.has(E[o].typeName)){const e=r.get(E[o].typeName);e?.set(E[o].feature.attributes[_.MOCK_OID_FIELD_NAME],E[o].feature)}else{const e=new Map;e.set(E[o].feature.attributes[_.MOCK_OID_FIELD_NAME],E[o].feature),r.set(E[o].typeName,e)}h.set(E[o].feature.attributes[_.MOCK_OID_FIELD_NAME],E[o].feature);const e=y.convertFromGeometry(E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]);this.linkChartDiagramLookup.set(E[o].feature.attributes[_.MOCK_OID_FIELD_NAME],E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]?e:null),this.linkChartGeohashLookup.set(E[o].feature.attributes[_.MOCK_OID_FIELD_NAME],u.encodeGeohash(E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y,E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x,_.GEOHASH_ENCODING_PRECISION)),E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x<k.xmin&&(k.xmin=E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x),E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x>k.xmax&&(k.xmax=E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].x),E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y<k.ymin&&(k.ymin=E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y),E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y>k.ymax&&(k.ymax=E[o].feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME].y)}return this.linkChartExtent.xmin=k.xmin,this.linkChartExtent.xmax=k.xmax,this.linkChartExtent.ymin=k.ymin,this.linkChartExtent.ymax=k.ymax,i.forEach((e=>{const t=E[l.get(e.feature.attributes[_.MOCK_ORIGIN_ID_FIELD_NAME])]?.feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME],a=E[l.get(e.feature.attributes[_.MOCK_DESTINATION_ID_FIELD_NAME])]?.feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME];if(!t||!a)return;const i=new O({paths:[[t.x,t.y],[a.x,a.y]]});if(e.feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]=i,s.has(e.typeName)){const t=s.get(e.typeName);t?.set(e.feature.attributes[_.MOCK_OID_FIELD_NAME],e.feature)}else{const t=new Map;t.set(e.feature.attributes[_.MOCK_OID_FIELD_NAME],e.feature),s.set(e.typeName,t)}h.set(e.feature.attributes[_.MOCK_OID_FIELD_NAME],e.feature);const o=y.convertFromGeometry(e.feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]);this.linkChartDiagramLookup.set(e.feature.attributes[_.MOCK_OID_FIELD_NAME],e.feature.attributes[_.MOCK_LAYOUT_GEOMETRY_FIELD_NAME]?o:null),this.linkChartGeohashLookup.set(e.feature.attributes[_.MOCK_OID_FIELD_NAME],"")})),this._currentLinkChartConfig={layoutMode:e,xScaleFactor:L,yScaleFactor:m},{nodes:r,links:s,idMap:h}},s.applyNewLinkChartLayout=async function(e="RADIAL_TREE",t){const a=[];await this.calculateLinkChartLayout(e,t),this.layers.forEach((e=>{a.push(e.refreshCachedQueryEngine())})),await Promise.all(a),this.layers.forEach((e=>{e.emit("refresh",{dataChanged:!0})}))},s.getCurrentNodeLocations=function(){const e=new Map;return this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((t=>{t?.members?.forEach((t=>{const a=t.linkChartLocation;let i;const o=t.id;a&&(i="x"in a?{x:a.x,y:a.y}:{x:a.coords[0],y:a.coords[1]},e.set(o,new I({x:i.x,y:i.y})))}))})),e},s.synchronizeInclusionListWithCache=async function(){return new Promise((e=>{this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{if(e.useAllData=!1,e.members&&e.members.size>0){if(!this.dataManager.sublayerCaches.get(t))return;const a=Array.from(this.dataManager.sublayerCaches.get(t).keys());Array.from(e.members.keys()).filter((e=>!a.includes(e))).forEach((t=>{e.members?.delete(t)}))}})),e()}))},s.refreshLinkChartCache=async function(e){await this.dataManager.refreshCacheContent(e);const t=[];this.layers.forEach((e=>{t.push(e.refreshCachedQueryEngine())})),await Promise.all(t),this.layers.forEach((e=>{e.emit("refresh",{dataChanged:!0})}))},s._handleNewRecords=async function(e){const t=[];this.dataManager.addToLayerInclusionSet(e);for(const a of e)this.sublayerIdsCache.has(a.typeName)||(this.sublayerIdsCache.set(a.typeName,new Set),t.push(a.typeName)),this.sublayerIdsCache.get(a.typeName).add(a.id);for(const a of t)if(this._graphTypeLookup.has(a)){const e=this._graphTypeLookup.get(a),t="endPoints"in e?"relationship":"entity",i=new f({objectType:e,parentCompositeLayer:this,graphType:t,title:a});"entity"===t?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a),i.geometryType?this.layers.push(i):this.tables.push(i),this.dataManager.sublayerCaches.set(a,new Map)}await this.dataManager.refreshCacheContent(e.map((e=>e.id))),await this.applyNewLinkChartLayout(this._currentLinkChartConfig.layoutMode,{xScaleFactor:this._currentLinkChartConfig.xScaleFactor,yScaleFactor:this._currentLinkChartConfig.xScaleFactor})},s._initializeDiagram=async function(){this.defaultLinkChartConfig?this.defaultLinkChartConfig.doNotRecalculateLayout?(this.dataManager.inclusionModeDefinition?.namedTypeDefinitions?.forEach((e=>{e?.members?.forEach((e=>{const t=e.linkChartLocation;let a;const i=e.id;if(!t)return;a="x"in t?{x:t.x,y:t.y}:{x:t.coords[0],y:t.coords[1]};const o=y.convertFromGeometry(a);this.linkChartDiagramLookup.set(i,o),this.linkChartGeohashLookup.set(i,u.encodeGeohash(a.x,a.y,_.GEOHASH_ENCODING_PRECISION)),this.linkChartExtent.xmin>a.x&&(this.linkChartExtent.xmin=a.x),this.linkChartExtent.xmax<a.x&&(this.linkChartExtent.xmax=a.x),this.linkChartExtent.ymin>a.y&&(this.linkChartExtent.ymin=a.y),this.linkChartExtent.ymax<a.y&&(this.linkChartExtent.ymax=a.y)}))})),this.memberRelationshipTypes.forEach((e=>{e.name&&this.dataManager.sublayerCaches.get(e.name)?.forEach((e=>{const t=this.linkChartDiagramLookup.get(e.attributes[_.MOCK_ORIGIN_ID_FIELD_NAME]),a=this.linkChartDiagramLookup.get(e.attributes[_.MOCK_DESTINATION_ID_FIELD_NAME]);if(t&&a){const i=y.convertFromGeometry(new O({paths:[[t.coords[0],t.coords[1]],[a.coords[0],a.coords[1]]]}));this.linkChartDiagramLookup.set(e.attributes[_.MOCK_OID_FIELD_NAME],i)}else this.linkChartDiagramLookup.set(e.attributes[_.MOCK_OID_FIELD_NAME],null);this.linkChartGeohashLookup.set(e.attributes[_.MOCK_OID_FIELD_NAME],"")}))}))):await this.calculateLinkChartLayout(this.defaultLinkChartConfig.layoutMode,{xScaleFactor:this.defaultLinkChartConfig.xScaleFactor,yScaleFactor:this.defaultLinkChartConfig.yScaleFactor,lockedNodeLocations:this.getCurrentNodeLocations()}):await this.calculateLinkChartLayout("RADIAL_TREE",{lockedNodeLocations:this.getCurrentNodeLocations()})},e._createClass(a)}(E.BlendLayer(C.ScaleRangeLayer(p)));t.__decorate([s.property()],b.prototype,"dataPreloadedInLocalCache",void 0),t.__decorate([s.property()],b.prototype,"defaultLinkChartConfig",void 0),t.__decorate([s.property()],b.prototype,"dataManager",void 0),t.__decorate([s.property()],b.prototype,"knowledgeGraph",void 0),t.__decorate([s.property()],b.prototype,"layers",void 0),t.__decorate([s.property()],b.prototype,"linkChartDiagramLookup",void 0),t.__decorate([s.property()],b.prototype,"linkChartExtent",void 0),t.__decorate([s.property()],b.prototype,"linkChartGeohashLookup",void 0),t.__decorate([s.property()],b.prototype,"memberEntityTypes",void 0),t.__decorate([s.property()],b.prototype,"memberRelationshipTypes",void 0),t.__decorate([s.property()],b.prototype,"sublayerIdsCache",void 0),t.__decorate([s.property()],b.prototype,"tables",void 0),t.__decorate([s.property({json:{read:!1}})],b.prototype,"type",void 0),b=t.__decorate([d.subclass("esri.layers.LinkChartLayer")],b);return b}));
