/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/Collection","../core/Error","../core/Logger","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass","./Layer","./knowledgeGraph/KnowledgeGraphLayerDataManager","./knowledgeGraph/KnowledgeGraphSublayer","./mixins/BlendLayer","./mixins/ScaleRangeLayer","../rest/knowledgeGraphService","../rest/knowledgeGraph/EntityType","../rest/knowledgeGraph/RelationshipType"],(function(e,t,a,i,n,o,s,r,p,h,l,d,y,c,u,g,m,f){"use strict";const w=(e,t,a)=>(e.has(t)||e.set(t,a()),e.get(t));let T=function(t){function o(e){var i;return(i=t.call(this,e)||this)._graphTypeLookup=new Map,i.knowledgeGraph=null,i.layers=new a,i.memberEntityTypes=null,i.memberRelationshipTypes=null,i.sublayerIdsCache=new Map,i.tables=new a,i.type="knowledge-graph",i._originalInclusionList=e.inclusionModeDefinition,i}e._inherits(o,t);var s=o.prototype;return s.normalizeCtorArgs=function(e){return{url:e.url,title:e.title}},s._initializeLayerProperties=function(e){const t=new Set;let a=[],o=[];if(e.inclusionModeDefinition&&(!e.inclusionModeDefinition.namedTypeDefinitions||e.inclusionModeDefinition.namedTypeDefinitions.size<1))throw new i("knowledge-graph:composite-layer-constructor","If an explicit inclusion definition is defined, at least one namedTypeDefinition must also be defined");e.knowledgeGraph.dataModel.entityTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.knowledgeGraph.dataModel.relationshipTypes?.forEach((e=>{e.name&&this._graphTypeLookup.set(e.name,e)})),e.inclusionModeDefinition?.generateAllSublayers?(a=e.knowledgeGraph.dataModel.entityTypes??[],o=e.knowledgeGraph.dataModel.relationshipTypes??[]):e.inclusionModeDefinition?.namedTypeDefinitions&&e.inclusionModeDefinition?.namedTypeDefinitions.size>0?e.inclusionModeDefinition?.namedTypeDefinitions.forEach(((i,s)=>{if(!this._graphTypeLookup.get(s))return n.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't in the data model and will be removed`),void e.inclusionModeDefinition?.namedTypeDefinitions.delete(s);this._graphTypeLookup.get(s)instanceof f||"strictOrigin"in this._graphTypeLookup.get(s)?t.has(s)||(t.add(s),o.push(this._graphTypeLookup.get(s))):this._graphTypeLookup.get(s)instanceof m||"properties"in this._graphTypeLookup.get(s)?t.has(s)||(t.add(s),a.push(this._graphTypeLookup.get(s))):(n.getLogger(this).warn(`A named type, ${s}, was in the inclusion list that wasn't properly modeled and will be removed`),e.inclusionModeDefinition?.namedTypeDefinitions.delete(s))})):(a=e.knowledgeGraph.dataModel.entityTypes??[],o=e.knowledgeGraph.dataModel.relationshipTypes??[]);const s=new d.KnowledgeGraphLayerDataManager({knowledgeGraph:e.knowledgeGraph,inclusionModeDefinition:e.inclusionModeDefinition});this.knowledgeGraph=e.knowledgeGraph,this.memberEntityTypes=a,this.memberRelationshipTypes=o,this.dataManager=s},s.load=function(){return this.addResolvingPromise(g.fetchKnowledgeGraph(this.url).then((e=>{this._initializeLayerProperties({knowledgeGraph:e,inclusionModeDefinition:this._originalInclusionList}),this.loadLayerAssumingLocalCache()}))),Promise.resolve(this)},s._handleNewRecords=async function(e){const t=[];this.dataManager.addToLayerInclusionSet(e);for(const a of e)this.sublayerIdsCache.has(a.typeName)||(this.sublayerIdsCache.set(a.typeName,new Set),t.push(a.typeName)),this.sublayerIdsCache.get(a.typeName).add(a.id);for(const a of t)if(this._graphTypeLookup.has(a)){const e=this._graphTypeLookup.get(a),t="endPoints"in e?"relationship":"entity",i=new y({objectType:e,parentCompositeLayer:this,graphType:t,title:a});"entity"===t?this.dataManager.entityTypeNames.add(a):this.dataManager.relationshipTypeNames.add(a),i.geometryType?this.layers.push(i):this.tables.push(i),this.dataManager.sublayerCaches.set(a,new Map)}this.layers.forEach((e=>{e.emit("refresh",{dataChanged:!0})}))},s.loadLayerAssumingLocalCache=function(){this.memberEntityTypes.forEach((e=>{const t=new y({objectType:e,parentCompositeLayer:this,graphType:"entity",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.memberRelationshipTypes.forEach((e=>{const t=new y({objectType:e,parentCompositeLayer:this,graphType:"relationship",title:e.name});t.geometryType?this.layers.push(t):this.tables.push(t),this.dataManager.sublayerCaches.has(e.name)||this.dataManager.sublayerCaches.set(e.name,new Map)})),this.dataManager.inclusionModeDefinition?.namedTypeDefinitions&&this.dataManager.inclusionModeDefinition?.namedTypeDefinitions.forEach(((e,t)=>{const a=w(this.sublayerIdsCache,t,(()=>new Set));e.members?.forEach((e=>{a.add(e.id)}))}))},s.addRecords=async function(e){await this._handleNewRecords(e)},e._createClass(o)}(c.BlendLayer(u.ScaleRangeLayer(l)));t.__decorate([o.property()],T.prototype,"dataManager",void 0),t.__decorate([o.property()],T.prototype,"knowledgeGraph",void 0),t.__decorate([o.property()],T.prototype,"layers",void 0),t.__decorate([o.property()],T.prototype,"memberEntityTypes",void 0),t.__decorate([o.property()],T.prototype,"memberRelationshipTypes",void 0),t.__decorate([o.property()],T.prototype,"sublayerIdsCache",void 0),t.__decorate([o.property()],T.prototype,"tables",void 0),t.__decorate([o.property({json:{read:!1}})],T.prototype,"type",void 0),T=t.__decorate([h.subclass("esri.layers.KnowledgeGraphLayer")],T);return T}));
