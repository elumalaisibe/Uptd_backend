/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../geometry","../../../../request","../../../../core/asyncUtils","../../../../core/Error","../../../../core/Logger","../../../../core/promiseUtils","../../../../core/urlUtils","../../../../geometry/projection","../../../../geometry/geometryAdapters/json","../../../../geometry/support/spatialReferenceUtils","../../../../geometry/support/webMercatorUtils","../../OptimizedFeature","../../OptimizedGeometry","../../data/FeatureStore","../../data/projectionSupport","../../data/QueryEngine","../csv/csv","./clientSideDefaults","../../../support/FieldsIndex","../../../support/fieldUtils","../../../../geometry/SpatialReference"],(function(e,t,i,n,r,s,o,a,l,c,u,d,f,p,m,y,h,g,F,_,I,w){"use strict";const E=F.createDrawingInfo("esriGeometryPoint"),T=["csv"],N=[0,0];let x=e._createClass((function(e,t){this.x=e,this.y=t})),S=function(){function t(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}var _=t.prototype;return _.destroy=function(){this._queryEngine?.destroy(),this._queryEngine=null},_.load=async function(e,t={}){this._loadOptions=e;const[i]=await Promise.all([this._fetch(t.signal),this._checkProjection(e?.parsingOptions?.spatialReference)]),n=b(i,e);this._locationInfo=n.locationInfo,this._delimiter=n.delimiter,this._queryEngine=this._createQueryEngine(n);const r=await this._createFeatures(i);this._queryEngine.featureStore.addMany(r);const{fullExtent:s,timeExtent:o}=await this._queryEngine.fetchRecomputedExtents();if(n.layerDefinition.extent=s,o){const{start:e,end:t}=o;n.layerDefinition.timeInfo.timeExtent=[e,t]}return n},_.applyEdits=async function(){throw new r("csv-layer:editing-not-supported","applyEdits() is not supported on CSVLayer")},_.queryFeatures=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)},_.queryFeatureCount=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)},_.queryObjectIds=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)},_.queryExtent=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)},_.querySnapping=async function(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)},_.refresh=async function(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=n.createTask(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),o.isAbortError(e)||s.getLogger("esri.layers.CSVLayer").error(new r("csv-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:i}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:i}},_._waitSnapshotComplete=async function(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}},_._fetch=async function(e){const{url:t,customParameters:n}=this._loadOptions;if(!t)throw new r("csv-layer:invalid-source","url not defined");const s=a.urlToObject(t);return(await i(s.path,{query:{...s.query,...n},responseType:"text",signal:e})).data},_._createQueryEngine=function(e){const{objectIdField:t,fields:i,extent:n,timeInfo:r}=e.layerDefinition,s=new m({geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1});return new h.QueryEngine({fields:i,geometryType:"esriGeometryPoint",hasM:!1,hasZ:!1,timeInfo:r,objectIdField:t,spatialReference:n.spatialReference||{wkid:4326},cacheSpatialQueries:!0,featureStore:s})},_._createFeatures=async function(e){const{latitudeFieldName:t,longitudeFieldName:i}=this._locationInfo,{objectIdField:n,fieldsIndex:r,spatialReference:s}=this._queryEngine;let o=[];const a=[],m=r.fields.filter((e=>e.name!==n)).map((e=>e.name));let y=0;const h={};for(const l of r.fields)if("esriFieldTypeOID"!==l.type&&"esriFieldTypeGlobalID"!==l.type){const e=I.getFieldDefaultValue(l);void 0!==e&&(h[l.name]=e)}const _=g.parseRows(e,m,this._delimiter,F.createDefaultAttributesFunction(h,n));for(const l of _){const e=this._parseCoordinateValue(l[t]),s=this._parseCoordinateValue(l[i]);if(null!=s&&null!=e&&!isNaN(e)&&!isNaN(s)){l[t]=e,l[i]=s;for(const e in l)if(e!==t&&e!==i)if(r.isDateField(e)){const t=new Date(l[e]);l[e]=g.isValidDate(t,l[e])?t.getTime():null}else if(r.isNumericField(e)){const t=g.parseNumber(l[e]);isNaN(t)?l[e]=null:l[e]=t}l[n]=y,y++,o.push(new x(s,e)),a.push(l)}}if(!u.equals({wkid:4326},s))if(u.isWebMercator(s))for(const l of o)[l.x,l.y]=d.lngLatToXY(l.x,l.y,N);else o=l.projectMany(c.jsonAdapter,o,w.WGS84,s,null,null);const E=[];for(let l=0;l<o.length;l++){const{x:e,y:t}=o[l],i=a[l];i[n]=l+1,E.push(new f.OptimizedFeature(new p([],[e,t]),i,null,i[n]))}return E},_._parseCoordinateValue=function(e){if(null==e||""===e)return null;let t=g.parseNumber(e);return(isNaN(t)||Math.abs(t)>181)&&(t=parseFloat(e)),t},_._checkProjection=async function(e){try{await y.checkProjectionSupport(u.WGS84,e)}catch{throw new r("csv-layer:projection-not-supported","Projection not supported")}},e._createClass(t)}();function b(e,t){const i=t.parsingOptions||{},n={delimiter:i.delimiter,layerDefinition:null,locationInfo:{latitudeFieldName:i.latitudeField,longitudeFieldName:i.longitudeField}},s=n.layerDefinition={name:a.getFilename(t.url,T)||"csv",drawingInfo:E,geometryType:"esriGeometryPoint",objectIdField:null,fields:[],timeInfo:i.timeInfo,extent:{xmin:Number.POSITIVE_INFINITY,ymin:Number.POSITIVE_INFINITY,xmax:Number.NEGATIVE_INFINITY,ymax:Number.NEGATIVE_INFINITY,spatialReference:i.spatialReference||{wkid:4326}}},o=g.readRows(e),l=o.next().value?.trim(),c=o.next().value?.trim();if(!l)throw new r("csv-layer:empty-csv","CSV is empty",{csv:e});const{delimiter:u,locationInfo:d}=g.inferDelimiterAndLocationInfo(l,c,i);if(!u)throw new r("csv-layer:invalid-delimiter","Unable to detect the delimiter from CSV",{firstLine:l,secondLine:c,parsingOptions:i});if(!d)throw new r("csv-layer:location-fields-not-found","Unable to identify latitude and longitude fields from the CSV file",{firstLine:l,secondLine:c,parsingOptions:i});n.locationInfo=d,n.delimiter=u;const{names:f,aliases:p}=g.extractFieldNamesAndAliasesFromRow(l,u),m=g.inferFields(e,n.delimiter,f,p,n.locationInfo);if(i.fields?.length){const e=new _(i.fields);for(const t of m){const i=e.get(t.name);i&&Object.assign(t,i)}}if(!m.some((e=>"esriFieldTypeOID"===e.type&&(s.objectIdField=e.name,!0)))){const e={name:"__OBJECTID",alias:"__OBJECTID",type:"esriFieldTypeOID",editable:!1,nullable:!1};s.objectIdField=e.name,m.unshift(e)}s.fields=m;const y=new _(s.fields);if(n.locationInfo&&(n.locationInfo.latitudeFieldName=y.get(n.locationInfo.latitudeFieldName).name,n.locationInfo.longitudeFieldName=y.get(n.locationInfo.longitudeFieldName).name),s.timeInfo){const e=s.timeInfo;if(e.startTimeField){const t=y.get(e.startTimeField);t?(e.startTimeField=t.name,t.type="esriFieldTypeDate"):e.startTimeField=null}if(e.endTimeField){const t=y.get(e.endTimeField);t?(e.endTimeField=t.name,t.type="esriFieldTypeDate"):e.endTimeField=null}if(e.trackIdField){const t=y.get(e.trackIdField);e.trackIdField=t?t.name:null}e.startTimeField||e.endTimeField||(s.timeInfo=null)}return n}return S}));
