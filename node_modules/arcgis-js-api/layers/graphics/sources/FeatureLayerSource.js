/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../geometry","../../../Graphic","../../../kernel","../../../request","../../../TimeExtent","../../../core/arrayUtils","../../../core/Error","../../../core/has","../../../core/jsonMap","../../../core/Loadable","../../../core/Logger","../../../core/object","../../../core/promiseUtils","../../../core/unitUtils","../../../core/urlUtils","../../../core/uuid","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/accessorSupport/decorators/subclass","../../../geometry/Extent","../../../geometry/projection","../../../geometry/support/jsonUtils","../../../geometry/support/meshVertexSpaceUtils","../../../geometry/support/meshUtils/External","../editingSupport","./support/clientSideDefaults","./support/QueryTask","../../support/arcgisLayerUrl","../../support/infoFor3D","../../../rest/query/executeQueryJSON","../../../rest/query/operations/editsZScale","../../../rest/support/Query","../../../geometry/SpatialReference"],(function(e,t,a,s,r,n,i,o,u,l,c,d,p,y,h,f,g,m,R,S,b,F,E,_,w,q,O,I,A,x,T,N,v,J,M,U){"use strict";const j=new d.JSONMap({originalAndCurrentFeatures:"original-and-current-features",none:"none"}),k=new Set(["Feature Layer","Oriented Imagery Layer","Table"]),C=new d.JSONMap({Started:"published",Publishing:"publishing",Stopped:"unavailable"});let D=function(a){function s(){var e;return(e=a.apply(this,arguments)||this).type="feature-layer",e.refresh=f.debounce((async()=>{await e.load();const t=e.sourceJSON.editingInfo?.lastEditDate;if(null==t)return{dataChanged:!0,updates:{}};try{await e._fetchService(null)}catch{return{dataChanged:!0,updates:{}}}const a=t!==e.sourceJSON.editingInfo?.lastEditDate;return{dataChanged:a,updates:a?{editingInfo:e.sourceJSON.editingInfo,extent:e.sourceJSON.extent}:null}})),e._ongoingAssetUploads=new Map,e}t._inherits(s,a);var d=s.prototype;return d.load=function(e){const t=null!=e?e.signal:null,a=this.layer.sourceJSON;return this.addResolvingPromise(this._fetchService(a,t)),Promise.resolve(this)},d.addAttachment=async function(e,t){await this.load();const a=e.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+a+"/addAttachment",r=this._getLayerRequestOptions(),n=this._getFormDataForAttachment(t,r.query);try{const e=await i(s,{body:n});return this._createFeatureEditResult(e.data.addAttachmentResult)}catch(o){throw this._createAttachmentErrorResult(a,o)}},d.updateAttachment=async function(e,t,a){await this.load();const s=e.attributes[this.layer.objectIdField],r=this.layer.parsedUrl.path+"/"+s+"/updateAttachment",n=this._getLayerRequestOptions({query:{attachmentId:t}}),o=this._getFormDataForAttachment(a,n.query);try{const e=await i(r,{body:o});return this._createFeatureEditResult(e.data.updateAttachmentResult)}catch(u){throw this._createAttachmentErrorResult(s,u)}},d.applyEdits=async function(e,t){await this.load();const{layer:a}=this,s=a.infoFor3D,r=null!=s,o=r||(t?.globalIdUsed??!1),l=r?await this._uploadMeshesAndGetAssetMapEditsJSON(e):null,c=e.addFeatures?.map((e=>this._getFeatureJSON(e,s)))??[],d=(await Promise.all(c)).filter(u.isSome),p=e.updateFeatures?.map((e=>this._getFeatureJSON(e,s)))??[],y=(await Promise.all(p)).filter(u.isSome),h=this._getFeatureIds(e.deleteFeatures,o);J.unapplyEditsZUnitScaling(d,y,a.spatialReference);const f=await this._getAttachmentEditsJSON(e),g=a.capabilities.editing.supportsAsyncApplyEdits&&r,m={gdbVersion:t?.gdbVersion||a.gdbVersion,rollbackOnFailure:t?.rollbackOnFailureEnabled,useGlobalIds:o,returnEditMoment:t?.returnEditMoment,usePreviousEditMoment:t?.usePreviousEditMoment,sessionId:t?.sessionId,async:g};t?.returnServiceEditsOption?(m.edits=JSON.stringify([{id:a.layerId,adds:d,updates:y,deletes:h,attachments:f,assetMaps:l}]),m.returnServiceEditsOption=j.toJSON(t?.returnServiceEditsOption),m.returnServiceEditsInSourceSR=t?.returnServiceEditsInSourceSR):(m.adds=d.length?JSON.stringify(d):null,m.updates=y.length?JSON.stringify(y):null,m.deletes=h.length?o?JSON.stringify(h):h.join(","):null,m.attachments=f&&JSON.stringify(f),m.assetMaps=null!=l?JSON.stringify(l):void 0);const R=this._getLayerRequestOptions({method:"post",query:m}),S=t?.returnServiceEditsOption?a.url:a.parsedUrl.path,b=g?await this._asyncApplyEdits(S+"/applyEdits",R):await i(S+"/applyEdits",R);if(!a.capabilities.operations?.supportsEditing&&a.effectiveCapabilities?.operations?.supportsEditing){const e=n.id?.findCredential(a.url);await(e?.refreshToken())}return this._createEditsResult(b)},d.deleteAttachments=async function(e,t){await this.load();const a=e.attributes[this.layer.objectIdField],s=this.layer.parsedUrl.path+"/"+a+"/deleteAttachments";try{return(await i(s,this._getLayerRequestOptions({query:{attachmentIds:t.join(",")},method:"post"}))).data.deleteAttachmentResults.map(this._createFeatureEditResult)}catch(r){throw this._createAttachmentErrorResult(a,r)}},d.fetchRecomputedExtents=function(e={}){const t=e.signal;return this.load({signal:t}).then((async()=>{const t=this._getLayerRequestOptions({...e,query:{returnUpdates:!0}}),{layerId:a,url:s}=this.layer,{data:r}=await i(`${s}/${a}`,t),{id:n,extent:u,fullExtent:l,timeExtent:c}=r,d=u||l;return{id:n,fullExtent:d&&E.fromJSON(d),timeExtent:c&&o.fromJSON({start:c[0],end:c[1]})}}))},d.queryAttachments=async function(e,t={}){await this.load();const a=this._getLayerRequestOptions(t);return this.queryTask.executeAttachmentQuery(e,a)},d.queryFeatures=async function(e,t){return await this.load(),this.queryTask.execute(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryFeaturesJSON=async function(e,t){return await this.load(),this.queryTask.executeJSON(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryObjectIds=async function(e,t){return await this.load(),this.queryTask.executeForIds(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryFeatureCount=async function(e,t){return await this.load(),this.queryTask.executeForCount(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryExtent=async function(e,t){return await this.load(),this.queryTask.executeForExtent(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryRelatedFeatures=async function(e,t){return await this.load(),this.queryTask.executeRelationshipQuery(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryRelatedFeaturesCount=async function(e,t){return await this.load(),this.queryTask.executeRelationshipQueryForCount(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryTopFeatures=async function(e,t){return await this.load(),this.queryTask.executeTopFeaturesQuery(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryTopObjectIds=async function(e,t){return await this.load(),this.queryTask.executeForTopIds(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryTopExtents=async function(e,t){return await this.load(),this.queryTask.executeForTopExtents(e,{...t,query:this._createRequestQueryOptions(t)})},d.queryTopCount=async function(e,t){return await this.load(),this.queryTask.executeForTopCount(e,{...t,query:this._createRequestQueryOptions(t)})},d.fetchPublishingStatus=async function(){if(!T.isHostedAgolService(this.layer.url))return"unavailable";const e=m.join(this.layer.url,"status"),t=await i(e,{query:{f:"json"}});return C.fromJSON(t.data.status)},d.uploadAssets=async function(t,a){const{uploadAssets:s}=await new Promise(((t,a)=>e(["./support/uploadAssets"],t,a)));return s(t,{layer:this.layer,ongoingUploads:this._ongoingAssetUploads},a)},d._asyncApplyEdits=async function(e,t){const a=(await i(e,t)).data.statusUrl;for(;;){const e=(await i(a,{query:{f:"json"},responseType:"json"})).data;switch(e.status){case"Completed":return i(e.resultUrl,{query:{f:"json"},responseType:"json"});case"CompletedWithErrors":throw new l("async-applyEdits-failed","asynchronous applyEdits call failed.");case"Failed ImportChanges":case"InProgress":case"Pending":case"ExportAttachments":case"ExportChanges":case"ExportingData":case"ExportingSnapshot":case"ImportAttachments":case"ProvisioningReplica":case"UnRegisteringReplica":break;default:throw new l("async-applyEdits-failed","asynchronous applyEdits call failed (undefined response status)")}await f.after(P)}},d._createRequestQueryOptions=function(e){const t={...this.layer.customParameters,token:this.layer.apiKey,...e?.query};return this.layer.datesInUnknownTimezone&&(t.timeReferenceUnknownClient=!0),t},d._fetchService=async function(e,t){if(!e){const{data:a}=await i(this.layer.parsedUrl.path,this._getLayerRequestOptions({query:c("featurelayer-advanced-symbols")?{returnAdvancedSymbols:!0}:{},signal:t}));e=a}this.sourceJSON=await this._patchServiceJSON(e,t);const a=e.type;if(!k.has(a))throw new l("feature-layer-source:unsupported-type",`Source type "${a}" is not supported`)},d._patchServiceJSON=async function(e,t){if("Table"!==e.type&&e.geometryType&&!e?.drawingInfo?.renderer&&!e.defaultSymbol){const t=A.createDrawingInfo(e.geometryType).renderer;h.setDeepValue("drawingInfo.renderer",t,e)}if("esriGeometryMultiPatch"===e.geometryType&&e.infoFor3D&&(e.geometryType="mesh"),null==e.extent)try{const{data:a}=await i(this.layer.url,this._getLayerRequestOptions({signal:t}));a.spatialReference&&(e.extent={xmin:0,ymin:0,xmax:0,ymax:0,spatialReference:a.spatialReference})}catch(a){f.throwIfAbortError(a)}return e},d._getFeatureJSON=async function(e,t){const{geometry:a}=e,s={...e.attributes};if(null!=t&&"mesh"===a?.type){const{transformFieldRoles:e}=t,{origin:r,spatialReference:n,transform:i}=a,o=this.layer.spatialReference;await _.initializeProjection(n,o);const u=_.project(r,o);if(s[e.originX]=u.x,s[e.originY]=u.y,s[e.originZ]=u.z??0,null!=i){const{translation:t,scale:r,rotation:u}=i,{vertexSpace:l}=a,c=l.isGeoreferenced?1:g.getMetersPerCartesianUnitForSR(n)/g.getMetersPerCartesianUnitForSR(o);s[e.translationX]=t[0]*c,s[e.translationY]=-t[2]*c,s[e.translationZ]=t[1]*c,s[e.scaleX]=r[0],s[e.scaleY]=r[2],s[e.scaleZ]=r[1],s[e.rotationX]=u[0],s[e.rotationY]=u[2],s[e.rotationZ]=u[1],s[e.rotationDeg]=u[3]}return{geometry:null,attributes:s}}return null==a?{attributes:s}:"mesh"===a.type||"extent"===a.type?null:{geometry:a.toJSON(),attributes:s}},d._getAttachmentEditsJSON=async function(e){const t=await Promise.all((e.addAttachments??[]).map((e=>this._getAttachmentEditJSON(e)))),a=await Promise.all((e.updateAttachments??[]).map((e=>this._getAttachmentEditJSON(e)))),s=e.deleteAttachments??[];return t.length||a.length||s.length?{adds:t,updates:a,deletes:[...s]}:null},d._getAttachmentEditJSON=async function(e){const{feature:t,attachment:a}=e,{globalId:s,name:r,contentType:n,data:i,uploadId:o}=a,u={globalId:s,parentGlobalId:null,contentType:null,name:null,uploadId:null,data:null};if(t&&(u.parentGlobalId="attributes"in t?t.attributes&&t.attributes[this.layer.globalIdField]:t.globalId),o)u.uploadId=o;else if(i){const e=await m.parseData(i);e&&(u.contentType=e.mediaType,u.data=e.data),i instanceof File&&(u.name=i.name)}return r&&(u.name=r),n&&(u.contentType=n),u},d._uploadMeshesAndGetAssetMapEditsJSON=async function(e){const{addAssetFeatures:t}=e;if(!t?.length)return null;const a=await this._filterRedundantAssetMaps(t);if(!t?.length)return null;const s=new Array,r=new Map;for(const n of a){const{geometry:e}=n,{vertexSpace:t}=e;if(t.isRelative)s.push(e);else{const t=q.toRelativeVertexSpace(e);r.set(t,e),n.geometry=t,s.push(t)}}await this.uploadAssets(s);for(const[n,i]of r)i.addExternalSources(n.metadata.externalSources.items);return{adds:this._getAssetMapEditsJSON(a),updates:[],deletes:[]}},d._getAssetMapEditsJSON=function(e){const t=new Array,a=this.layer.globalIdField,s=this.layer.parsedUrl;for(const r of e){const e=r.geometry,{metadata:n}=e,i=n.getExternalSourcesOnService(s),o=r.getAttribute(a);if(0===i.length){y.getLogger(this).error(`Skipping feature ${o}. The mesh it is associated with has not been uploaded to the service and cannot be mapped to it.`);continue}const{source:u}=i.find(O.isOriginalExternal)??i[0],{vertexSpace:l}=e,c=l.isGeoreferenced?["PROJECT_VERTICES"]:[];for(const a of u)1===a.parts.length?t.push({globalId:R.generateBracedUUID(),parentGlobalId:o,assetName:a.assetName,assetHash:a.parts[0].partHash,flags:c}):y.getLogger(this).error(`Skipping asset ${a.assetName}. It does not have exactly one part, so we cannot map it to a feature.`)}return t},d._getFeatureIds=function(e,t){if(!e||0===e.length)return[];if(t&&I.isFeatureIdentifierArrayWithGlobalId(e))return e.map((e=>e.globalId));if(I.isFeatureIdentifierArrayWithObjectId(e))return e.map((e=>e.objectId));const{layer:a}=this,s=t?a.globalIdField:a.objectIdField;return s?e.map((e=>e.getAttribute(s))):[]},d._createEditsResult=function(e){const t=e.data,{layerId:a}=this.layer,s=[];let r=null;if(Array.isArray(t))for(const u of t)s.push({id:u.id,editedFeatures:u.editedFeatures}),u.id===a&&(r={addResults:u.addResults??[],updateResults:u.updateResults??[],deleteResults:u.deleteResults??[],attachments:u.attachments,editMoment:u.editMoment});else r=t;const n=r?.assetMaps;if(n){for(const e of n.addResults)e.success||y.getLogger(this).error(`Failed to map asset to feature with globalId ${e.globalId}.`);for(const e of n.updateResults)e.success||y.getLogger(this).error(`Failed to map asset to feature with globalId ${e.globalId}.`)}const i=r?.attachments,o={addFeatureResults:r?.addResults?.map(this._createFeatureEditResult,this)??[],updateFeatureResults:r?.updateResults?.map(this._createFeatureEditResult,this)??[],deleteFeatureResults:r?.deleteResults?.map(this._createFeatureEditResult,this)??[],addAttachmentResults:i&&i.addResults?i.addResults.map(this._createFeatureEditResult,this):[],updateAttachmentResults:i&&i.updateResults?i.updateResults.map(this._createFeatureEditResult,this):[],deleteAttachmentResults:i&&i.deleteResults?i.deleteResults.map(this._createFeatureEditResult,this):[]};if(r?.editMoment&&(o.editMoment=r.editMoment),s.length>0){o.editedFeatureResults=[];for(const e of s){const{editedFeatures:t}=e,a=t?.spatialReference?new U(t.spatialReference):null;o.editedFeatureResults.push({layerId:e.id,editedFeatures:{adds:t?.adds?.map((e=>this._createEditedFeature(e,a)))||[],updates:t?.updates?.map((e=>({original:this._createEditedFeature(e[0],a),current:this._createEditedFeature(e[1],a)})))||[],deletes:t?.deletes?.map((e=>this._createEditedFeature(e,a)))||[],spatialReference:a}})}}return o},d._createEditedFeature=function(e,t){return new r({attributes:e.attributes,geometry:w.fromJSON({...e.geometry,spatialReference:t})})},d._createFeatureEditResult=function(e){const t=!0===e.success?null:e.error||{code:void 0,description:void 0};return{objectId:e.objectId,globalId:e.globalId,error:t?new l("feature-layer-source:edit-failure",t.description,{code:t.code}):null}},d._createAttachmentErrorResult=function(e,t){const a=t.details.messages&&t.details.messages[0]||t.message,s=t.details.httpStatus||t.details.messageCode;return{objectId:e,globalId:null,error:new l("feature-layer-source:attachment-failure",a,{code:s})}},d._getFormDataForAttachment=function(e,t){const a=e instanceof FormData?e:e&&e.elements?new FormData(e):null;if(a)for(const s in t){const e=t[s];null!=e&&(a.set?a.set(s,e):a.append(s,e))}return a},d._getLayerRequestOptions=function(e={}){const{parsedUrl:t,gdbVersion:a,dynamicDataSource:s}=this.layer;return{...e,query:{gdbVersion:a,layer:s?JSON.stringify({source:s}):void 0,...t.query,f:"json",...this._createRequestQueryOptions(e)},responseType:"json"}},d._filterRedundantAssetMaps=async function(e){const{layer:t}=this,{globalIdField:a,infoFor3D:s,parsedUrl:r}=t;if(null==s||null==a)return e;const n=N.getAssetMapTable(s);if(null==n)return e;const i=m.join(r.path,`../${n.id}`),o=new Array,l=new Array;for(const u of e)u.geometry.metadata.getExternalSourcesOnService(r).length>0?l.push(u):o.push(u);const c=l.map((e=>e.getAttribute(a))).filter(u.isSome);if(0===c.length)return e;const{assetMapFieldRoles:{parentGlobalId:d,assetHash:p}}=s,y=new M;y.where=`${d} IN (${c.map((e=>`'${e}'`))})`,y.outFields=[p,d],y.returnGeometry=!1;const h=await v.executeQueryJSON(i,y),{features:f}=h;return 0===f.length?e:[...o,...l.filter((e=>{const t=e.getAttribute(a);if(!t)return!0;const{metadata:s}=e.geometry,n=f.filter((e=>e.getAttribute(d)===t));if(0===n.length)return!0;const i=n.map((e=>e.getAttribute(p)));return s.getExternalSourcesOnService(r).flatMap((({source:e})=>e.flatMap((e=>e.parts.map((e=>e.partHash)))))).some((e=>i.every((t=>e!==t))))}))]},t._createClass(s,[{key:"queryTask",get:function(){const{capabilities:e,parsedUrl:t,dynamicDataSource:a,infoFor3D:s,gdbVersion:r,spatialReference:n,fieldsIndex:i}=this.layer,o=c("featurelayer-pbf")&&e?.query.supportsFormatPBF&&null==s,u=e?.operations?.supportsQueryAttachments??!1;return new x({url:t.path,pbfSupported:o,fieldsIndex:i,infoFor3D:s,dynamicDataSource:a,gdbVersion:r,sourceSpatialReference:n,queryAttachmentsSupported:u})}}]),s}(p);a.__decorate([S.property()],D.prototype,"type",void 0),a.__decorate([S.property({constructOnly:!0})],D.prototype,"layer",void 0),a.__decorate([S.property({readOnly:!0})],D.prototype,"queryTask",null),D=a.__decorate([F.subclass("esri.layers.graphics.sources.FeatureLayerSource")],D);const P=1e3;return D}));
