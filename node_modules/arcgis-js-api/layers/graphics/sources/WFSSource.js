/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../geometry","../../../core/Error","../../../core/HandleOwner","../../../core/has","../../../core/Loadable","../../../core/promiseUtils","../../../core/workers/workers","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/accessorSupport/decorators/subclass","../../../geometry/support/typeUtils","./support/clientSideDefaults","../../ogc/wfsUtils","../../../rest/support/FeatureSet","../../../geometry/Extent"],(function(e,t,r,o,a,s,n,i,c,u,l,p,y,d,f,m,S,w,h){"use strict";e.WFSSource=function(e){function r(){var t;return(t=e.apply(this,arguments)||this)._connection=null,t.capabilities=m.createCapabilities(!1,!1),t.type="wfs",t.refresh=c.debounce((async e=>{await t.load();const{extent:r}=await t._connection.invoke("refresh",e);return r&&(t.sourceJSON.extent=r),{dataChanged:!0,updates:{extent:t.sourceJSON.extent}}})),t}t._inherits(r,e);var o=r.prototype;return o.load=function(e){const t=null!=e?e.signal:null;return this.addResolvingPromise(this._startWorker({signal:t})),Promise.resolve(this)},o.destroy=function(){this._connection?.close(),this._connection=null},o.openPorts=async function(){return await this.load(),this._connection.openPorts()},o.queryFeatures=async function(e,t={}){await this.load(t);const r=await this._connection.invoke("queryFeatures",e?e.toJSON():null,t);return w.fromJSON(r)},o.queryFeaturesJSON=async function(e,t={}){return await this.load(t),this._connection.invoke("queryFeatures",e?e.toJSON():null,t)},o.queryFeatureCount=async function(e,t={}){return await this.load(t),this._connection.invoke("queryFeatureCount",e?e.toJSON():null,t)},o.queryObjectIds=async function(e,t={}){return await this.load(t),this._connection.invoke("queryObjectIds",e?e.toJSON():null,t)},o.queryExtent=async function(e,t={}){await this.load(t);const r=await this._connection.invoke("queryExtent",e?e.toJSON():null,t);return{count:r.count,extent:h.fromJSON(r.extent)}},o.querySnapping=async function(e,t={}){return await this.load(t),this._connection.invoke("querySnapping",e,t)},o._createLoadOptions=async function(e){const{url:t,customParameters:r,name:o,namespaceUri:s,spatialReference:n,fields:i,geometryType:c,swapXY:u}=this.layer;if(!t)throw new a("wfs-layer:missing-url","WFSLayer must be created with a url");this.wfsCapabilities||(this.wfsCapabilities=await S.getCapabilities(t,{customParameters:r,...e}));const l=["fields","geometryType","name","namespaceUri","spatialReference","swapXY"].some((e=>null==this.layer[e]))?await S.getWFSLayerInfo(this.wfsCapabilities,o,s,{spatialReference:n,customParameters:r,signal:e?.signal}):{...S.prepareWFSLayerFields(i??[]),geometryType:c,name:o,namespaceUri:s,spatialReference:n,swapXY:u},p=S.findFeatureType(this.wfsCapabilities.readFeatureTypes(),l.name,l.namespaceUri),y=f.featureGeometryTypeKebabDictionary.toJSON(l.geometryType);return{customParameters:r,featureType:p,fields:l.fields?.map((e=>e.toJSON()))??[],geometryField:l.geometryField,geometryType:y,getFeatureUrl:this.wfsCapabilities.operations.GetFeature.url,getFeatureOutputFormat:this.wfsCapabilities.operations.GetFeature.outputFormat,objectIdField:l.objectIdField,spatialReference:l.spatialReference.toJSON(),swapXY:!!l.swapXY}},o._startWorker=async function(e){const[t,r]=await c.eachAlways([this._createLoadOptions(e),u.open("WFSSourceWorker",{...e,strategy:n("feature-layers-workers")?"dedicated":"local"})]),o=t.error||r.error||null,a=r.value||null;if(o)throw a&&a.close(),o;const s=t.value;this._connection=r.value;const i=(await this._connection.invoke("load",s,e)).extent;this.sourceJSON={extent:i,fields:s.fields,geometryType:s.geometryType,objectIdField:s.objectIdField,geometryField:s.geometryField,drawingInfo:m.createDrawingInfo(s.geometryType),name:s.featureType.title,wfsInfo:{name:s.featureType.name,featureUrl:s.getFeatureUrl,maxFeatures:3e3,swapXY:s.swapXY,supportedSpatialReferences:s.featureType.supportedSpatialReferences,version:"2.0.0",wfsNamespace:s.featureType.namespaceUri}}},t._createClass(r)}(s.HandleOwnerMixin(i)),r.__decorate([l.property()],e.WFSSource.prototype,"capabilities",void 0),r.__decorate([l.property({constructOnly:!0})],e.WFSSource.prototype,"layer",void 0),r.__decorate([l.property()],e.WFSSource.prototype,"sourceJSON",void 0),r.__decorate([l.property()],e.WFSSource.prototype,"type",void 0),r.__decorate([l.property()],e.WFSSource.prototype,"wfsCapabilities",void 0),e.WFSSource=r.__decorate([d.subclass("esri.layers.graphics.sources.WFSSource")],e.WFSSource),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
