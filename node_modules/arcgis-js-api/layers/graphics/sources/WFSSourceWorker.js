/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../core/asyncUtils","../../../core/Error","../../../core/Logger","../../../core/promiseUtils","../../../geometry/support/spatialReferenceUtils","../featureConversionUtils","../data/FeatureStore","../data/projectionSupport","../data/QueryEngine","./geojson/geojson","./support/sourceUtils","../../ogc/wfsUtils","../../support/FieldsIndex"],(function(e,t,r,s,n,a,i,o,u,c,h,p,y,l){"use strict";return function(){function g(){this._queryEngine=null,this._customParameters=null,this._snapshotFeatures=async e=>{const{objectIdField:t}=this._queryEngine,r=await y.getFeature(this._getFeatureUrl??"",this._featureType.typeName,this._getFeatureOutputFormat,{customParameters:this._customParameters,dateFields:this._queryEngine.fieldsIndex.dateFields.map((e=>e.name)),signal:e});await h.validateGeoJSON(r),n.throwIfAborted(e);const s=h.createOptimizedFeatures(r,{geometryType:this._queryEngine.geometryType,hasZ:!1,objectIdField:t});if(!a.equals(this._queryEngine.spatialReference,a.WGS84))for(const n of s)null!=n.geometry&&(n.geometry=i.convertFromGeometry(u.project(i.convertToGeometry(n.geometry,this._queryEngine.geometryType,!1,!1),a.WGS84,this._queryEngine.spatialReference)));let o=1;for(const n of s){const e={};p.mixAttributes(this._fieldsIndex,e,n.attributes,!0),n.attributes=e,null==n.attributes[t]&&(n.objectId=n.attributes[t]=o++)}return s}}var f=g.prototype;return f.destroy=function(){this._queryEngine?.destroy(),this._queryEngine=null},f.load=async function(e,t){const{getFeatureUrl:r,getFeatureOutputFormat:s,spatialReference:a,fields:i,geometryType:u,featureType:h,objectIdField:p,customParameters:y}=e;this._featureType=h,this._customParameters=y,this._getFeatureUrl=r,this._getFeatureOutputFormat=s,this._fieldsIndex=new l(i),await this._checkProjection(a),n.throwIfAborted(t),this._queryEngine=new c.QueryEngine({fields:i,geometryType:u,hasM:!1,hasZ:!1,objectIdField:p,spatialReference:a,timeInfo:null,featureStore:new o({geometryType:u,hasM:!1,hasZ:!1})});const g=await this._snapshotFeatures(t.signal);return this._queryEngine.featureStore.addMany(g),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}},f.applyEdits=async function(){throw new r("wfs-source:editing-not-supported","applyEdits() is not supported on WFSLayer")},f.queryFeatures=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)},f.queryFeatureCount=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)},f.queryObjectIds=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)},f.queryExtent=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)},f.querySnapping=async function(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)},f.refresh=async function(e){return this._customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=t.createTask(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),e&&this._queryEngine.featureStore.addMany(e)}),(e=>{this._queryEngine.featureStore.clear(),n.isAbortError(e)||s.getLogger("esri.layers.WFSLayer").error(new r("wfs-layer:getfeature-error","An error occurred during the GetFeature request",{error:e}))})),await this._waitSnapshotComplete(),{extent:(await this._queryEngine.fetchRecomputedExtents()).fullExtent}},f._waitSnapshotComplete=async function(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}},f._checkProjection=async function(e){try{await u.checkProjectionSupport(a.WGS84,e)}catch{throw new r("unsupported-projection","Projection not supported",{spatialReference:e})}},e._createClass(g)}()}));
