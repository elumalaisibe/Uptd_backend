/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../request","../../../../core/asyncUtils","../../../../core/Error","../../../../core/Logger","../../../../core/promiseUtils","../../../../geometry/support/jsonUtils","../../../../geometry/support/spatialReferenceUtils","../../featureConversionUtils","../../data/FeatureStore","../../data/projectionSupport","../../data/QueryEngine","./geojson","../support/clientSideDefaults","../support/sourceUtils","../../../support/FieldsIndex","../../../support/fieldType","../../../support/fieldUtils"],(function(e,t,i,s,n,r,a,o,u,l,c,d,p,y,h,f,m,g){"use strict";const _={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};return function(){function F(){this._queryEngine=null,this._snapshotFeatures=async e=>{const t=await this._fetch(e);return this._createFeatures(t)}}var E=F.prototype;return E.destroy=function(){this._queryEngine?.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null},E.load=async function(e,t={}){this._loadOptions={url:e.url,customParameters:e.customParameters};const i=[];await this._checkProjection(e.spatialReference);let n=null;e.url&&(n=await this._fetch(t?.signal));const r=p.inferLayerProperties(n,{geometryType:e.geometryType}),a=e.fields||r.fields||[],u=null!=e.hasZ?e.hasZ:r.hasZ,c=r.geometryType;let h=e.objectIdField||r.objectIdFieldName||"__OBJECTID";const F=e.spatialReference||o.WGS84;let E=e.timeInfo;a===r.fields&&r.unknownFields.length>0&&i.push({name:"geojson-layer:unknown-field-types",message:"Some fields types couldn't be inferred from the features and were dropped",details:{unknownFields:r.unknownFields}});let I=new f(a).get(h);I?("esriFieldTypeString"!==I.type&&(I.type="esriFieldTypeOID"),I.editable=!1,I.nullable=!1,h=I.name):(I={alias:h,name:h,type:"string"===r.objectIdFieldType?"esriFieldTypeString":"esriFieldTypeOID",editable:!1,nullable:!1},a.unshift(I));const b={};for(const o of a){if(null==o.name&&(o.name=o.alias),null==o.alias&&(o.alias=o.name),!o.name)throw new s("geojson-layer:invalid-field-name","field name is missing",{field:o});if(!m.kebabDict.jsonValues.includes(o.type))throw new s("geojson-layer:invalid-field-type",`invalid type for field "${o.name}"`,{field:o});if(o.name!==I.name){const e=g.getFieldDefaultValue(o);void 0!==e&&(b[o.name]=e)}}this._fieldsIndex=new f(a);const T=this._fieldsIndex.requiredFields.indexOf(I);if(T>-1&&this._fieldsIndex.requiredFields.splice(T,1),E){if(E.startTimeField){const e=this._fieldsIndex.get(E.startTimeField);e?(E.startTimeField=e.name,e.type="esriFieldTypeDate"):E.startTimeField=null}if(E.endTimeField){const e=this._fieldsIndex.get(E.endTimeField);e?(E.endTimeField=e.name,e.type="esriFieldTypeDate"):E.endTimeField=null}if(E.trackIdField){const e=this._fieldsIndex.get(E.trackIdField);e?E.trackIdField=e.name:(E.trackIdField=null,i.push({name:"geojson-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:E}}))}E.startTimeField||E.endTimeField||(i.push({name:"geojson-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing",details:{timeInfo:E}}),E=null)}const j=c?y.createDrawingInfo(c):void 0,w={warnings:i,featureErrors:[],layerDefinition:{..._,drawingInfo:j??void 0,templates:y.createDefaultTemplate(b),extent:void 0,geometryType:c,objectIdField:h,fields:a,hasZ:!!u,timeInfo:E}};this._queryEngine=new d.QueryEngine({fields:a,geometryType:c,hasM:!1,hasZ:u,objectIdField:h,spatialReference:F,timeInfo:E,featureStore:new l({geometryType:c,hasM:!1,hasZ:u}),cacheSpatialQueries:!0}),this._createDefaultAttributes=y.createDefaultAttributesFunction(b,h);const S=await this._createFeatures(n);this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,S);const x=this._normalizeFeatures(S,w.warnings,w.featureErrors);this._queryEngine.featureStore.addMany(x);const{fullExtent:q,timeExtent:R}=await this._queryEngine.fetchRecomputedExtents();if(w.layerDefinition.extent=q,R){const{start:e,end:t}=R;w.layerDefinition.timeInfo.timeExtent=[e,t]}return w},E.applyEdits=async function(e){const{spatialReference:t,geometryType:i}=this._queryEngine;return await Promise.all([h.loadGeometryEngineForSimplify(t,i),c.checkProjectionSupport(e.adds,t),c.checkProjectionSupport(e.updates,t)]),await this._waitSnapshotComplete(),this._applyEdits(e)},E.queryFeatures=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQuery(e,t.signal)},E.queryFeatureCount=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForCount(e,t.signal)},E.queryObjectIds=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForIds(e,t.signal)},E.queryExtent=async function(e={},t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForExtent(e,t.signal)},E.querySnapping=async function(e,t={}){return await this._waitSnapshotComplete(),this._queryEngine.executeQueryForSnapping(e,t.signal)},E.refresh=async function(e){this._loadOptions.customParameters=e,this._snapshotTask?.abort(),this._snapshotTask=i.createTask(this._snapshotFeatures),this._snapshotTask.promise.then((e=>{this._queryEngine.featureStore.clear(),this._objectIdGenerator=this._createObjectIdGenerator(this._queryEngine,e);const t=this._normalizeFeatures(e);t&&this._queryEngine.featureStore.addMany(t)}),(e=>{this._queryEngine.featureStore.clear(),r.isAbortError(e)||n.getLogger("esri.layers.GeoJSONLayer").error(new s("geojson-layer:refresh","An error occurred during refresh",{error:e}))})),await this._waitSnapshotComplete();const{fullExtent:t,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:t,timeExtent:a}},E._createFeatures=async function(e){if(null==e)return[];const{geometryType:t,hasZ:i,objectIdField:s}=this._queryEngine,n=p.createOptimizedFeatures(e,{geometryType:t,hasZ:i,objectIdField:s});if(!o.equals(this._queryEngine.spatialReference,o.WGS84))for(const r of n)null!=r.geometry&&(r.geometry=u.convertFromGeometry(c.project(u.convertToGeometry(r.geometry,this._queryEngine.geometryType,this._queryEngine.hasZ,!1),o.WGS84,this._queryEngine.spatialReference)));return n},E._waitSnapshotComplete=async function(){if(this._snapshotTask&&!this._snapshotTask.finished){try{await this._snapshotTask.promise}catch{}return this._waitSnapshotComplete()}},E._fetch=async function(e){const{url:i,customParameters:s}=this._loadOptions,n=(await t(i,{responseType:"json",query:{...s},signal:e})).data;return await p.validateGeoJSON(n),n},E._normalizeFeatures=function(e,t,i){const{objectIdField:s}=this._queryEngine,n=[];for(const r of e){const e=this._createDefaultAttributes(),a=h.mixAttributes(this._fieldsIndex,e,r.attributes,!0,t);a?i?.push(a):(this._assignObjectId(e,r.attributes,!0),r.attributes=e,r.objectId=e[s],n.push(r))}return n},E._applyEdits=async function(e){const{adds:t,updates:i,deletes:s}=e,n={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(n,t),i&&i.length&&this._applyUpdateEdits(n,i),s&&s.length){for(const e of s)n.deleteResults.push(h.createFeatureEditSuccessResult(e));this._queryEngine.featureStore.removeManyById(s)}const{fullExtent:r,timeExtent:a}=await this._queryEngine.fetchRecomputedExtents();return{extent:r,timeExtent:a,featureEditResults:n}},E._applyAddEdits=function(e,t){const{addResults:i}=e,{geometryType:s,hasM:n,hasZ:r,objectIdField:o,spatialReference:l,featureStore:d}=this._queryEngine,p=[];for(const u of t){if(u.geometry&&s!==a.getJsonType(u.geometry)){i.push(h.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=this._createDefaultAttributes(),n=h.mixAttributes(this._fieldsIndex,t,u.attributes);if(n)i.push(n);else{if(this._assignObjectId(t,u.attributes),u.attributes=t,null!=u.uid){const t=u.attributes[o];e.uidToObjectId[u.uid]=t}if(null!=u.geometry){const e=u.geometry.spatialReference??l;u.geometry=c.project(h.simplify(u.geometry,e),e,l)}p.push(u),i.push(h.createFeatureEditSuccessResult(u.attributes[o]))}}d.addMany(u.convertFromFeatures([],p,s,r,n,o))},E._applyUpdateEdits=function({updateResults:e},t){const{geometryType:i,hasM:s,hasZ:n,objectIdField:r,spatialReference:o,featureStore:l}=this._queryEngine;for(const d of t){const{attributes:t,geometry:p}=d,y=t&&t[r];if(null==y){e.push(h.createFeatureEditErrorResult(`Identifier field ${r} missing`));continue}if(!l.has(y)){e.push(h.createFeatureEditErrorResult(`Feature with object id ${y} missing`));continue}const f=u.convertToFeature(l.getFeature(y),i,n,s);if(null!=p){if(i!==a.getJsonType(p)){e.push(h.createFeatureEditErrorResult("Incorrect geometry type."));continue}const t=p.spatialReference??o;f.geometry=c.project(h.simplify(p,t),t,o)}if(t){const i=h.mixAttributes(this._fieldsIndex,f.attributes,t);if(i){e.push(i);continue}}l.add(u.convertFromFeature(f,i,n,s,r)),e.push(h.createFeatureEditSuccessResult(y))}},E._createObjectIdGenerator=function(e,t){const i=e.fieldsIndex.get(e.objectIdField);if("esriFieldTypeString"===i.type)return()=>i.name+"-"+Date.now().toString(16);let s=Number.NEGATIVE_INFINITY;for(const n of t)n.objectId&&(s=Math.max(s,n.objectId));return s=Math.max(0,s)+1,()=>s++},E._assignObjectId=function(e,t,i=!1){const s=this._queryEngine.objectIdField;e[s]=i&&s in t?t[s]:this._objectIdGenerator()},E._checkProjection=async function(e){try{await c.checkProjectionSupport(o.WGS84,e)}catch{throw new s("geojson-layer","Projection not supported")}},e._createClass(F)}()}));
