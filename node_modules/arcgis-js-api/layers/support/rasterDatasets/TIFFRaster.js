/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../geometry","../../../core/arrayUtils","../../../core/Error","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/has","../../../core/accessorSupport/decorators/subclass","../RasterInfo","../RasterStorageInfo","./BaseRaster","./DBFParser","./pamParser","../rasterFormats/TiffDecoder","../rasterFormats/TiffTags","../rasterFunctions/stretchUtils","../rasterTransforms/PolynomialTransform","../../../rest/support/FeatureSet","../../../geometry/SpatialReference","../../../geometry/Extent","../../../geometry/Point"],(function(e,t,r,i,a,s,n,o,l,f,u,c,p,h,d,m,y,g,T,I,x,w){"use strict";const _=(e,t)=>e.get(t)?.values,F=(e,t)=>e.get(t)?.values?.[0];let R=function(t){function r(){var e;return(e=t.apply(this,arguments)||this)._files=null,e._headerInfo=null,e._bufferSize=1048576,e.datasetFormat="TIFF",e}e._inherits(r,t);var s=r.prototype;return s.open=async function(e){await this.init();const t=e?e.signal:null,{data:r}=await this.request(this.url,{range:{from:0,to:this._bufferSize},responseType:"array-buffer",signal:t});if(!r)throw new a("tiffraster:open","failed to open url "+this.url);this.datasetName=this.url.slice(this.url.lastIndexOf("/")+1,this.url.lastIndexOf("."));const{littleEndian:i,firstIFDPos:s,isBigTiff:n}=d.parseSignature(r),o=[];await this._readIFDs(o,r,i,s,0,n?8:4,t);const{imageInfo:l,rasterInfo:f}=this._parseIFDs(o),u=d.getPyramidIFDs(o),c=d.getMaskIFDs(o);if(this._headerInfo={littleEndian:i,isBigTiff:n,ifds:o,pyramidIFDs:u,maskIFDs:c,...l},this._set("rasterInfo",f),!l.isSupported)throw new a("tiffraster:open","this tiff is not supported: "+l.message);if(!l.tileWidth)throw new a("tiffraster:open","none-tiled tiff is not optimized for access, convert to COG and retry.");const p=o[0].get("PREDICTOR")?.values?.[0],h=o[0].get("SAMPLEFORMAT")?.values?.[0];if(3===h&&2===p)throw new a("tiffraster:open","unsupported horizontal difference encoding. Predictor=3 is supported for floatting point data");const{skipExtensions:m=[]}=this.ioConfig;if(!m.includes("aux.xml")){const t=await this._fetchAuxiliaryMetaData(e);null!=t&&this._processPAMInfo(t,f)}m.includes("vat.dbf")||1!==f.bandCount||"u8"!==f.pixelType||(f.attributeTable=await this._fetchAuxiliaryTable(e),null!=f.attributeTable&&(f.keyProperties.DataType="thematic")),this.updateTileInfo()},s.fetchRawTile=async function(e,t,r,i={}){if(!this._headerInfo?.isSupported||this.isBlockOutside(e,t,r))return null;const a=await this._fetchRawTiffTile(e,t,r,!1,i);if(null!=a&&this._headerInfo.hasMaskBand){const s=await this._fetchRawTiffTile(e,t,r,!0,i);null!=s&&s.pixels[0]instanceof Uint8Array&&(a.mask=s.pixels[0])}return a},s._parseIFDs=function(e){const t=d.getImageInfo(e),{width:r,height:i,tileWidth:a,tileHeight:s,planes:n,pixelType:o,compression:l,firstPyramidLevel:c,maximumPyramidLevel:p,pyramidBlockWidth:m,pyramidBlockHeight:y,tileBoundary:T,affine:R,metadata:S}=t,b=t.extent.spatialReference?.wkt||t.extent.spatialReference?.wkid;let E=h.parseSpatialReference(b),D=!!t.isPseudoGeographic;null==E&&(D=!0,E=new I({wkid:3857}));const v=new x({...t.extent,spatialReference:E}),P=new w(v?{x:v.xmin,y:v.ymax,spatialReference:E}:{x:0,y:0}),k=new u({blockWidth:a,blockHeight:s,pyramidBlockWidth:m,pyramidBlockHeight:y,compression:l,origin:P,firstPyramidLevel:c,maximumPyramidLevel:p,blockBoundary:T}),O=new w({x:(v.xmax-v.xmin)/r,y:(v.ymax-v.ymin)/i,spatialReference:E}),B=S?{BandProperties:S.bandProperties,DataType:S.dataType}:{};let A=null;const L=F(e[0],"PHOTOMETRICINTERPRETATION"),z=_(e[0],"COLORMAP");if(L<=3&&z?.length>3&&z.length%3==0){A=[];const e=z.length/3;for(let t=0;t<e;t++)A.push([t,z[t]>>>8,z[t+e]>>>8,z[t+2*e]>>>8])}const C=new f({width:r,height:i,bandCount:n,pixelType:o,pixelSize:O,storageInfo:k,spatialReference:E,isPseudoSpatialReference:D,keyProperties:B,extent:v,colormap:A,statistics:S?S.statistics:null});return R?.length&&(C.nativeExtent=new x({xmin:-.5,ymin:.5-i,xmax:r-.5,ymax:.5,spatialReference:E}),C.transform=new g({polynomialOrder:1,forwardCoefficients:[R[2]+R[0]/2,R[5]-R[3]/2,R[0],R[3],-R[1],-R[4]]}),C.extent=C.transform.forwardTransform(C.nativeExtent),C.pixelSize=new w({x:(v.xmax-v.xmin)/r,y:(v.ymax-v.ymin)/i,spatialReference:E}),k.origin.x=-.5,k.origin.y=.5),{imageInfo:t,rasterInfo:C}},s._processPAMInfo=function(e,t){if(t.statistics=e.statistics??t.statistics,t.histograms=e.histograms,e.histograms&&null==t.statistics&&(t.statistics=y.estimateStatisticsFromHistograms(e.histograms)),e.transform&&null==t.transform){t.transform=e.transform,t.nativeExtent=t.extent;const r=t.transform.forwardTransform(t.nativeExtent);t.pixelSize=new w({x:(r.xmax-r.xmin)/t.width,y:(r.ymax-r.ymin)/t.height,spatialReference:t.spatialReference}),t.extent=r}t.isPseudoSpatialReference&&e.spatialReference&&(t.spatialReference=e.spatialReference,t.extent.spatialReference=t.nativeExtent.spatialReference=t.storageInfo.origin.spatialReference=t.spatialReference)},s._readIFDs=async function(e,t,r,i,a,s=4,n){if(!i)return null;if(i>=t.byteLength||i<0){t=(await this.request(this.url,{range:{from:i+a,to:i+a+this._bufferSize},responseType:"array-buffer",signal:n})).data,a=i+a,i=0}const o=await this._readIFD(t,r,i,a,m.TIFF_TAGS,s,n);if(e.push(o.ifd),!o.nextIFD)return null;await this._readIFDs(e,t,r,o.nextIFD-a,a,s,n)},s._readIFD=async function(e,t,r,a,s=m.TIFF_TAGS,n=4,o){if(!e)return null;const l=d.parseIFD(e,t,r,a,s,n);if(l.success){const r=[];if(l.ifd?.forEach((e=>{e.values||r.push(e)})),r.length>0){const s=r.map((e=>e.offlineOffsetSize)).filter(i.isSome),n=Math.min.apply(null,s.map((e=>e[0])));if(Math.min.apply(null,s.map((e=>e[0]+e[1])))-n<=this._bufferSize){const{data:i}=await this.request(this.url,{range:{from:n,to:n+this._bufferSize},responseType:"array-buffer",signal:o});e=i,a=n,r.forEach((r=>d.parseFieldValues(e,t,r,a)))}}if(l.ifd?.has("GEOKEYDIRECTORY")){const r=l.ifd.get("GEOKEYDIRECTORY"),i=r?.values;if(i&&i.length>4){const s=i[0]+"."+i[1]+"."+i[2],n=await this._readIFD(e,t,r.valueOffset+6-a,a,m.GEO_KEYS,2,o);r.data=n.ifd,r.data&&r.data.set("GEOTIFFVersion",{id:0,type:2,valueCount:1,valueOffset:null,values:[s]})}}return l}if(l.requiredBufferSize&&l.requiredBufferSize!==e.byteLength){const r=await this.request(this.url,{range:{from:a,to:a+l.requiredBufferSize+4},responseType:"array-buffer",signal:o});return(e=r.data).byteLength<l.requiredBufferSize?null:this._readIFD(e,t,0,a,m.TIFF_TAGS,4,o)}},s._fetchRawTiffTile=async function(e,t,r,i,a={}){const s=this._getTileLocation(e,t,r,i);if(!s)return null;const{ranges:n,actualTileWidth:o,actualTileHeight:l,ifd:f}=s,u=n.map((e=>this.request(this.url,{range:e,responseType:"array-buffer",signal:a.signal}))),c=await Promise.all(u),p=c.map((e=>e.data.byteLength)).reduce(((e,t)=>e+t)),h=1===c.length?c[0].data:new ArrayBuffer(p),d=[0],m=[0];if(c.length>1){const e=new Uint8Array(h);for(let t=0,r=0;t<c.length;t++){const i=c[t].data;e.set(new Uint8Array(i),r),d[t]=r,r+=i.byteLength,m[t]=i.byteLength}}const{blockWidth:y,blockHeight:g}=this.getBlockWidthHeight(e),T=await this.decodePixelBlock(h,{format:"tiff",customOptions:{headerInfo:this._headerInfo,ifd:f,offsets:d,sizes:m},width:y,height:g,planes:null,pixelType:null});if(null==T)return null;let I,x,w;if(o!==y||l!==g){let e=T.mask;if(e)for(I=0;I<g;I++)if(w=I*y,I<l)for(x=o;x<y;x++)e[w+x]=0;else for(x=0;x<y;x++)e[w+x]=0;else for(e=new Uint8Array(y*g),T.mask=e,I=0;I<l;I++)for(w=I*y,x=0;x<o;x++)e[w+x]=1}return T},s._getTileLocation=function(e,t,r,i=!1){const{firstPyramidLevel:a,blockBoundary:s}=this.rasterInfo.storageInfo,n=0===e?0:e-(a-1),{_headerInfo:o}=this;if(!o)return null;const l=i?o.maskIFDs[n]:0===n?o?.ifds[0]:o?.pyramidIFDs[n-1];if(!l)return null;const f=d.isBSQConfig(l,o),u=_(l,"TILEOFFSETS");if(void 0===u)return null;const c=_(l,"TILEBYTECOUNTS"),{minRow:p,minCol:h,maxRow:m,maxCol:y}=s[n];if(t>m||r>y||t<p||r<h)return null;const g=F(l,"IMAGEWIDTH"),T=F(l,"IMAGELENGTH"),I=F(l,"TILEWIDTH"),x=F(l,"TILELENGTH"),w=[];if(f){const{bandCount:e}=this.rasterInfo;for(let i=0;i<e;i++){const e=i*(m+1)*(y+1)+t*(y+1)+r;w[i]={from:u[e],to:u[e]+c[e]-1}}}else{const e=t*(y+1)+r;w.push({from:u[e],to:u[e]+c[e]-1})}for(let d=0;d<w.length;d++)if(null==w[d].from||!w[d].to)return null;return{ranges:w,ifd:l,actualTileWidth:r===y&&g%I||I,actualTileHeight:t===m&&T%x||x}},s._fetchAuxiliaryMetaData=async function(e){try{const{data:t}=await this.request(this.url+".aux.xml",{responseType:"xml",signal:e?.signal});return h.parsePAMInfo(t)}catch{return null}},s._fetchAuxiliaryTable=async function(e){try{const{data:t}=await this.request(this.url+".vat.dbf",{responseType:"array-buffer",signal:e?.signal}),r=p.parse(t);return r?.recordSet?T.fromJSON(r.recordSet):null}catch{return null}},e._createClass(r)}(c);t.__decorate([s.property()],R.prototype,"_files",void 0),t.__decorate([s.property()],R.prototype,"_headerInfo",void 0),t.__decorate([s.property()],R.prototype,"_bufferSize",void 0),t.__decorate([s.property({type:String,json:{write:!0}})],R.prototype,"datasetFormat",void 0),R=t.__decorate([l.subclass("esri.layers.support.rasterDatasets.TIFFRaster")],R);return R}));
