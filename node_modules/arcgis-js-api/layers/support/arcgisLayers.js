/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","exports","../../core/Error","../../core/urlUtils","./arcgisLayerUrl","./fetchService","./layerUtils","./lazyLayerLoader","../../support/requestPresets"],(function(e,r,a,t,l,s,n,o,c){"use strict";const u=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),i={FeatureLayer:!0,SceneLayer:!0};async function y(r){const a=r.properties?.customParameters,t=await f(r.url,a),l={...r.properties,url:r.url};if(!t.sublayerIds)return null!=t.layerOrTableId&&(l.layerId=t.layerOrTableId,l.sourceJSON=t.sourceJSON),new t.Constructor(l);const s=new(0,(await new Promise(((r,a)=>e(["../GroupLayer"],(e=>r(u(e))),a)))).default)({title:t.parsedUrl.title});return d(s,t,l),s}function S(e,r){return e?e.find((e=>e.id===r)):null}function d(e,r,a){function t(e,t){const l={...a,layerId:e,sublayerTitleMode:"service-name"};return null!=t&&(l.sourceJSON=t),new r.Constructor(l)}r.sublayerIds.forEach((a=>{const l=t(a,S(r.sublayerInfos,a));e.add(l)})),r.tableIds.forEach((a=>{const l=t(a,S(r.tableInfos,a));e.tables.add(l)}))}async function f(e,r){let t=l.parse(e);if(null==t&&(t=await p(e,r)),null==t)throw new a("arcgis-layers:url-mismatch","The url '${url}' is not a valid arcgis resource",{url:e});const{serverType:s,sublayer:o}=t;let u;const y={FeatureServer:"FeatureLayer",StreamServer:"StreamLayer",VectorTileServer:"VectorTileLayer"};switch(s){case"MapServer":if(null!=o)u="FeatureLayer";else{u=await v(e,r)?"TileLayer":"MapImageLayer"}break;case"ImageServer":{const a=await c.fetchArcGISServiceJSON(e,{customParameters:r}),{tileInfo:t,cacheType:l}=a;u=t?"LERC"!==t?.format?.toUpperCase()||l&&"elevation"!==l.toLowerCase()?"ImageryTileLayer":"ElevationLayer":"ImageryLayer";break}case"SceneServer":{const e=await c.fetchArcGISServiceJSON(t.url.path,{customParameters:r});if(u="SceneLayer",e){const r=e?.layers;if("Voxel"===e?.layerType)u="VoxelLayer";else if(r?.length){const e=r[0]?.layerType;null!=e&&null!=n.sceneServiceLayerTypeToClassName[e]&&(u=n.sceneServiceLayerTypeToClassName[e])}}break}default:u=y[s]}const S="FeatureServer"===s,d={parsedUrl:t,Constructor:null,layerOrTableId:S?o:void 0,sublayerIds:null,tableIds:null};if(i[u]&&null==o){const a=await m(e,s,r);S&&(d.sublayerInfos=a.layerInfos,d.tableInfos=a.tableInfos);1!==a.layerIds.length+a.tableIds.length?(d.sublayerIds=a.layerIds,d.tableIds=a.tableIds):S&&(d.layerOrTableId=a.layerIds[0]??a.tableIds[0],d.sourceJSON=a.layerInfos?.[0]??a.tableInfos?.[0])}return d.Constructor=await b(u),d}async function p(e,r){const a=await c.fetchArcGISServiceJSON(e,{customParameters:r});let s=null,n=null;const o=a.type;if("Feature Layer"===o||"Table"===o?(s="FeatureServer",n=a.id??null):"indexedVector"===o?s="VectorTileServer":a.hasOwnProperty("mapName")?s="MapServer":a.hasOwnProperty("bandCount")&&a.hasOwnProperty("pixelSizeX")?s="ImageServer":a.hasOwnProperty("maxRecordCount")&&a.hasOwnProperty("allowGeometryUpdates")?s="FeatureServer":a.hasOwnProperty("streamUrls")?s="StreamServer":I(a)?(s="SceneServer",n=a.id):a.hasOwnProperty("layers")&&I(a.layers?.[0])&&(s="SceneServer"),!s)return null;const u=null!=n?l.parseNonStandardSublayerUrl(e):null;return{title:null!=u&&a.name||t.getFilename(e),serverType:s,sublayer:n,url:{path:null!=u?u.serviceUrl:t.urlToObject(e).path}}}function I(e){return null!=e&&e.hasOwnProperty("store")&&e.hasOwnProperty("id")&&"number"==typeof e.id}async function m(e,r,a){let t,l=!1;if("FeatureServer"===r){const r=await s.fetchFeatureService(e,{customParameters:a});l=!!r.layersJSON,t=r.layersJSON||r.serviceJSON}else t=await c.fetchArcGISServiceJSON(e,{customParameters:a});const n=t?.layers,o=t?.tables;return{layerIds:n?.map((e=>e.id)).reverse()||[],tableIds:o?.map((e=>e.id)).reverse()||[],layerInfos:l?n:[],tableInfos:l?o:[]}}async function b(e){return(0,o.layerLookupMap[e])()}async function v(e,r){return(await c.fetchArcGISServiceJSON(e,{customParameters:r})).tileInfo}r.fromUrl=y,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
