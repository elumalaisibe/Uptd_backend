/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../kernel","../../request","../../core/promiseUtils","../FeatureLayer","../../portal/Portal","../../portal/PortalItem"],(function(t,r,e,n,a,i,o,s){"use strict";let l=function(){function t(t,r,e,n){this._parsedUrl=t,this._portalItem=r,this._apiKey=e,this.signal=n,this._rootDocument=null;const a=this._parsedUrl?.path.match(/^(.*)\/SceneServer\/layers\/([\d]*)\/?$/i);a&&(this._urlParts={root:a[1],layerId:parseInt(a[2],10)})}var l=t.prototype;return l.fetch=async function(){if(!this._urlParts)return null;const t=this._portalItem??await this._portalItemFromServiceItemId();if(null==t)return this._loadFromUrl();const r=await this._findAndLoadRelatedPortalItem(t);return null==r?null:this._loadFeatureLayerFromPortalItem(r)},l.fetchPortalItem=async function(){if(!this._urlParts)return null;const t=this._portalItem??await this._portalItemFromServiceItemId();return null==t?null:this._findAndLoadRelatedPortalItem(t)},l._fetchRootDocument=async function(){if(null!=this._rootDocument)return this._rootDocument;if(null==this._urlParts)return this._rootDocument={},{};const t={query:{f:"json",token:this._apiKey},responseType:"json",signal:this.signal},r=`${this._urlParts.root}/SceneServer`;try{const e=await n(r,t);this._rootDocument=e.data}catch{this._rootDocument={}}return this._rootDocument},l._fetchServiceOwningPortalUrl=async function(){const t=this._parsedUrl?.path,r=t?e.id?.findServerInfo(t):null;if(r?.owningSystemUrl)return r.owningSystemUrl;const i=t?t.replace(/(.*\/rest)\/.*/i,"$1")+"/info":null;try{const t=(await n(i,{query:{f:"json"},responseType:"json",signal:this.signal})).data.owningSystemUrl;if(t)return t}catch(o){a.throwIfAbortError(o)}return null},l._findAndLoadRelatedPortalItem=async function(t){try{return(await t.fetchRelatedItems({relationshipType:"Service2Service",direction:"reverse"},{signal:this.signal})).find((t=>"Feature Service"===t.type))||null}catch(r){return a.throwIfAbortError(r),null}},l._loadFeatureLayerFromPortalItem=async function(t){await t.load({signal:this.signal});const r=await this._findMatchingAssociatedSublayerUrl(t.url??"");return new i({url:r,portalItem:t}).load({signal:this.signal})},l._loadFromUrl=async function(){const t=await this._findMatchingAssociatedSublayerUrl(`${this._urlParts?.root}/FeatureServer`);return new i({url:t}).load({signal:this.signal})},l._findMatchingAssociatedSublayerUrl=async function(t){const r=t.replace(/^(.*FeatureServer)(\/[\d]*\/?)?$/i,"$1"),e=this._urlParts?.layerId,a=this._fetchRootDocument(),i=t=>{const e={query:{f:"json"},responseType:"json",authMode:t,signal:this.signal};return n(r,e)},o=i("anonymous").catch((()=>i("no-prompt"))),[s,l]=await Promise.all([o,a]),u=l&&l.layers,c=s.data&&s.data.layers;if(!Array.isArray(c))throw new Error("expected layers array");if(Array.isArray(u))for(let n=0;n<Math.min(u.length,c.length);n++){if(u[n].id===e)return`${r}/${c[n].id}`}else if(null!=e&&e<c.length)return`${r}/${c[e].id}`;throw new Error("could not find matching associated sublayer")},l._portalItemFromServiceItemId=async function(){const t=(await this._fetchRootDocument()).serviceItemId;if(!t)return null;const r=new s({id:t,apiKey:this._apiKey}),e=await this._fetchServiceOwningPortalUrl();null!=e&&(r.portal=new o({url:e}));try{return r.load({signal:this.signal})}catch(n){return a.throwIfAbortError(n),null}},r._createClass(t)}();t.FetchAssociatedFeatureLayer=l,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
