/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../rasterFunctionConstants","../rasterFormats/pixelRangeUtils","./BaseRasterFunction","./LocalFunctionArguments","./localUtils"],(function(t,e,s,n,o,r,u,a,i,c,l,p){"use strict";let d=function(e){function s(){var t;return(t=e.apply(this,arguments)||this).functionName="Local",t.functionArguments=null,t.rasterArgumentNames=["rasters"],t}t._inherits(s,e);var n=s.prototype;return n._bindSourceRasters=function(){const{sourceRasterInfos:t}=this,e=t[0],{bandCount:s}=e,{processAsMultiband:n}=this.functionArguments;if(t.some((t=>t.bandCount!==s)))return{success:!1,supportsGPU:!1,error:"local-function: input rasters do not have same band count"};const{operation:o,rasters:r}=this.functionArguments,u=p.operandsCount[o];if(!(999===u||r.length===u||r.length<=1&&1===u))return{success:!1,supportsGPU:!1,error:`local-function: the length of functionArguments.rasters does not match operation's requirement: ${u}`};this.outputPixelType=this._getOutputPixelType("f32");const a=e.clone();a.pixelType=this.outputPixelType,a.statistics=null,a.histograms=null,a.colormap=null,a.attributeTable=null,a.bandCount=999!==u||n?s:1;const i=p.getOutputDomain(o);if(i){a.statistics=[];for(let t=0;t<a.bandCount;t++)a.statistics[t]={min:i[0],max:i[1],avg:(i[0]+i[1])/2,stddev:(i[0]+i[1])/10}}this.rasterInfo=a;return{success:!0,supportsGPU:1===a.bandCount&&u<=3&&(o<11||o>16)}},n._processPixels=function(t){const{pixelBlocks:e}=t;return null==e||e.some((t=>null==t))?null:p.local(e,this.functionArguments.operation,{processAsMultiband:this.functionArguments.processAsMultiband,outputPixelType:this.outputPixelType??void 0})},n._getWebGLParameters=function(){const{operation:t}=this.functionArguments,e=p.operandsCount[t],s=Object.keys(a.localOperators).find((e=>a.localOperators[e]===t))?.toLowerCase()??"undefined",n=this.outputPixelType??"f32";let[o,r]=i.getPixelValueRange(n);const u=n.startsWith("u")||n.startsWith("s");return u&&(o-=1e-4,r+=1e-4),{imageCount:e,operationName:s,domainRange:[o,r],isOutputRounded:u}},t._createClass(s)}(c);e.__decorate([s.property({json:{write:!0,name:"rasterFunction"}})],d.prototype,"functionName",void 0),e.__decorate([s.property({type:l,json:{write:!0,name:"rasterFunctionArguments"}})],d.prototype,"functionArguments",void 0),e.__decorate([s.property()],d.prototype,"rasterArgumentNames",void 0),d=e.__decorate([u.subclass("esri.layers.support.rasterFunctions.LocalFunction")],d);return d}));
