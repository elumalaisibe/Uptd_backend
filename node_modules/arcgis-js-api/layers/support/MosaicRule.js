/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/deprecate","../../core/jsonMap","../../core/JSONSupport","../../core/lang","../../core/Logger","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/ensureType","../../geometry/Point","./DimensionalDefinition","./RasterFunction"],(function(e,t,r,o,i,n,s,a,c,l,p,d,u,m,y,h){"use strict";var _;const w=o.strict()({MT_FIRST:"first",MT_LAST:"last",MT_MIN:"min",MT_MAX:"max",MT_MEAN:"mean",MT_BLEND:"blend",MT_SUM:"sum"}),g=o.strict()({esriMosaicNone:"none",esriMosaicCenter:"center",esriMosaicNadir:"nadir",esriMosaicViewpoint:"viewpoint",esriMosaicAttribute:"attribute",esriMosaicLockRaster:"lock-raster",esriMosaicNorthwest:"northwest",esriMosaicSeamline:"seamline"});function M(e){let t;switch(e?e.toLowerCase().replace("esrimosaic",""):""){case"byattribute":case"attribute":t="esriMosaicAttribute";break;case"lockraster":t="esriMosaicLockRaster";break;case"center":t="esriMosaicCenter";break;case"northwest":t="esriMosaicNorthwest";break;case"nadir":t="esriMosaicNadir";break;case"viewpoint":t="esriMosaicViewpoint";break;case"seamline":t="esriMosaicSeamline";break;default:t="esriMosaicNone"}return g.fromJSON(t)}let f=_=function(t){function o(e){var r;return(r=t.call(this,e)||this).ascending=!0,r.itemRasterFunction=null,r.lockRasterIds=null,r.method=null,r.multidimensionalDefinition=null,r.objectIds=null,r.operation=null,r.sortField=null,r.sortValue=null,r.viewpoint=null,r.where=null,r}e._inherits(o,t);var i=o.prototype;return i.readAscending=function(e,t){return null!=t.ascending?t.ascending:null==t.sortAscending||t.sortAscending},i.readMethod=function(e,t){return M(t.mosaicMethod||t.defaultMosaicMethod)},i.writeMultidimensionalDefinition=function(e,t,r){null!=e&&(e=e.filter((({variableName:e,dimensionName:t})=>e&&"*"!==e||t))).length&&(t[r]=e.map((e=>e.toJSON())))},i.readOperation=function(e,t){const r=t.mosaicOperation,o=t.mosaicOperator&&t.mosaicOperator.toLowerCase(),i=r||(o?w.toJSON(o):null);return w.fromJSON(i)||"first"},i.castSortValue=function(e){return null==e||"string"==typeof e||"number"==typeof e?e:`${e}`},i.clone=function(){return new _({ascending:this.ascending,itemRasterFunction:n.clone(this.itemRasterFunction),lockRasterIds:n.clone(this.lockRasterIds),method:this.method,multidimensionalDefinition:n.clone(this.multidimensionalDefinition),objectIds:n.clone(this.objectIds),operation:this.operation,sortField:this.sortField,sortValue:this.sortValue,viewpoint:n.clone(this.viewpoint),where:this.where})},e._createClass(o,[{key:"itemRenderingRule",get:function(){return r.deprecatedProperty(s.getLogger(this),"itemRenderingRule",{replacement:"itemRasterFunction",version:"4.27",warnOnce:!0}),this._get("itemRasterFunction")},set:function(e){r.deprecatedProperty(s.getLogger(this),"itemRenderingRule",{replacement:"itemRasterFunction",version:"4.27",warnOnce:!0}),this._set("itemRasterFunction",e)}}]),o}(i.JSONSupport);t.__decorate([a.property({type:Boolean,json:{write:!0}})],f.prototype,"ascending",void 0),t.__decorate([l.reader("ascending",["ascending","sortAscending"])],f.prototype,"readAscending",null),t.__decorate([a.property({type:h,json:{name:"itemRenderingRule",write:!0}})],f.prototype,"itemRasterFunction",void 0),t.__decorate([a.property({type:h})],f.prototype,"itemRenderingRule",null),t.__decorate([a.property({type:[u.Integer],json:{write:{overridePolicy(){return{enabled:"lock-raster"===this.method}}}}})],f.prototype,"lockRasterIds",void 0),t.__decorate([a.property({type:String,json:{type:g.jsonValues,write:{target:"mosaicMethod",writer:g.write}}})],f.prototype,"method",void 0),t.__decorate([l.reader("method",["mosaicMethod","defaultMosaicMethod"])],f.prototype,"readMethod",null),t.__decorate([a.property({type:[y],json:{write:!0}})],f.prototype,"multidimensionalDefinition",void 0),t.__decorate([d.writer("multidimensionalDefinition")],f.prototype,"writeMultidimensionalDefinition",null),t.__decorate([a.property({type:[u.Integer],json:{name:"fids",write:!0}})],f.prototype,"objectIds",void 0),t.__decorate([a.property({json:{type:w.jsonValues,read:{reader:w.read},write:{target:"mosaicOperation",writer:w.write}}})],f.prototype,"operation",void 0),t.__decorate([l.reader("operation",["mosaicOperation","mosaicOperator"])],f.prototype,"readOperation",null),t.__decorate([a.property({type:String,json:{write:{overridePolicy(){return{enabled:"attribute"===this.method}}}}})],f.prototype,"sortField",void 0),t.__decorate([a.property({type:[String,Number],json:{write:{allowNull:!0,overridePolicy(){return{enabled:"attribute"===this.method,allowNull:!0}}}}})],f.prototype,"sortValue",void 0),t.__decorate([c.cast("sortValue")],f.prototype,"castSortValue",null),t.__decorate([a.property({type:m,json:{write:!0}})],f.prototype,"viewpoint",void 0),t.__decorate([a.property({type:String,json:{write:!0}})],f.prototype,"where",void 0),f=_=t.__decorate([p.subclass("esri.layers.support.MosaicRule")],f);return f}));
