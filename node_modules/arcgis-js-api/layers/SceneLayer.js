/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../Graphic","../PopupTemplate","../renderers/ClassBreaksRenderer","../renderers/DictionaryRenderer","../renderers/DotDensityRenderer","../renderers/HeatmapRenderer","../renderers/PieChartRenderer","../renderers/Renderer","../renderers/SimpleRenderer","../renderers/UniqueValueRenderer","../renderers/support/jsonUtils","../renderers/support/types","../request","../core/Clonable","../core/Collection","../core/Error","../core/Logger","../core/MultiOriginJSONSupport","../core/promiseUtils","../core/reactiveUtils","../core/urlUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/utils","../core/accessorSupport/decorators/reader","../core/accessorSupport/decorators/subclass","../core/accessorSupport/PropertyOrigin","./Layer","./mixins/APIKeyMixin","./mixins/ArcGISService","./mixins/EditBusLayer","./mixins/OperationalLayer","./mixins/PortalLayer","./mixins/ScaleRangeLayer","./mixins/SceneService","./support/arcgisLayerUrl","./support/capabilities","./support/commonProperties","./support/FeatureReduction","./support/FeatureReductionSelection","./support/FetchAssociatedFeatureLayer","./support/fieldProperties","./support/FieldsIndex","./support/fieldUtils","./support/I3SLayerDefinitions","./support/LabelClass","./support/labelingInfo","./support/LayerFloorInfo","./support/RangeInfo","./support/SceneFilter","../renderers/support/styleUtils","../rest/support/Query","../support/featureFlags","../support/popupUtils","../views/3d/layers/i3s/I3SUtil","../views/layers/support/popupUtils","../webdoc/support/opacityUtils"],(function(e,t,r,o,i,s,n,a,p,l,d,c,y,u,f,h,g,m,_,v,b,I,w,L,S,F,O,E,A,P,T,x,D,j,R,U,k,q,C,G,N,Q,V,M,K,$,z,B,H,W,J,Z,X,Y,ee,te,re,oe,ie,se,ne,ae){"use strict";const pe=["3DObject","Point"],le=z.defineFieldProperties();let de=function(r){function i(...e){var t;return(t=r.call(this,...e)||this).featureReduction=null,t.rangeInfos=null,t.operationalLayerType="ArcGISSceneServiceLayer",t.type="scene",t.fields=null,t.floorInfo=null,t.outFields=null,t.nodePages=null,t.materialDefinitions=null,t.textureSetDefinitions=null,t.geometryDefinitions=null,t.serviceUpdateTimeStamp=null,t.excludeObjectIds=new m,t.definitionExpression=null,t.filter=null,t.path=null,t.labelsVisible=!0,t.labelingInfo=null,t.legendEnabled=!0,t.priority=null,t.semantic=null,t.cachedDrawingInfo={color:!1},t.popupEnabled=!0,t.popupTemplate=null,t.objectIdField=null,t.globalIdField=null,t._fieldUsageInfo={},t.screenSizePerspectiveEnabled=!0,t}t._inherits(i,r);var s=i.prototype;return s.normalizeCtorArgs=function(e,t){return"string"==typeof e?{url:e,...t}:e},s.destroy=function(){this._set("renderer",null)},s.getField=function(e){return this.fieldsIndex.get(e)},s.getFieldDomain=function(e,t){const r=this.getFeatureType(t?.feature)?.domains?.[e];return r&&"inherited"!==r.type?r:this.getField(e)?.domain??null},s.getFeatureType=function(e){return e&&this.associatedLayer?this.associatedLayer.getFeatureType(e):null},s.readNodePages=function(e,t,r){return"Point"===t.layerType&&(e=t.pointNodePages),null==e||"object"!=typeof e?null:W.I3SNodePageDefinition.fromJSON(e,r)},s.readCachedDrawingInfo=function(e){return null!=e&&"object"==typeof e||(e={}),null==e.color&&(e.color=!1),e},s.readObjectIdField=function(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeOID"===t.type&&(e=t.name),!!e))),e||void 0},s.readGlobalIdField=function(e,t){return!e&&t.fields&&t.fields.some((t=>("esriFieldTypeGlobalID"===t.type&&(e=t.name),!!e))),e||void 0},s.readProfile=function(e,t){const r=t.store.profile;return null!=r&&ce[r]?ce[r]:(v.getLogger(this).error("Unknown or missing profile",{profile:r,layer:this}),"mesh-pyramids")},s.load=function(e){const t=null!=e?e.signal:null,r=this.loadFromPortal({supportedTypes:["Scene Service"]},e).catch(I.throwIfAbortError).then((()=>this._fetchService(t))).then((()=>Promise.all([this._fetchIndexAndUpdateExtent(this.nodePages,t),this._setAssociatedFeatureLayer(t),this._loadFilterGeometries()]))).then((()=>this._validateElevationInfo())).then((()=>this._applyAssociatedLayerOverrides())).then((()=>this._populateFieldUsageInfo())).then((()=>te.loadStyleRenderer(this,{origin:"service"},t))).then((()=>H.fixRendererFields(this.renderer,this.fieldsIndex))).then((()=>this.finishLoadEditablePortalLayer(e)));return this.addResolvingPromise(r),Promise.resolve(this)},s.beforeSave=async function(){null!=this.filter&&(this.filter=this.filter.clone(),await this.load())},s._loadFilterGeometries=async function(){if(this.filter)try{await this.filter.loadGeometries(this.spatialReference)}catch(e){v.getLogger(this).error("#_loadFilterGeometries()",this,"Failed to load filter geometries. Geometry filter will not be applied for this layer.",{error:e}),this.filter=null}},s.createQuery=function(){const e=new re;return"mesh"!==this.geometryType&&(e.returnGeometry=!0,e.returnZ=!0),e.where=this.definitionExpression||"1=1",e.sqlFormat="standard",e.outFields=["*"],e},s.queryExtent=function(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryExtent(e||this.createQuery(),t)))},s.queryFeatureCount=function(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatureCount(e||this.createQuery(),t)))},s.queryFeatures=function(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryFeatures(e||this.createQuery(),t))).then((e=>{if(e?.features)for(const t of e.features)t.layer=this,t.sourceLayer=this;return e}))},s.queryCachedAttributes=async function(e,t){const r=H.unpackFieldNames(this.fieldsIndex,await ne.getRequiredFields(this,ne.getFetchPopupTemplate(this)));return se.queryAttributesFromCachedAttributesId(this.parsedUrl.path,this.attributeStorageInfo??[],e,t,r)},s.queryCachedFeature=async function(e,t){const r=await this.queryCachedAttributes(e,[t]);if(!r||0===r.length)throw new _("scenelayer:feature-not-in-cached-data","Feature not found in cached data");const i=new o;return i.attributes=r[0],i.layer=this,i.sourceLayer=this,i},s.queryObjectIds=function(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryObjectIds(e||this.createQuery(),t)))},s.queryAttachments=function(e,t){return this._getAssociatedLayerForQuery().then((r=>r.queryAttachments(e,t)))},s.getFieldUsageInfo=function(e){const t={supportsLabelingInfo:!1,supportsRenderer:!1,supportsPopupTemplate:!1,supportsLayerQuery:!1};return this.loaded?this._fieldUsageInfo[e]||t:(v.getLogger(this).error("#getFieldUsageInfo()","Unavailable until layer is loaded"),t)},s.createPopupTemplate=function(e){return ie.createPopupTemplate(this,e)},s._getAssociatedLayerForQuery=function(){const e=this.associatedLayer;return e?.loaded?Promise.resolve(e):this._loadAssociatedLayerForQuery()},s._loadAssociatedLayerForQuery=async function(){if(await this.load(),!this.associatedLayer)throw new _("scenelayer:query-not-available","SceneLayer queries are not available without an associated feature layer",{layer:this});try{await this.associatedLayer.load()}catch(e){throw new _("scenelayer:query-not-available","SceneLayer associated feature layer could not be loaded",{layer:this,error:e})}return this.associatedLayer},s.hasCachedStatistics=function(e){return null!=this.statisticsInfo&&this.statisticsInfo.some((t=>t.name===e))},s.queryCachedStatistics=async function(e,t){if(await this.load(t),!this.statisticsInfo)throw new _("scenelayer:no-cached-statistics","Cached statistics are not available for this layer");const r=this.fieldsIndex.get(e);if(!r)throw new _("scenelayer:field-unexisting",`Field '${e}' does not exist on the layer`);for(const o of this.statisticsInfo)if(o.name===r.name){const e=L.join(this.parsedUrl.path,o.href);return h(e,{query:{f:"json",token:this.apiKey},responseType:"json",signal:t?t.signal:null}).then((e=>e.data))}throw new _("scenelayer:no-cached-statistics","Cached statistics for this attribute are not available")},s.saveAs=async function(e,t){return this._debouncedSaveOperations(G.SaveOperationType.SAVE_AS,{...t,getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"},e)},s.save=async function(){const e={getTypeKeywords:()=>this._getTypeKeywords(),portalItemLayerType:"scene"};return this._debouncedSaveOperations(G.SaveOperationType.SAVE,e)},s.applyEdits=async function(t,r){const{applyEdits:o}=await new Promise(((t,r)=>e(["./graphics/editingSupport"],t,r)));if(await this.load(),!this.associatedLayer)throw new _(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),o(this,this.associatedLayer.source,t,r)},s.uploadAssets=async function(e,t){if(await this.load(),null==this.associatedLayer)throw new _(`${this.type}-layer:not-editable`,"Service is not editable");return await this.associatedLayer.load(),this.associatedLayer.uploadAssets(e,t)},s.on=function(e,r){return t._get(t._getPrototypeOf(i.prototype),"on",this).call(this,e,r)},s.validateLayer=function(e){if(e.layerType&&!pe.includes(e.layerType))throw new _("scenelayer:layer-type-not-supported","SceneLayer does not support this layer type",{layerType:e.layerType});if(isNaN(this.version.major)||isNaN(this.version.minor))throw new _("layer:service-version-not-supported","Service version is not supported.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});if(this.version.major>2)throw new _("layer:service-version-too-new","Service version is too new.",{serviceVersion:this.version.versionString,supportedVersions:"1.x, 2.x"});function t(e,t){let r=!1,o=!1;if(null==e)r=!0,o=!0;else{const i=t&&t.isGeographic;switch(e){case"east-north-up":case"earth-centered":r=!0,o=i;break;case"vertex-reference-frame":r=!0,o=!i;break;default:r=!1}}if(!r)throw new _("scenelayer:unsupported-normal-reference-frame","Normal reference frame is invalid.");if(!o)throw new _("scenelayer:incompatible-normal-reference-frame","Normal reference frame is incompatible with layer spatial reference.")}t(this.normalReferenceFrame,this.spatialReference)},s._getTypeKeywords=function(){const e=[];if("points"===this.profile)e.push("Point");else{if("mesh-pyramids"!==this.profile)throw new _("scenelayer:unknown-profile","SceneLayer:save() encountered an unknown SceneLayer profile: "+this.profile);e.push("3DObject")}return e},s._populateFieldUsageInfo=function(){if(this._fieldUsageInfo={},this.fields)for(const e of this.fields){const t=!(!this.attributeStorageInfo||!this.attributeStorageInfo.some((t=>t.name===e.name))),r=!!this.associatedLayer?.fields?.some((t=>t&&e.name===t.name)),o={supportsLabelingInfo:t,supportsRenderer:t,supportsPopupTemplate:t||r,supportsLayerQuery:r};this._fieldUsageInfo[e.name]=o}},s._applyAssociatedLayerOverrides=function(){this._applyAssociatedLayerFieldsOverrides(),this._applyAssociatedLayerPopupOverrides(),this._applyAssociatedLayerExtentOverride()},s._applyAssociatedLayerFieldsOverrides=function(){if(!this.associatedLayer?.fields)return;let e=null;for(const t of this.associatedLayer.fields){const r=this.getField(t.name);r?(!r.domain&&t.domain&&(r.domain=t.domain.clone()),r.editable=t.editable,r.nullable=t.nullable,r.length=t.length):(e||(e=this.fields?this.fields.slice():[]),e.push(t.clone()))}e&&this._set("fields",e)},s._applyAssociatedLayerPopupOverrides=function(){if(!this.associatedLayer)return;const e=["popupTemplate","popupEnabled"],t=A.getProperties(this);for(let r=0;r<e.length;r++){const o=e[r],i=this.originIdOf(o),s=this.associatedLayer.originIdOf(o);i<s&&(s===x.OriginId.SERVICE||s===x.OriginId.PORTAL_ITEM)&&t.setAtOrigin(o,this.associatedLayer[o],s)}},s._applyAssociatedLayerExtentOverride=function(){const e=this.associatedLayer?.editingInfo?.lastEditDate,t=this.associatedLayer?.serverGens,r=this.associatedLayer?.getAtOrigin("fullExtent","service");if(!oe.sceneLayerEditingEnabled()||null==this.associatedLayer?.infoFor3D||!r||!N.isHostedAgolService(this.associatedLayer?.url)||!e||this.serviceUpdateTimeStamp?.lastUpdate===e.getTime()||!this.serviceUpdateTimeStamp&&t?.minServerGen===t?.serverGen)return;A.getProperties(this).setAtOrigin("fullExtent",r.clone(),x.OriginId.SERVICE)},s._setAssociatedFeatureLayer=async function(e){if(!["mesh-pyramids","points"].includes(this.profile))return;const t=new $.FetchAssociatedFeatureLayer(this.parsedUrl,this.portalItem,this.apiKey,e);try{this.associatedLayer=await t.fetch()}catch(r){I.isAbortError(r)||this._logWarningOnPopupEnabled()}},s._logWarningOnPopupEnabled=async function(){await w.whenOnce((()=>this.popupEnabled&&null!=this.popupTemplate));const e=`this SceneLayer: ${this.title}`;null==this.attributeStorageInfo?v.getLogger(this).warn(`Associated FeatureLayer could not be loaded and no binary attributes found. Popups will not work on ${e}`):v.getLogger(this).info(`Associated FeatureLayer could not be loaded. Falling back to binary attributes for Popups on ${e}`)},s._validateElevationInfo=function(){const e=this.elevationInfo;e&&("mesh-pyramids"===this.profile&&"relative-to-scene"===e.mode&&v.getLogger(this).warn(".elevationInfo=","Mesh scene layers don't support relative-to-scene elevation mode"),e.featureExpressionInfo&&"0"!==e.featureExpressionInfo.expression&&v.getLogger(this).warn(".elevationInfo=","Scene layers do not support featureExpressionInfo"))},t._createClass(i,[{key:"types",get:function(){return this.associatedLayer?.types??[]}},{key:"typeIdField",get:function(){return this.associatedLayer?.typeIdField??null}},{key:"templates",get:function(){return this.associatedLayer?.templates??null}},{key:"formTemplate",get:function(){return this.associatedLayer?.formTemplate??null}},{key:"fieldsIndex",get:function(){return new B(this.fields)}},{key:"elevationInfo",set:function(e){this._set("elevationInfo",e),this.loaded&&this._validateElevationInfo()}},{key:"geometryType",get:function(){return ye[this.profile]||"mesh"}},{key:"renderer",set:function(e){H.fixRendererFields(e,this.fieldsIndex),this._set("renderer",e)}},{key:"capabilities",get:function(){const e=this.associatedLayer?.capabilities??Q.zeroCapabilities,{query:t,editing:{supportsGlobalId:r,supportsRollbackOnFailure:o,supportsUploadWithItemId:i,supportsGeometryUpdate:s,supportsReturnServiceEditsInSourceSpatialReference:n},data:{supportsZ:a,supportsM:p,isVersioned:l,supportsAttachment:d},operations:{supportsEditing:c,supportsAdd:y,supportsUpdate:u,supportsDelete:f,supportsQuery:h,supportsQueryAttachments:g,supportsAsyncConvert3D:m}}=e,_=e.operations.supportsChangeTracking,v=!!this.associatedLayer?.infoFor3D&&oe.sceneLayerEditingEnabled();return{query:t,editing:{supportsGlobalId:r,supportsReturnServiceEditsInSourceSpatialReference:n,supportsRollbackOnFailure:o,supportsGeometryUpdate:v&&s,supportsUploadWithItemId:i},data:{supportsAttachment:d,supportsZ:a,supportsM:p,isVersioned:l},operations:{supportsQuery:h,supportsQueryAttachments:g,supportsEditing:c&&_,supportsAdd:v&&y&&_,supportsDelete:v&&f&&_,supportsUpdate:u&&_,supportsAsyncConvert3D:m}}}},{key:"editingEnabled",get:function(){return this._isOverridden("editingEnabled")?this._get("editingEnabled"):this.userHasEditingPrivileges},set:function(e){this._overrideIfSome("editingEnabled",e)}},{key:"infoFor3D",get:function(){return this.associatedLayer?.infoFor3D??null}},{key:"defaultPopupTemplate",get:function(){return this.associatedLayer||this.attributeStorageInfo?this.createPopupTemplate():null}},{key:"displayField",get:function(){return this.associatedLayer?.displayField??null}}]),i}(U.EditBusLayer(G.SceneService(R.ArcGISService(k.OperationalLayer(q.PortalLayer(C.ScaleRangeLayer(b.MultiOriginJSONMixin(j.APIKeyMixin(g.ClonableMixin(D))))))))));r.__decorate([S.property({types:{key:"type",base:M.FeatureReduction,typeMap:{selection:K}},json:{origins:{"web-scene":{name:"layerDefinition.featureReduction",write:!0},"portal-item":{name:"layerDefinition.featureReduction",write:!0}}}})],de.prototype,"featureReduction",void 0),r.__decorate([S.property({type:[Y.RangeInfo],json:{read:!1,origins:{"web-scene":{name:"layerDefinition.rangeInfos",write:!0},"portal-item":{name:"layerDefinition.rangeInfos",write:!0}}}})],de.prototype,"rangeInfos",void 0),r.__decorate([S.property({json:{read:!1}})],de.prototype,"associatedLayer",void 0),r.__decorate([S.property({type:["show","hide"]})],de.prototype,"listMode",void 0),r.__decorate([S.property({type:["ArcGISSceneServiceLayer"]})],de.prototype,"operationalLayerType",void 0),r.__decorate([S.property({json:{read:!1},readOnly:!0})],de.prototype,"type",void 0),r.__decorate([S.property({...le.fields,readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],de.prototype,"fields",void 0),r.__decorate([S.property()],de.prototype,"types",null),r.__decorate([S.property()],de.prototype,"typeIdField",null),r.__decorate([S.property()],de.prototype,"templates",null),r.__decorate([S.property()],de.prototype,"formTemplate",null),r.__decorate([S.property({readOnly:!0})],de.prototype,"fieldsIndex",null),r.__decorate([S.property({type:X,json:{read:{source:"layerDefinition.floorInfo"},write:{target:"layerDefinition.floorInfo"}}})],de.prototype,"floorInfo",void 0),r.__decorate([S.property(le.outFields)],de.prototype,"outFields",void 0),r.__decorate([S.property({type:W.I3SNodePageDefinition,readOnly:!0,json:{read:!1}})],de.prototype,"nodePages",void 0),r.__decorate([P.reader("service","nodePages",["nodePages","pointNodePages"])],de.prototype,"readNodePages",null),r.__decorate([S.property({type:[W.I3SMaterialDefinition],readOnly:!0})],de.prototype,"materialDefinitions",void 0),r.__decorate([S.property({type:[W.I3STextureSetDefinition],readOnly:!0})],de.prototype,"textureSetDefinitions",void 0),r.__decorate([S.property({type:[W.I3SGeometryDefinition],readOnly:!0})],de.prototype,"geometryDefinitions",void 0),r.__decorate([S.property({readOnly:!0})],de.prototype,"serviceUpdateTimeStamp",void 0),r.__decorate([S.property({readOnly:!0})],de.prototype,"attributeStorageInfo",void 0),r.__decorate([S.property({readOnly:!0})],de.prototype,"statisticsInfo",void 0),r.__decorate([S.property({type:m.ofType(Number),nonNullable:!0,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.excludeObjectIds",write:{enabled:!0}}})],de.prototype,"excludeObjectIds",void 0),r.__decorate([S.property({type:String,json:{origins:{service:{read:!1,write:!1}},name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],de.prototype,"definitionExpression",void 0),r.__decorate([S.property({type:ee,json:{name:"layerDefinition.polygonFilter",write:{enabled:!0,allowNull:!0},origins:{service:{read:!1,write:!1}}}})],de.prototype,"filter",void 0),r.__decorate([S.property({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],de.prototype,"path",void 0),r.__decorate([S.property(V.elevationInfo)],de.prototype,"elevationInfo",null),r.__decorate([S.property({type:String})],de.prototype,"geometryType",null),r.__decorate([S.property(V.labelsVisible)],de.prototype,"labelsVisible",void 0),r.__decorate([S.property({type:[J],json:{origins:{service:{name:"drawingInfo.labelingInfo",read:{reader:Z.reader},write:!1}},name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:Z.reader},write:!0}})],de.prototype,"labelingInfo",void 0),r.__decorate([S.property(V.legendEnabled)],de.prototype,"legendEnabled",void 0),r.__decorate([S.property({type:Number,json:{origins:{"web-document":{default:1,write:{enabled:!0,target:{opacity:{type:Number},"layerDefinition.drawingInfo.transparency":{type:Number}}},read:{source:["opacity","layerDefinition.drawingInfo.transparency"],reader(e,t){if("number"==typeof e&&e>=0&&e<=1)return e;const r=t.layerDefinition?.drawingInfo?.transparency;return void 0!==r?ae.transparencyToOpacity(r):void 0}}},"portal-item":{write:!0},service:{read:!1}}}})],de.prototype,"opacity",void 0),r.__decorate([S.property({type:["Low","High"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],de.prototype,"priority",void 0),r.__decorate([S.property({type:["Labels"],readOnly:!0,json:{read:!1,origins:{service:{read:!0}}}})],de.prototype,"semantic",void 0),r.__decorate([S.property({types:f.webSceneRendererTypes,json:{origins:{service:{read:{source:"drawingInfo.renderer"}}},name:"layerDefinition.drawingInfo.renderer",write:!0},value:null})],de.prototype,"renderer",null),r.__decorate([S.property({json:{read:!1}})],de.prototype,"cachedDrawingInfo",void 0),r.__decorate([P.reader("service","cachedDrawingInfo")],de.prototype,"readCachedDrawingInfo",null),r.__decorate([S.property({readOnly:!0,json:{read:!1}})],de.prototype,"capabilities",null),r.__decorate([S.property({type:Boolean,json:{read:!1}})],de.prototype,"editingEnabled",null),r.__decorate([S.property({readOnly:!0,json:{write:!1,read:!1}})],de.prototype,"infoFor3D",null),r.__decorate([S.property(V.popupEnabled)],de.prototype,"popupEnabled",void 0),r.__decorate([S.property({type:i,json:{name:"popupInfo",write:!0}})],de.prototype,"popupTemplate",void 0),r.__decorate([S.property({readOnly:!0,json:{read:!1}})],de.prototype,"defaultPopupTemplate",null),r.__decorate([S.property({type:String,json:{read:!1}})],de.prototype,"objectIdField",void 0),r.__decorate([P.reader("service","objectIdField",["objectIdField","fields"])],de.prototype,"readObjectIdField",null),r.__decorate([S.property({type:String,json:{read:!1}})],de.prototype,"globalIdField",void 0),r.__decorate([P.reader("service","globalIdField",["globalIdField","fields"])],de.prototype,"readGlobalIdField",null),r.__decorate([S.property({readOnly:!0,type:String,json:{read:!1}})],de.prototype,"displayField",null),r.__decorate([S.property({type:String,json:{read:!1}})],de.prototype,"profile",void 0),r.__decorate([P.reader("service","profile",["store.profile"])],de.prototype,"readProfile",null),r.__decorate([S.property({readOnly:!0,type:String,json:{origins:{service:{read:{source:"store.normalReferenceFrame"}}},read:!1}})],de.prototype,"normalReferenceFrame",void 0),r.__decorate([S.property(V.screenSizePerspectiveEnabled)],de.prototype,"screenSizePerspectiveEnabled",void 0),de=r.__decorate([T.subclass("esri.layers.SceneLayer")],de);const ce={"mesh-pyramids":"mesh-pyramids",meshpyramids:"mesh-pyramids","features-meshes":"mesh-pyramids",points:"points","features-points":"points",lines:"lines","features-lines":"lines",polygons:"polygons","features-polygons":"polygons"},ye={"mesh-pyramids":"mesh",points:"point",lines:"polyline",polygons:"polygon"};return de}));
