/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../request","../../core/Error","../../core/Logger","../../core/promiseUtils","../../core/urlUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","../../core/accessorSupport/originUtils","../../geometry/Extent","../../geometry/HeightModelInfo","../../geometry/SpatialReference","../support/arcgisLayerUrl","../support/commonProperties","../support/I3SIndexInfo","../support/schemaValidatorLoader","../../portal/Portal","../../portal/PortalItem","../../webdoc/support/saveUtils"],(function(e,t,r,o,a,i,n,s,l,p,c,d,u,y,h,m,f,v,S,g,_,w,I,x,b,T){"use strict";const O="esri.layers.mixins.SceneService",R=i.getLogger(O),E=i=>{let p=function(r){function i(){var t;return(t=r.apply(this,arguments)||this).spatialReference=null,t.fullExtent=null,t.heightModelInfo=null,t.minScale=0,t.maxScale=0,t.version={major:Number.NaN,minor:Number.NaN,versionString:""},t.copyright=null,t.sublayerTitleMode="item-title",t.title=null,t.layerId=null,t.indexInfo=null,t._debouncedSaveOperations=n.debounce((async(r,o,a)=>{switch(r){case e.SaveOperationType.SAVE:return t._save(o);case e.SaveOperationType.SAVE_AS:return t._saveAs(a,o)}})),t}t._inherits(i,r);var l=i.prototype;return l.readSpatialReference=function(e,t){return this._readSpatialReference(t)},l._readSpatialReference=function(e){if(null!=e.spatialReference)return S.fromJSON(e.spatialReference);{const t=e.store,r=t.indexCRS||t.geographicCRS,o=r&&parseInt(r.substring(r.lastIndexOf("/")+1,r.length),10);return null!=o?new S(o):null}},l.readFullExtent=function(e,t,r){if(null!=e&&"object"==typeof e){const o=null==e.spatialReference?{...e,spatialReference:this._readSpatialReference(t)}:e;return f.fromJSON(o,r)}const o=t.store,a=this._readSpatialReference(t);return null==a||null==o||null==o.extent||!Array.isArray(o.extent)||o.extent.some((e=>e<A))?null:new f({xmin:o.extent[0],ymin:o.extent[1],xmax:o.extent[2],ymax:o.extent[3],spatialReference:a})},l.parseVersionString=function(e){const t={major:Number.NaN,minor:Number.NaN,versionString:e},r=e.split(".");return r.length>=2&&(t.major=parseInt(r[0],10),t.minor=parseInt(r[1],10)),t},l.readVersion=function(e,t){const r=t.store,o=null!=r.version?r.version.toString():"";return this.parseVersionString(o)},l.readTitlePortalItem=function(e){return"item-title"!==this.sublayerTitleMode?void 0:e},l.readTitleService=function(e,t){const r=this.portalItem&&this.portalItem.title;if("item-title"===this.sublayerTitleMode)return g.titleFromUrlAndName(this.url,t.name);let o=t.name;if(!o&&this.url){const e=g.parse(this.url);null!=e&&(o=e.title)}return"item-title-and-service-name"===this.sublayerTitleMode&&r&&(o=r+" - "+o),g.cleanTitle(o)},l.writeUrl=function(e,t,r,o){g.writeUrlWithLayerId(this,e,"layers",t,o)},l._fetchIndexAndUpdateExtent=async function(e,t){this.indexInfo=w.fetchIndexInfo(this.parsedUrl.path,this.rootNode,e,this.apiKey,R,t),null==this.fullExtent||this.fullExtent.hasZ||this._updateExtent(await this.indexInfo)},l._updateExtent=function(e){if("page"===e?.type){const t=e.rootIndex%e.pageSize,r=e.rootPage?.nodes?.[t];if(null==r||null==r.obb||null==r.obb.center||null==r.obb.halfSize)throw new a("sceneservice:invalid-node-page","Invalid node page.");if(r.obb.center[0]<A||null==this.fullExtent||this.fullExtent.hasZ)return;const o=r.obb.halfSize,i=r.obb.center[2],n=Math.sqrt(o[0]*o[0]+o[1]*o[1]+o[2]*o[2]);this.fullExtent.zmin=i-n,this.fullExtent.zmax=i+n}else if("node"===e?.type){const t=e.rootNode?.mbs;if(!Array.isArray(t)||4!==t.length||t[0]<A)return;const r=t[2],o=t[3],{fullExtent:a}=this;a&&(a.zmin=r-o,a.zmax=r+o)}},l._fetchService=async function(e){if(null==this.url)throw new a("sceneservice:url-not-set","Scene service can not be loaded without valid portal item or url");if(null==this.layerId&&/SceneServer\/*$/i.test(this.url)){const t=await this._fetchFirstLayerId(e);null!=t&&(this.layerId=t)}return this._fetchServiceLayer(e)},l._fetchFirstLayerId=async function(e){const t=await o(this.url,{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});if(t.data&&Array.isArray(t.data.layers)&&t.data.layers.length>0)return t.data.layers[0].id},l._fetchServiceLayer=async function(e){const t=await o(this.parsedUrl?.path??"",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e});t.ssl&&(this.url=this.url.replace(/^http:/i,"https:"));let r=!1;if(t.data.layerType&&"Voxel"===t.data.layerType&&(r=!0),r)return this._fetchVoxelServiceLayer();const a=t.data;this.read(a,this._getServiceContext()),this.validateLayer(a)},l._fetchVoxelServiceLayer=async function(e){const t=(await o(this.parsedUrl?.path+"/layer",{query:{f:"json",token:this.apiKey},responseType:"json",signal:e})).data;this.read(t,this._getServiceContext()),this.validateLayer(t)},l._getServiceContext=function(){return{origin:"service",portalItem:this.portalItem,portal:this.portalItem?.portal,url:this.parsedUrl}},l._ensureLoadBeforeSave=async function(){await this.load(),"beforeSave"in this&&"function"==typeof this.beforeSave&&await this.beforeSave()},l.validateLayer=function(e){},l._updateTypeKeywords=function(e,t,r){e.typeKeywords||(e.typeKeywords=[]);const o=t.getTypeKeywords();for(const a of o)e.typeKeywords.push(a);e.typeKeywords&&(e.typeKeywords=e.typeKeywords.filter(((e,t,r)=>r.indexOf(e)===t)),r===N.newItem&&(e.typeKeywords=e.typeKeywords.filter((e=>"Hosted Service"!==e))))},l._saveAs=async function(e,t){const r={...L,...t};let o=b.from(e);o||(R.error("_saveAs(): requires a portal item parameter"),await Promise.reject(new a("sceneservice:portal-item-required","_saveAs() requires a portal item to save to"))),o.id&&(o=o.clone(),o.id=null);const i=o.portal||x.getDefault();await this._ensureLoadBeforeSave(),o.type=U,o.portal=i;const n={origin:"portal-item",url:null,messages:[],portal:i,portalItem:o,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},s={layers:[this.write({},n)]};return await Promise.all(n.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(s,n,r),o.url=this.url,o.title||(o.title=this.title),this._updateTypeKeywords(o,r,N.newItem),await i.signIn(),await(i.user?.addItem({item:o,folder:r&&r.folder,data:s})),await T.saveResources(this.resourceReferences,n,null),this.portalItem=o,m.updateOrigins(n),n.portalItem=o,o},l._save=async function(e){const t={...L,...e};if(!this.portalItem)throw R.error("_save(): requires the .portalItem property to be set"),new a("sceneservice:portal-item-not-set","Portal item to save to has not been set on this SceneService");if(this.portalItem.type!==U)throw R.error("_save(): Non-matching portal item type. Got "+this.portalItem.type+", expected "+U),new a("sceneservice:portal-item-wrong-type",`Portal item needs to have type "${U}"`);await this._ensureLoadBeforeSave();const r={origin:"portal-item",url:this.portalItem.itemUrl&&s.urlToObject(this.portalItem.itemUrl),messages:[],portal:this.portalItem.portal||x.getDefault(),portalItem:this.portalItem,writtenProperties:[],blockedRelativeUrls:[],resources:{toAdd:[],toUpdate:[],toKeep:[],pendingOperations:[]}},o={layers:[this.write({},r)]};return await Promise.all(r.resources.pendingOperations??[]),await this._validateAgainstJSONSchema(o,r,t),this.portalItem.url=this.url,this.portalItem.title||(this.portalItem.title=this.title),this._updateTypeKeywords(this.portalItem,t,N.existingItem),await this.portalItem.update({data:o}),await T.saveResources(this.resourceReferences,r,null),m.updateOrigins(r),this.portalItem},l._validateAgainstJSONSchema=async function(e,t,r){let o=t.messages?.filter((e=>"error"===e.type)).map((e=>new a(e.name,e.message,e.details)))??[];r?.validationOptions?.ignoreUnsupported&&(o=o.filter((e=>"layer:unsupported"!==e.name&&"symbol:unsupported"!==e.name&&"symbol-layer:unsupported"!==e.name&&"property:unsupported"!==e.name&&"url:unsupported"!==e.name&&"scenemodification:unsupported"!==e.name)));const i=r?.validationOptions,n=i?.enabled,s=I.getLoader();if(n&&s){const t=(await s()).validate(e,r.portalItemLayerType);if(t.length>0){const e=`Layer item did not validate:\n${t.join("\n")}`;if(R.error(`_validateAgainstJSONSchema(): ${e}`),"throw"===i.failPolicy){const e=t.map((e=>new a("sceneservice:schema-validation",e))).concat(o);throw new a("sceneservice-validate:error","Failed to save layer item due to schema validation, see `details.errors`.",{combined:e})}}}if(o.length>0)throw new a("sceneservice:save","Failed to save SceneService due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:o})},t._createClass(i,[{key:"url",set:function(e){const t=g.sanitizeUrlWithLayerId({layer:this,url:e,nonStandardUrlAllowed:!1,logger:R});this._set("url",t.url),null!=t.layerId&&this._set("layerId",t.layerId)}},{key:"parsedUrl",get:function(){const e=this._get("url"),t=s.urlToObject(e);return null!=this.layerId&&(t.path=`${t.path}/layers/${this.layerId}`),t}}]),i}(i);return r.__decorate([l.property(_.id)],p.prototype,"id",void 0),r.__decorate([l.property({type:S})],p.prototype,"spatialReference",void 0),r.__decorate([u.reader("spatialReference",["spatialReference","store.indexCRS","store.geographicCRS"])],p.prototype,"readSpatialReference",null),r.__decorate([l.property({type:f})],p.prototype,"fullExtent",void 0),r.__decorate([u.reader("fullExtent",["fullExtent","store.extent","spatialReference","store.indexCRS","store.geographicCRS"])],p.prototype,"readFullExtent",null),r.__decorate([l.property({readOnly:!0,type:v})],p.prototype,"heightModelInfo",void 0),r.__decorate([l.property({type:Number,json:{name:"layerDefinition.minScale",write:!0,origins:{service:{read:{source:"minScale"},write:!1}}}})],p.prototype,"minScale",void 0),r.__decorate([l.property({type:Number,json:{name:"layerDefinition.maxScale",write:!0,origins:{service:{read:{source:"maxScale"},write:!1}}}})],p.prototype,"maxScale",void 0),r.__decorate([l.property({readOnly:!0})],p.prototype,"version",void 0),r.__decorate([u.reader("version",["store.version"])],p.prototype,"readVersion",null),r.__decorate([l.property({type:String,json:{read:{source:"copyrightText"}}})],p.prototype,"copyright",void 0),r.__decorate([l.property({type:String,json:{read:!1}})],p.prototype,"sublayerTitleMode",void 0),r.__decorate([l.property({type:String})],p.prototype,"title",void 0),r.__decorate([u.reader("portal-item","title")],p.prototype,"readTitlePortalItem",null),r.__decorate([u.reader("service","title",["name"])],p.prototype,"readTitleService",null),r.__decorate([l.property({type:Number,json:{origins:{service:{read:{source:"id"}},"portal-item":{write:{target:"id",isRequired:!0,ignoreOrigin:!0},read:!1}}}})],p.prototype,"layerId",void 0),r.__decorate([l.property(_.url)],p.prototype,"url",null),r.__decorate([h.writer("url")],p.prototype,"writeUrl",null),r.__decorate([l.property()],p.prototype,"parsedUrl",null),r.__decorate([l.property({readOnly:!0})],p.prototype,"store",void 0),r.__decorate([l.property({type:String,readOnly:!0,json:{read:{source:"store.rootNode"}}})],p.prototype,"rootNode",void 0),p=r.__decorate([y.subclass(O)],p),p},A=-1e38;var N;!function(e){e[e.existingItem=0]="existingItem",e[e.newItem=1]="newItem"}(N||(N={}));const U="Scene Service",L={getTypeKeywords:()=>[],portalItemLayerType:"unknown",validationOptions:{enabled:!0,ignoreUnsupported:!1,failPolicy:"throw"}};var j;e.SaveOperationType=void 0,(j=e.SaveOperationType||(e.SaveOperationType={}))[j.SAVE=0]="SAVE",j[j.SAVE_AS=1]="SAVE_AS",e.SCENE_SERVICE_ITEM_TYPE=U,e.SceneService=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
