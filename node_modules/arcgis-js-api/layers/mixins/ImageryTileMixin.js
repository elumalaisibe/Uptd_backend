/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../rasterRenderers","../../request","../../core/Error","../../core/Logger","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../geometry/support/spatialReferenceUtils","../support/arcgisLayerUrl","../support/commonProperties","../support/DimensionalDefinition","../support/MultidimensionalSubset","../support/RasterFunction","../support/RasterJobHandler","../support/TileInfo","../support/rasterDatasets/FunctionRaster","../support/rasterDatasets/multidimensionalUtils","../support/rasterFunctions/clipUtils","../support/rasterFunctions/rasterFunctionHelper","../support/rasterFunctions/rasterProjectionHelper","../support/rasterFunctions/stretchUtils","../support/rasterFunctions/vectorFieldUtils","../../renderers/support/rasterRendererHelper","../../renderers/support/RasterSymbolizer","../../rest/support/ImageHistogramParameters","../../views/2d/engine/flow/dataUtils","../../geometry/SpatialReference","../../geometry/Point"],(function(e,t,r,n,i,s,o,a,l,u,c,d,h,p,m,f,y,b,_,g,R,F,I,J,S,x,D,v,w,H,T,N,O,z,P){"use strict";const C=a.getLogger("esri.layers.mixins.ImageryTileMixin"),M=e=>{let n=function(e){function r(...t){var r;return(r=e.call(this,...t)||this)._isConstructedFromFunctionRaster=!1,r._rasterJobHandler={instance:null,refCount:0,connectionPromise:null},r.bandIds=null,r.copyright=null,r.interpolation="nearest",r.multidimensionalSubset=null,r.raster=null,r.rasterInfo=null,r.sourceJSON=null,r.spatialReference=null,r.symbolizer=null,r._isConstructedFromFunctionRaster="Function"===t[0]?.raster?.datasetFormat,r}t._inherits(r,e);var n=r.prototype;return n.readRenderer=function(e,t,r){const n=t?.layerDefinition?.drawingInfo?.renderer;return i.read(n,r)||void 0},n.convertVectorFieldData=async function(e,t){if(null==e||!this.rasterInfo)return null;const r=this._rasterJobHandler.instance,n=this.rasterInfo.dataType;return r?r.convertVectorFieldData({pixelBlock:e,dataType:n},t):w.convertVectorFieldData(e,n)},n.computeStatisticsHistograms=async function(e,t){e=u.ensureClass(N,e).clone();const{rasterInfo:r}=this,{geometry:n}=e;if(null==n)throw new o("imagery-tile-mixin:compute-statistics-histograms","geometry must be specified");let i=n;const{spatialReference:s}=r;n.spatialReference.equals(s)||(await D.load(),i="extent"===n.type?D.projectExtent(n,s):D.projectPolygon(n,s));const a=e.pixelSize??new P({x:r.pixelSize.x,y:r.pixelSize.y,spatialReference:s}),{extent:l,width:c,height:d}=S.snapToRaster(r,i,a),h=await this.fetchPixels(l,c,d,{...t,interpolation:"nearest"});if(null==h.pixelBlock)throw new o("imagery-tile-mixin:compute-statistics-histograms","failed to fetch pixels");const p=await S.clip(h.pixelBlock,l,i),m=this._rasterJobHandler.instance;return m?m.computeStatisticsHistograms({pixelBlock:p},t):v.computeStatisticsHistograms(p)},n.createFlowMesh=async function(e,t){const r=this._rasterJobHandler.instance;return r?r.createFlowMesh(e,t):O.createFlowMesh(e.meshType,e.simulationSettings,e.flowData,null!=t.signal?t.signal:(new AbortController).signal)},n.normalizeRasterFetchOptions=function(e){const{multidimensionalInfo:t}=this.rasterInfo??{};if(null==t)return e;let r=e.multidimensionalDefinition||this.multidimensionalDefinition;null!=r&&r.length||(r=J.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset}));const n=e.timeExtent||this.timeExtent;if(null!=r&&null!=n&&(null!=n.start||null!=n.end)){r=r.map((e=>e.clone()));const i=t.variables.find((({name:e})=>e===r[0].variableName))?.dimensions?.find((({name:e})=>"StdTime"===e)),s=r.find((({dimensionName:e})=>"StdTime"===e));if(!i||!s)return{...e,multidimensionalDefinition:null};const{start:o,end:a}=n,l=null==o?null:o.getTime(),u=null==a?null:a.getTime(),c=l??u,d=u??l;if(null!=i.values){const e=i.values.filter((e=>{if(Array.isArray(e)){if(c===d)return e[0]<=c&&e[1]>=c;const t=e[0]<=c&&e[1]>c||e[0]<d&&e[1]>=d,r=e[0]>=c&&e[1]<=d||e[0]<c&&e[1]>d;return t||r}return c===d?e===c:e>=c&&e<=d}));if(e.length){const t=e.sort(((e,t)=>{const r=Array.isArray(e)?e[0]:e,n=Array.isArray(e)?e[1]:e,i=Array.isArray(t)?t[0]:t,s=Array.isArray(t)?t[1]:t;if(c===d)return r-i;return Math.abs(n-d)-Math.abs(s-d)}))[0];s.values=[t]}else r=null}else if(i.hasRegularIntervals&&i.extent){const[e,t]=i.extent;c>t||d<e?r=null:s.values=c===d?[c]:[Math.max(e,c),Math.min(t,d)]}}return null!=r&&J.hasExcludedVariableOrDimension(r,this.multidimensionalSubset)?{...e,multidimensionalDefinition:null}:{...e,multidimensionalDefinition:r}},n.updateRasterFunction=async function(){if(!this.loaded||"imagery-tile"!==this.type||!this.rasterFunction&&!this._cachedRasterFunctionJson||JSON.stringify(this.rasterFunction)===JSON.stringify(this._cachedRasterFunctionJson))return;if(this._isConstructedFromFunctionRaster&&"Function"===this.raster.datasetFormat){const e=this.raster.rasterFunction.toJSON();return!this.rasterFunction&&e&&this._set("rasterFunction",g.fromJSON(e)),void(this._cachedRasterFunctionJson=this.rasterFunction?.toJSON())}let e,t=this.raster,r=!1;"Function"===t.datasetFormat?(e=t.primaryRasters.rasters,t=e[0],r=!0):e=[t];const{rasterFunction:n}=this;if(n){const r={raster:t};e.length>1&&e.forEach((e=>r[e.url]=e));const i=x.create(n.functionDefinition?.toJSON()??n.toJSON(),r),s=new I({rasterFunction:i});s.rasterJobHandler=this._rasterJobHandler.instance,await s.open(),this._cachedRasterFunctionJson=this.rasterFunction?.toJSON(),this.raster=s}else this.raster=t,this._cachedRasterFunctionJson=null,await t.when();if(this._cachedRendererJson=null,!r&&!n)return;const{bandIds:i}=this,{bandCount:s}=this.raster.rasterInfo,o=i?.length?i.some((e=>e>=s)):s>=3;i&&(o||this.renderer&&"raster-stretch"!==this.renderer.type)&&this._set("bandIds",null),this._configDefaultRenderer("auto")},n.updateRenderer=async function(){const{loaded:e,symbolizer:t}=this;if(!e||!t||!this.renderer)return;const{rasterInfo:r}=this.raster,n=J.getDefaultVariablInfo(r,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),i=n?.name,s=H.normalizeRendererJSON({...this.renderer.toJSON(),variableName:i});if(JSON.stringify(this._cachedRendererJson)===JSON.stringify(s))return;const o=this._rasterJobHandler.instance;o&&(t.rasterInfo=H.getVariableRasterInfo(r,i),t.rendererJSON=s,t.bind(),await o.updateSymbolizer(t),this._cachedRendererJson=s)},n.applyRenderer=async function(e,t){const r=e&&e.pixelBlock;if(!(null!=r&&r.pixels&&r.pixels.length>0))return null;let n;await this.updateRenderer();const i=this._rasterJobHandler.instance,s=this.bandIds??[];return n=i?await i.symbolize({...e,simpleStretchParams:t,bandIds:s}):this.symbolizer.symbolize({...e,simpleStretchParams:t,bandIds:s}),n},n.getTileUrl=function(e,t,r){return"RasterTileServer"===this.raster.datasetFormat?`${this.url}/tile/${e}/${t}/${r}`:""},n.getCompatibleTileInfo=function(e,t,r=!1){if(!this.loaded||null==t)return null;if(r&&e.equals(this.spatialReference))return this.tileInfo;const n=m.getInfo(e);return F.create({size:256,spatialReference:e,origin:n?{x:n.origin[0],y:n.origin[1]}:{x:t.xmin,y:t.ymax}})},n.getCompatibleFullExtent=function(e){return this.loaded?(this._compatibleFullExtent&&this._compatibleFullExtent.spatialReference.equals(e)||(this._compatibleFullExtent=this.raster.computeExtent(e)),this._compatibleFullExtent):null},n.fetchTile=async function(e,t,r,n={}){if(a(this),n.requestAsImageElement){const i=this.getTileUrl(e,t,r);return s(i,{responseType:"image",query:{...this.refreshParameters,...this.raster.ioConfig.customFetchParameters},signal:n.signal}).then((e=>e.data))}const{rasterInfo:i}=this;if(null!=i.multidimensionalInfo&&null==(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition){const s=n.tileInfo||i.storageInfo.tileInfo;return{extent:this.raster.getTileExtentFromTileInfo(e,t,r,s),pixelBlock:null}}return await this._initJobHandler(),await this.updateRasterFunction(),"raster-shaded-relief"===this.renderer?.type&&(n={...n,buffer:{cols:1,rows:1}}),this.raster.fetchTile(e,t,r,n)},n.fetchPixels=async function(e,t,r,n={}){return null!=this.rasterInfo.multidimensionalInfo&&null==(n=this.normalizeRasterFetchOptions(n)).multidimensionalDefinition?{extent:e,pixelBlock:null}:(await this._initJobHandler(),await this.updateRasterFunction(),t=Math.round(t),r=Math.round(r),this.raster.fetchPixels(e,t,r,n))},n.identify=async function(e,t={}){const{raster:r,rasterInfo:n}=this;if(null!=n.multidimensionalInfo){if(!(n.hasMultidimensionalTranspose&&!!(J.isMultiSliceOrRangeDefinition(t.multidimensionalDefinition)||t.transposedVariableName||t.timeExtent))&&null==(t=this.normalizeRasterFetchOptions(t)).multidimensionalDefinition)return{location:e,value:null}}const i=this.multidimensionalSubset?.areaOfInterest;if(i&&!i.contains(e))throw new o("imagery-tile-mixin:identify","the request cannot be fulfilled when falling outside of the multidimensional subset");return r.identify(e,t)},n.increaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount++},n.decreaseRasterJobHandlerUsage=function(){this._rasterJobHandler.refCount--,this._rasterJobHandler.refCount<=0&&this._shutdownJobHandler()},n.hasStandardTime=function(){const e=this.rasterInfo?.multidimensionalInfo;if(null==e||"standard-time"!==this.rasterInfo?.dataType)return!1;const t=this.multidimensionalDefinition,r=t?.[0]?.variableName;return e.variables.some((e=>e.name===r&&(!t?.[0].dimensionName||e.dimensions.some((e=>"StdTime"===e.name)))))},n.getStandardTimeValue=function(e){return new Date(24*(e-25569)*3600*1e3).toString()},n.getMultidimensionalSubsetVariables=function(e){const t=e??this.rasterInfo?.multidimensionalInfo;return J.getSubsetVariablesFromMdInfo(this.multidimensionalSubset,t)},n._configDefaultSettings=function(){this._configDefaultInterpolation(),this.multidimensionalDefinition||(this.multidimensionalDefinition=J.getDefaultMultidimensionalDefinition(this.raster.rasterInfo,{multidimensionalSubset:this.multidimensionalSubset})),this.rasterFunction&&"Function"===this.raster.datasetFormat&&(this._cachedRasterFunctionJson=this.rasterFunction.toJSON()),this._configDefaultRenderer()},n._initJobHandler=function(){if(null!=this._rasterJobHandler.connectionPromise)return this._rasterJobHandler.connectionPromise;const e=new R;return this._rasterJobHandler.connectionPromise=e.initialize().then((async()=>{a(this),this._rasterJobHandler.instance=e,this.raster.rasterJobHandler=e,"Function"===this.raster.datasetFormat&&this.raster.syncJobHandler(),this.rasterFunction&&await this.updateRasterFunction().catch((()=>{})),this.renderer&&this.updateRenderer()})).catch((()=>{})),this._rasterJobHandler.connectionPromise},n._shutdownJobHandler=function(){this._rasterJobHandler.instance&&this._rasterJobHandler.instance.destroy(),this._rasterJobHandler.instance=null,this._rasterJobHandler.connectionPromise=null,this._rasterJobHandler.refCount=0,this._cachedRendererJson=null,this.raster&&(this.raster.rasterJobHandler=null)},n._configDefaultInterpolation=function(){if(null==this.interpolation){a(this);const{raster:e}=this,t=H.getDefaultInterpolation(e.rasterInfo,e.tileType,this.sourceJSON?.defaultResamplingMethod);this._set("interpolation",t)}},n._configDefaultRenderer=function(e="no"){a(this);const{rasterInfo:t}=this.raster;!this.bandIds&&t.bandCount>1&&(this.bandIds=H.getDefaultBandCombination(t));const r=J.getDefaultVariablInfo(t,{multidimensionalDefinition:this.multidimensionalDefinition,multidimensionalSubset:this.multidimensionalSubset}),n=r?.name;if(!this.renderer||"override"===e){const e=H.createDefaultRenderer(t,{bandIds:this.bandIds,variableName:n}),r=t.statistics,i=r&&r.length>0?r[0]:null,s=i?.max??0,o=i?.min??0;"WCSServer"===this.raster.datasetFormat&&"raster-stretch"===e.type&&(s>1e24||o<-1e24)&&(e.dynamicRangeAdjustment=!0,e.statistics=null,"none"===e.stretchType&&(e.stretchType="min-max")),this.renderer=e}const i=H.normalizeRendererJSON({...this.renderer.toJSON(),variableName:n}),s=H.getVariableRasterInfo(t,n);this.symbolizer?(this.symbolizer.rendererJSON=i,this.symbolizer.rasterInfo=s):this.symbolizer=new T({rendererJSON:i,rasterInfo:s});const o=this.symbolizer.bind();if(o.success){if("auto"===e){const{colormap:e}=this.raster.rasterInfo,t=this.renderer;if(null!=e&&"raster-colormap"===t.type){const e=H.createDefaultRenderer(this.raster.rasterInfo);JSON.stringify(e)!==JSON.stringify(t)&&this._configDefaultRenderer("override")}else if("raster-stretch"===t.type){const e=this.bandIds?.length,r=t.statistics?.length;!t.dynamicRangeAdjustment&&r&&e&&r!==e&&this._configDefaultRenderer("override")}}}else C.warn("imagery-tile-mixin",o.error||"The given renderer is not supported by the layer."),"auto"===e&&this._configDefaultRenderer("override")},t._createClass(r,[{key:"fullExtent",get:function(){return this.rasterInfo?.extent}},{key:"multidimensionalDefinition",set:function(e){this._set("multidimensionalDefinition",e),this.updateRenderer()}},{key:"rasterFunction",set:function(e){"none"===e?.functionName?.toLowerCase()&&(e=void 0),this._set("rasterFunction",e),this.updateRasterFunction()}},{key:"url",set:function(e){this._set("url",f.sanitizeUrl(e,C))}},{key:"renderer",set:function(e){null==e&&null==this.rasterFunction?this._configDefaultRenderer("override"):(this._set("renderer",e),this.updateRenderer())}}]),r}(e);function a(e){if(!e.raster||!e.rasterInfo)throw new o("imagery-tile","no raster")}return r.__decorate([l.property()],n.prototype,"_cachedRendererJson",void 0),r.__decorate([l.property()],n.prototype,"_cachedRasterFunctionJson",void 0),r.__decorate([l.property()],n.prototype,"_compatibleFullExtent",void 0),r.__decorate([l.property()],n.prototype,"_isConstructedFromFunctionRaster",void 0),r.__decorate([l.property()],n.prototype,"_rasterJobHandler",void 0),r.__decorate([l.property()],n.prototype,"bandIds",void 0),r.__decorate([l.property({json:{origins:{service:{read:{source:"copyrightText"}}}}})],n.prototype,"copyright",void 0),r.__decorate([l.property({json:{read:!1}})],n.prototype,"fullExtent",null),r.__decorate([l.property()],n.prototype,"interpolation",void 0),r.__decorate([l.property()],n.prototype,"ioConfig",void 0),r.__decorate([l.property({type:[b],json:{write:!0}})],n.prototype,"multidimensionalDefinition",null),r.__decorate([l.property({type:_,json:{write:!0}})],n.prototype,"multidimensionalSubset",void 0),r.__decorate([l.property()],n.prototype,"raster",void 0),r.__decorate([l.property({type:g,json:{name:"renderingRule",write:!0}})],n.prototype,"rasterFunction",null),r.__decorate([l.property()],n.prototype,"rasterInfo",void 0),r.__decorate([l.property()],n.prototype,"sourceJSON",void 0),r.__decorate([l.property({readOnly:!0,type:z,json:{read:!1}})],n.prototype,"spatialReference",void 0),r.__decorate([l.property({type:F})],n.prototype,"tileInfo",void 0),r.__decorate([l.property(y.url)],n.prototype,"url",null),r.__decorate([l.property({types:i.rasterRendererTypes,json:{name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy(){const e="raster-stretch"===this.renderer?.type&&"none"===this.renderer.stretchType&&!this.renderer.useGamma;return{enabled:!this.loaded||"Raster"===this.raster.tileType||!e}}},origins:{"web-scene":{types:i.websceneRasterRendererTypes,name:"layerDefinition.drawingInfo.renderer",write:{overridePolicy:e=>({enabled:e&&"vector-field"!==e.type&&"flow"!==e.type})}}}}})],n.prototype,"renderer",null),r.__decorate([h.reader("renderer")],n.prototype,"readRenderer",null),r.__decorate([l.property()],n.prototype,"symbolizer",void 0),n=r.__decorate([p.subclass("esri.layers.ImageryTileMixin")],n),n};e.ImageryTileMixin=M,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
