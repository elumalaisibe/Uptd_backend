/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../request","../geometry/support/normalizeUtils","./networkService","./utils","./route/utils","./support/FeatureSet","./support/ServiceAreaSolveResult"],(function(e,r,t,i,o,s,a,n){"use strict";function l(e){return e instanceof a}async function c(e,a,c){const u=[],f=[],p={},y={},m=o.parseUrl(e),{path:v}=m;l(a.facilities)&&i.collectGeometries(a.facilities.features,f,"facilities.features",p),l(a.pointBarriers)&&i.collectGeometries(a.pointBarriers.features,f,"pointBarriers.features",p),l(a.polylineBarriers)&&i.collectGeometries(a.polylineBarriers.features,f,"polylineBarriers.features",p),l(a.polygonBarriers)&&i.collectGeometries(a.polygonBarriers.features,f,"polygonBarriers.features",p);const B=await t.normalizeCentralMeridian(f);for(const r in p){const e=p[r];u.push(r),y[r]=B.slice(e[0],e[1])}if(i.isInputGeometryZAware(y,u)){let e=null;try{e=await i.fetchServiceDescription(v,a.apiKey,c)}catch{}e&&!e.hasZ&&i.dropZValuesOffInputGeometry(y,u)}for(const r in y)y[r].forEach(((e,t)=>{a.get(r)[t].geometry=e}));const S={...c,query:{...m.query,...s.serviceAreaParametersToQueryParameters(a),f:"json"}},{data:g}=await r(`${v}/solveServiceArea`,S);return n.fromJSON(g)}e.solve=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
