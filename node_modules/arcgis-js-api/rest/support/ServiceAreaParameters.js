/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../geometry","../../core/Clonable","../../core/Collection","../../core/JSONSupport","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/enumeration","../../core/accessorSupport/decorators/reader","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/decorators/writer","./commonProperties","./networkEnums","./TravelMode","../../geometry/SpatialReference"],(function(e,t,r,o,i,n,p,a,l,s,u,c,y,d,_,m,w,v){"use strict";var g;let b=g=function(t){function r(e){var r;return(r=t.call(this,e)||this).accumulateAttributes=null,r.apiKey=null,r.attributeParameterValues=null,r.defaultBreaks=null,r.excludeSourcesFromPolygons=null,r.facilities=null,r.geometryPrecision=null,r.geometryPrecisionM=null,r.geometryPrecisionZ=null,r.ignoreInvalidLocations=null,r.impedanceAttribute=null,r.mergeSimilarPolygonRanges=!1,r.outputGeometryPrecision=null,r.outputGeometryPrecisionUnits=null,r.outputLines=null,r.outputPolygons=null,r.outSpatialReference=null,r.overlapLines=!1,r.overlapPolygons=!1,r.overrides=null,r.pointBarriers=null,r.polygonBarriers=null,r.polylineBarriers=null,r.preserveObjectID=null,r.restrictionAttributes=null,r.restrictUTurns=null,r.returnFacilities=!1,r.returnPointBarriers=!1,r.returnPolygonBarriers=!1,r.returnPolylineBarriers=!1,r.splitLinesAtBreaks=!1,r.splitPolygonsAtBreaks=!1,r.timeOfDay=null,r.timeOfDayIsUTC=null,r.travelDirection=null,r.travelMode=null,r.trimOuterPolygon=!1,r.trimPolygonDistance=null,r.trimPolygonDistanceUnits=null,r.useHierarchy=null,r}e._inherits(r,t),r.from=function(e){return a.ensureClass(g,e)};var o=r.prototype;return o.readAccumulateAttributes=function(e){return null==e?null:e.map((e=>m.impedanceAttributeNameJsonMap.fromJSON(e)))},o.writeAccumulateAttributes=function(e,t,r){null!=e&&e.length&&(t[r]=e.map((e=>m.impedanceAttributeNameJsonMap.toJSON(e))))},o.writeFacilities=function(e,t,r){P(e,t,r)},o.writePointBarriers=function(e,t,r){P(e,t,r)},o.writePolygonBarrier=function(e,t,r){P(e,t,r)},o.writePolylineBarrier=function(e,t,r){P(e,t,r)},o.readRestrictionAttributes=function(e){return null==e?null:e.map((e=>m.restrictionAttributeNameJsonMap.fromJSON(e)))},o.writeRestrictionAttributes=function(e,t,r){null!=e&&e.length&&(t[r]=e.map((e=>m.restrictionAttributeNameJsonMap.toJSON(e))))},o.readTimeOfDay=function(e,t){const{timeOfDay:r}=t;return null==r?null:"now"===r?"now":new Date(r)},o.writeTimeOfDay=function(e,t){null!=e&&(t.timeOfDay="now"===e?"now":e.getTime())},e._createClass(r)}(o.ClonableMixin(n.JSONSupport));t.__decorate([p.property({type:[String],json:{name:"accumulateAttributeNames",write:!0}})],b.prototype,"accumulateAttributes",void 0),t.__decorate([c.reader("accumulateAttributes")],b.prototype,"readAccumulateAttributes",null),t.__decorate([d.writer("accumulateAttributes")],b.prototype,"writeAccumulateAttributes",null),t.__decorate([p.property(_.apiKey)],b.prototype,"apiKey",void 0),t.__decorate([p.property({json:{write:!0}})],b.prototype,"attributeParameterValues",void 0),t.__decorate([p.property({type:[Number],json:{write:!0}})],b.prototype,"defaultBreaks",void 0),t.__decorate([p.property({type:[String],json:{write:!0}})],b.prototype,"excludeSourcesFromPolygons",void 0),t.__decorate([p.property({json:{write:!0}})],b.prototype,"facilities",void 0),t.__decorate([d.writer("facilities")],b.prototype,"writeFacilities",null),t.__decorate([p.property({type:Number,json:{write:!0}})],b.prototype,"geometryPrecision",void 0),t.__decorate([p.property({type:Number,json:{write:!0}})],b.prototype,"geometryPrecisionM",void 0),t.__decorate([p.property({type:Number,json:{write:!0}})],b.prototype,"geometryPrecisionZ",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"ignoreInvalidLocations",void 0),t.__decorate([u.enumeration(m.impedanceAttributeNameJsonMap,{name:"impedanceAttributeName",ignoreUnknown:!1})],b.prototype,"impedanceAttribute",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"mergeSimilarPolygonRanges",void 0),t.__decorate([p.property({type:Number,json:{write:!0}})],b.prototype,"outputGeometryPrecision",void 0),t.__decorate([u.enumeration(m.lengthUnitJsonMap)],b.prototype,"outputGeometryPrecisionUnits",void 0),t.__decorate([u.enumeration(m.outputLineJsonMap)],b.prototype,"outputLines",void 0),t.__decorate([u.enumeration(m.outputPolygonJsonMap)],b.prototype,"outputPolygons",void 0),t.__decorate([p.property({type:v,json:{name:"outSR",write:!0}})],b.prototype,"outSpatialReference",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"overlapLines",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"overlapPolygons",void 0),t.__decorate([p.property({json:{write:!0}})],b.prototype,"overrides",void 0),t.__decorate([p.property({json:{name:"barriers",write:!0}})],b.prototype,"pointBarriers",void 0),t.__decorate([d.writer("pointBarriers")],b.prototype,"writePointBarriers",null),t.__decorate([p.property({json:{write:!0}})],b.prototype,"polygonBarriers",void 0),t.__decorate([d.writer("polygonBarriers")],b.prototype,"writePolygonBarrier",null),t.__decorate([p.property({json:{write:!0}})],b.prototype,"polylineBarriers",void 0),t.__decorate([d.writer("polylineBarriers")],b.prototype,"writePolylineBarrier",null),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"preserveObjectID",void 0),t.__decorate([p.property({type:[String],json:{name:"restrictionAttributeNames",write:!0}})],b.prototype,"restrictionAttributes",void 0),t.__decorate([c.reader("restrictionAttributes")],b.prototype,"readRestrictionAttributes",null),t.__decorate([d.writer("restrictionAttributes")],b.prototype,"writeRestrictionAttributes",null),t.__decorate([u.enumeration(m.restrictUTurnJsonMap)],b.prototype,"restrictUTurns",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"returnFacilities",void 0),t.__decorate([p.property({type:Boolean,json:{name:"returnBarriers",write:!0}})],b.prototype,"returnPointBarriers",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"returnPolygonBarriers",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"returnPolylineBarriers",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"splitLinesAtBreaks",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"splitPolygonsAtBreaks",void 0),t.__decorate([p.property({type:Date,json:{type:Number,write:!0}})],b.prototype,"timeOfDay",void 0),t.__decorate([c.reader("timeOfDay")],b.prototype,"readTimeOfDay",null),t.__decorate([d.writer("timeOfDay")],b.prototype,"writeTimeOfDay",null),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"timeOfDayIsUTC",void 0),t.__decorate([u.enumeration(m.travelDirectionJsonMap)],b.prototype,"travelDirection",void 0),t.__decorate([p.property({type:w,json:{write:!0}})],b.prototype,"travelMode",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"trimOuterPolygon",void 0),t.__decorate([p.property({type:Number,json:{write:!0}})],b.prototype,"trimPolygonDistance",void 0),t.__decorate([u.enumeration(m.lengthUnitJsonMap)],b.prototype,"trimPolygonDistanceUnits",void 0),t.__decorate([p.property({type:Boolean,json:{write:!0}})],b.prototype,"useHierarchy",void 0),b=g=t.__decorate([y.subclass("esri.rest.support.ServiceAreaParameters")],b);function P(e,t,r){null!=e&&(t[r]=i.isCollection(e)?{features:e.toArray().map((e=>e.toJSON()))}:e.toJSON())}return b}));
