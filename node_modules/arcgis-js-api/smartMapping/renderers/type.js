/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../renderers/PointCloudClassBreaksRenderer","../../renderers/PointCloudRenderer","../../renderers/PointCloudRGBRenderer","../../renderers/PointCloudStretchRenderer","../../renderers/PointCloudUniqueValueRenderer","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/lang","../../intl/messages","../../renderers/support/LegendOptions","../../renderers/support/utils","../heuristics/outline","../heuristics/sizeRange","./support/utils","../statistics/uniqueValues","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils","../symbology/type"],(function(e,l,r,a,n,i,s,t,o,d,u,p,c,y,m,f,b,g,h,v,w,T,S,E,V,I,z,x){"use strict";const M="date";async function C(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new f("type-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new f("type-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&V.verifyBinningParams(e,"type-renderer");const l={...e,layer:e.layer};l.symbolType=l.symbolType||"2d",l.numTypes=null==l.numTypes?10:l.numTypes,l.defaultSymbolEnabled??(l.defaultSymbolEnabled=!0),l.sortBy??(l.sortBy="count"),l.sortEnabled??(l.sortEnabled=!0),l.statistics=b.clone(l.statistics);const r=e.forBinning?z.binningCapableLayerTypes:z.featureCapableLayerTypes,a=z.createLayerAdapter(l.layer,r,e.forBinning);if(!a)throw new f("type-renderer:invalid-parameters","'layer' must be one of these types: "+z.getLayerTypeLabels(r).join(", "));l.layer=a;const n=null!=l.signal?{signal:l.signal}:null;await a.load(n);const i=a.geometryType;if(l.outlineOptimizationEnabled="polygon"===i&&l.outlineOptimizationEnabled,l.sizeOptimizationEnabled=("point"===i||"multipoint"===i||"polyline"===i)&&l.sizeOptimizationEnabled,"mesh"===i)l.symbolType="3d-volumetric",l.colorMixMode=l.colorMixMode||"replace",l.edgesType=l.edgesType||"none";else{if("3d-volumetric-uniform"===l.symbolType&&"point"!==i)throw new f("type-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(l.symbolType.includes("3d-volumetric")&&(!l.view||"3d"!==l.view.type))throw new f("type-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}const s=await I.getFieldsList({field:l.field,field2:l.field2,field3:l.field3,valueExpression:l.valueExpression}),t=S.verifyBasicFieldValidity(a,s,"type-renderer:invalid-parameters");if(t)throw t;return l}async function L(e){if(!(e&&e.layer&&e.field))throw new f("type-point-cloud-class-renderer:missing-parameters","'layer' and 'field' parameters are required");const l={...e,layer:e.layer};l.statistics=b.clone(l.statistics);const r=[z.LayerType.PointCloudLayer],a=z.createLayerAdapter(l.layer,r);if(!a)throw new f("type-point-cloud-class-renderer:invalid-parameters","'layer' must be one of these types: "+z.getLayerTypeLabels(r).join(", "));if(l.layer=a,l.density=l.density||25,l.size=l.size||"100%",!S.isValidPointSize(l.size))throw new f("type-point-cloud-class-renderer:invalid-parameters","Invalid 'size' parameter. It should be a string of the form '100%'");const n=null!=l.signal?{signal:l.signal}:null;await a.load(n);const i=await I.getFieldsList({field:l.field}),s=S.verifyBasicFieldValidity(a,i,"type-point-cloud-class-renderer:invalid-parameters");if(s)throw s;return l}async function R(e){let l=e.typeScheme,r=null,a=null;const n=await S.getBasemapInfo(e.basemap,e.view);if(r=null!=n.basemapId?n.basemapId:null,a=null!=n.basemapTheme?n.basemapTheme:null,l)return{scheme:x.cloneScheme(l),basemapId:r,basemapTheme:a};const i=x.getSchemes({basemap:r,basemapTheme:a,geometryType:e.geometryType,theme:e.theme,worldScale:e.worldScale,view:e.view});return i&&(l=i.primaryScheme,r=i.basemapId,a=i.basemapTheme),{scheme:l,basemapId:r,basemapTheme:a}}function q(e,l){let r;return r=e.label<l.label?-1:e.label>l.label?1:0,r}function B(e,l){let r;return r=e.value<l.value?-1:e.value>l.value?1:0,r}function P(e,l){let r=l.count-e.count;return 0===r&&(r=q(e,l)),r}function O(e,l){let r=l.count-e.count;return 0===r&&(r=B(e,l)),r}function F(e,l,r){let a;"count"===l?(a=O,r&&"codedValues"in r&&r.codedValues&&(a=P)):"value"===l&&(a=B,r&&"codedValues"in r&&r.codedValues&&(a=q)),a&&e.sort(a)}async function D(e,l,r,a){const n=await g.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),{field:i,field2:s,field3:t}=l,o=e.uniqueValueInfos,d=l.layer,u=i?d.getField(i):null,p=u?d.getFieldDomain(u.name):null,c=-1===l.numTypes?o.length:l.numTypes,m=d.geometryType,f=await R({basemap:l.basemap,geometryType:m,typeScheme:l.typeScheme,worldScale:!!l.symbolType?.includes("3d-volumetric"),view:l.view}),b=f.scheme,w=new y({field:i,field2:s,field3:t,fieldDelimiter:i&&s?I.FIELD_DELIMITER:null}),T=[],E=[],V={value:null,domain:p,fieldInfo:u};o.forEach(((e,l)=>{V.value=e.value,e.label=v.createUniqueValueLabel(V);const r=e.value;(null===r||"string"==typeof r&&r.toLowerCase().includes("<null>"))&&T.unshift(l)}));for(const y of T)E.unshift(o.splice(y,1)[0]);if(!1!==l.sortEnabled&&F(o,l.sortBy,p),u?.type===M){const e=o.filter(((e,l)=>l<c)).map((e=>e.value));V.dateFormatInterval=v.calculateDateFormatInterval(e)}const z=r&&r.opacity;let C=S.createColors(b.colors,o.length);const L=S.getSymbolSizeFromScheme(b,m),q=S.getSymbolOutlineFromScheme(b,m,z);o.forEach(((e,r)=>{V.value=e.value,e.label=v.createUniqueValueLabel(V),e.symbol=S.createSymbol(m,{type:l.symbolType,color:C[r],size:L,outline:q,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}})})),l.valueExpression&&(w.valueExpression=l.valueExpression,w.valueExpressionTitle=l.valueExpressionTitle),l.legendOptions&&(w.legendOptions=new h.LegendOptions(l.legendOptions)),C=S.createColors(b.colors,c);for(let y=0;y<c;y++){const e=o[y];e&&w.addUniqueValueInfo({value:e.value,label:e.label,symbol:S.createSymbol(m,{type:l.symbolType,color:C[y],size:L,outline:q,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}})})}l.defaultSymbolEnabled&&(w.defaultSymbol=S.createSymbol(m,{type:l.symbolType,color:b.noDataColor,size:L,outline:q,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}}),w.defaultLabel=n.other);for(const y of E)y.symbol=S.createSymbol(m,{type:l.symbolType,color:b.noDataColor,size:L,outline:q,meshInfo:{colorMixMode:l.colorMixMode,edgesType:l.edgesType}}),o.push(y);const B=[],P=w.uniqueValueInfos?.length??0,O=P===o.length?-1:P;if(O>-1)for(let y=O;y<o.length;y++)B.push({...o[y]});return r&&r.visualVariables&&r.visualVariables.length&&(w.visualVariables=r.visualVariables.map((e=>e.clone()))),a&&a.minSize&&(w.visualVariables?w.visualVariables.push(a.minSize):w.visualVariables=[a.minSize]),{renderer:w,uniqueValueInfos:o,excludedUniqueValueInfos:B,typeScheme:x.cloneScheme(b),basemapId:f.basemapId,basemapTheme:f.basemapTheme}}async function U(e,l){const r=e.uniqueValueInfos,a=await R({basemap:"gray",theme:"point-cloud-class",geometryType:"point",typeScheme:l}),n=a&&a.scheme,i="point-cloud-class"===n?.theme,s=i?n.colors:S.createColors(n?.colors??[],r.length);return F(r,"value"),r.map(((e,l)=>{const r=e.value;let a=null;return i?(a=s[r],a||(a=s[s.length-1])):a=s[l],{values:[r],color:a,label:e.label}}))}async function A(e){const l=await C(e),{layer:r,view:a,signal:n}=l,i={layer:r,field:l.field,field2:l.field2,field3:l.field3,valueExpression:l.valueExpression,returnAllCodedValues:l.returnAllCodedValues,view:a,signal:n},[s,t,o]=await Promise.all([null!=l.statistics?l.statistics:E(i),l.outlineOptimizationEnabled?w({layer:r,view:a,signal:n}).catch(S.errorCallback):null,l.sizeOptimizationEnabled?T({layer:r,view:a,signal:n}).catch(S.errorCallback):null]);return D(s,l,t,o)}async function j(e){const l=await L(e),r=null!=l.statistics?l.statistics:await E({layer:l.layer,field:l.field,signal:l.signal});return{renderer:new i({field:l.field,pointsPerInch:l.density,pointSizeAlgorithm:S.getPointSizeAlgorithm(l.size),colorUniqueValueInfos:await U(r,l.typeScheme)})}}e.createPCClassRenderer=j,e.createRenderer=A,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
