/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../../core/screenUtils","../../intl/messages","../../intl/substitute","../../renderers/support/AuthoringInfo","../../renderers/support/AuthoringInfoVisualVariable","../../renderers/support/utils","../../renderers/visualVariables/SizeVariable","../../renderers/visualVariables/support/sizeVariableUtils","../heuristics/ageUnit","../heuristics/outline","../heuristics/sizeRange","./support/utils","../statistics/support/ageUtils","../support/binningUtils","../support/utils","../support/adapters/support/layerUtils","../symbology/size"],(function(e,a,i,n,l,s,r,t,o,m,u,p,d,y,c,b,f,h,g,w,v,z,S,T,x,V,E,k){"use strict";const F="date",B=2**53-1;async function I(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new u("size-visual-variable:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new u("size-visual-variable:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&x.verifyBinningParams(e,"size-visual-variable");const a={...e};if("90-10"===a.theme)throw new u("size-visual-variable:not-supported","Only 'high-to-low', 'above', 'below' themes are supported.");const i=e.forBinning?E.binningCapableLayerTypes:E.featureCapableLayerTypes,n=E.createLayerAdapter(a.layer,i,e.forBinning);if(!n)throw new u("size-visual-variable:invalid-parameters","'layer' must be one of these types: "+E.getLayerTypeLabels(i).join(", "));a.layer=n,"height"===a.axis&&(a.sizeOptimizationEnabled=!1);const l=null!=a.signal?{signal:a.signal}:null;await n.load(l);const s=n.geometryType;if("mesh"===s)throw new u("size-visual-variable:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(a.worldScale){if("polyline"===s||"polygon"===s)throw new u("size-visual-variable:not-supported","'worldScale' sizing is not supported for polyline and polygon layers");if(!a.view||"3d"!==a.view.type)throw new u("size-visual-variable:invalid-parameters","'view' parameter should be an instance of SceneView when 'worldScale' parameter is true")}const r=await V.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression}),t=S.verifyBasicFieldValidity(n,r,"size-visual-variable:invalid-parameters");if(t)throw t;return a}async function L(e){if(!(e&&e.layer&&(e.field||e.valueExpression||e.sqlExpression)))throw new u("size-continuous-renderer:missing-parameters","'layer' and 'field', 'valueExpression' or 'sqlExpression' parameters are required");if(e.valueExpression&&!e.sqlExpression&&!e.view)throw new u("size-continuous-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&x.verifyBinningParams(e,"size-continuous-renderer");const a={...e};a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0);const i=e.forBinning?E.binningCapableLayerTypes:E.featureCapableLayerTypes,n=E.createLayerAdapter(a.layer,i,e.forBinning);if(!n)throw new u("size-continuous-renderer:invalid-parameters","'layer' must be one of these types: "+E.getLayerTypeLabels(i).join(", "));a.layer=n;const l=null!=a.signal?{signal:a.signal}:null;await n.load(l);const s=n.geometryType,r=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===s&&a.outlineOptimizationEnabled,"mesh"===s)throw new u("size-continuous-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(r&&("polyline"===s||"polygon"===s))throw new u("size-continuous-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new u("size-continuous-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const t=await V.getFieldsList({field:a.field,normalizationField:a.normalizationField,valueExpression:a.valueExpression}),o=S.verifyBasicFieldValidity(n,t,"size-continuous-renderer:invalid-parameters");if(o)throw o;return a}async function O(e){if(!e||!e.layer||!e.field&&!e.valueExpression)throw new u("size-class-breaks-renderer:missing-parameters","'layer' and 'field' or 'valueExpression' parameters are required");if(e.valueExpression&&!e.view)throw new u("size-class-breaks-renderer:missing-parameters","View is required when 'valueExpression' is specified");e.forBinning&&x.verifyBinningParams(e,"size-class-breaks-renderer");const a={...e};a.symbolType=a.symbolType||"2d",a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0),a.classificationMethod??(a.classificationMethod="equal-interval"),a.normalizationType=V.getNormalizationType(a);const i=e.forBinning?E.binningCapableLayerTypes:E.featureCapableLayerTypes,n=E.createLayerAdapter(a.layer,i,e.forBinning);if(!n)throw new u("size-class-breaks-renderer:invalid-parameters","'layer' must be one of these types: "+E.getLayerTypeLabels(i).join(", "));a.layer=n;if(!(null!=a.minValue&&null!=a.maxValue)&&(null!=a.minValue||null!=a.maxValue))throw new u("size-class-breaks-renderer:missing-parameters","Both 'minValue' and 'maxValue' are required when specifying custom data range");const l=null!=a.signal?{signal:a.signal}:null;await n.load(l);const s=n.geometryType,r=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===s&&a.outlineOptimizationEnabled,"mesh"===s)throw new u("size-class-breaks-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(r&&("polyline"===s||"polygon"===s))throw new u("size-class-breaks-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new u("size-class-breaks-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const t=await V.getFieldsList({field:a.field,normalizationField:a.normalizationField}),o=S.verifyBasicFieldValidity(n,t,"size-class-breaks-renderer:invalid-parameters");if(o)throw o;return a}function C(e){const a={...e};delete a.basemap,delete a.sizeScheme,delete a.legendOptions,delete a.symbolType,delete a.defaultSymbolEnabled;const i=a;return i.analyzeData=!(null!=a.minValue&&null!=a.maxValue),i}function q(e){const a={...e},i=!!a.symbolType?.includes("3d-volumetric"),n=a;return n.worldScale=i,i&&(n.axis="3d-volumetric-uniform"===a.symbolType?"all":"height"),delete a.symbolType,delete a.defaultSymbolEnabled,n}async function D(e){if(!(e&&e.layer&&e.view&&e.startTime&&e.endTime))throw new u("size-age-renderer:missing-parameters","'layer', 'view', 'startTime', 'endTime' parameters are required");const a={...e};a.symbolType??(a.symbolType="2d"),a.defaultSymbolEnabled??(a.defaultSymbolEnabled=!0);const i=E.createLayerAdapter(a.layer,E.featureCapableLayerTypes);if(!i)throw new u("size-age-renderer:invalid-parameters","'layer' must be one of these types: "+E.getLayerTypeLabels(E.featureCapableLayerTypes).join(", "));a.layer=i;const n=null!=a.signal?{signal:a.signal}:null;await i.load(n);const l=i.geometryType,s=a.symbolType.includes("3d");if(a.outlineOptimizationEnabled="polygon"===l&&a.outlineOptimizationEnabled,"mesh"===l)throw new u("size-age-renderer:invalid-parameters","Size visualization is not applicable to layers with 'mesh' geometry type");if(s&&("polyline"===l||"polygon"===l))throw new u("size-age-renderer:not-supported","3d symbols are not supported for polyline and polygon layers");if(a.symbolType.includes("3d-volumetric")&&(!a.view||"3d"!==a.view.type))throw new u("size-age-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or 3d-volumetric-uniform");const r=T.verifyDates(i,a.startTime,a.endTime,"size-age-renderer:invalid-parameters");if(r)throw r;if(a.unit&&!T.supportedAgeUnits.includes(a.unit))throw new u("size-age-renderer:invalid-unit",`Supported units are: ${T.supportedAgeUnits.join(", ")}`);return a}async function R(e){let a=e.sizeScheme,i=null,n=null;const l=await S.getBasemapInfo(e.basemap,e.view);if(i=null!=l.basemapId?l.basemapId:null,n=null!=l.basemapTheme?l.basemapTheme:null,a)return{scheme:k.cloneScheme(a),basemapId:i,basemapTheme:n};const s=k.getSchemes({basemap:i,basemapTheme:n,geometryType:e.geometryType,worldScale:e.worldScale,view:e.view});return s&&(a=s.primaryScheme,i=s.basemapId,n=s.basemapTheme),{scheme:a,basemapId:i,basemapTheme:n}}function U(e,a){let i;switch(a){case"point":case"multipoint":{const a=e;i=[a.minSize,a.maxSize];break}case"polyline":{const a=e;i=[a.minWidth,a.maxWidth];break}case"polygon":{const a=e;i=[a.marker.minSize,a.marker.maxSize];break}}return i}function A(e,a){e.transformationType===g.TransformationType.ClampedLinear&&"below"===a&&e.flipSizes()}async function M(e,a,i,n){const{theme:l,field:s,normalizationField:r,minValue:t,maxValue:o,axis:m}=e,p=e.layer,d=s&&!("function"==typeof s)?p.getField(s):null,y=d?.type===F,f=p.geometryType,g=await R({basemap:e.basemap,geometryType:f,sizeScheme:e.sizeScheme,worldScale:e.worldScale,view:e.view}),w=g.scheme;if(!w)throw new u("size-visual-variable:insufficient-info","Unable to find size scheme");const v=n&&[n.minSize,n.maxSize]||U(w,f),{minDataValue:z,maxDataValue:T,defaultValuesUsed:x}=S.getDataRange(a,i,l,y,"above"===l||"below"===l),V=[],E="height"===m,B=E?m:void 0,I=v[0];let L=v[1];if(E&&"number"==typeof I&&"number"==typeof L){const e=S.getSizeRangeForAxis({minSize:I,maxSize:L},B);V.push(new h({axis:"width-and-depth",minSize:e.minSize})),L=e.maxSize}const O=new h({field:s,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,valueUnit:"unknown",normalizationField:r,axis:B,minSize:I,maxSize:L,minDataValue:z,maxDataValue:T,legendOptions:e.legendOptions});A(O,l),V.unshift(O);const C=new b({type:"size",theme:l,minSliderValue:null!=t?t:a.min,maxSliderValue:null!=o?o:a.max}),q=new c({visualVariables:[C]});return{basemapId:g.basemapId,basemapTheme:g.basemapTheme,visualVariables:V,statistics:a,defaultValuesUsed:x,sizeScheme:k.cloneScheme(w),authoringInfo:q}}async function P(e,i,n,l,s){const r=await d.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),t=s.layer,o=s.field,m=t.geometryType,u=s.defaultSymbolEnabled,p=k.cloneScheme(e.sizeScheme),y="polygon"===m,c=y?p.marker:p,b=y?p.background:null,f=y?"point":m,h=i&&i.opacity,g=e.visualVariables.map((e=>e.clone()));i&&i.visualVariables&&i.visualVariables.length&&g.push(...i.visualVariables.map((e=>e.clone())));return{renderer:new a({backgroundFillSymbol:b&&S.createSymbol(m,{type:s.symbolType,color:b.color,outline:S.getSymbolOutlineFromScheme(b,m,h)}),classBreakInfos:[{minValue:-B,maxValue:B,symbol:S.createSymbol(f,{type:s.symbolType,color:c.color,size:S.getSymbolSizeFromScheme(c,f),outline:S.getSymbolOutlineFromScheme(c,f,h)})}],defaultLabel:u?r.other:null,defaultSymbol:u?S.createSymbol(f,{type:s.symbolType,color:c.noDataColor,size:S.getSymbolSizeFromScheme(c,f,!0),outline:S.getSymbolOutlineFromScheme(c,f,h)}):null,field:o,normalizationField:l,normalizationType:n,valueExpression:s.valueExpression,valueExpressionTitle:s.valueExpressionTitle,visualVariables:g,authoringInfo:e.authoringInfo&&e.authoringInfo.clone()}),visualVariables:e.visualVariables.map((e=>e.clone())),statistics:e.statistics,defaultValuesUsed:e.defaultValuesUsed,sizeScheme:k.cloneScheme(e.sizeScheme),basemapId:e.basemapId,basemapTheme:e.basemapTheme}}function j(e,a){const i=p.toPt(e.minSize),n=(p.toPt(e.maxSize)-i)/(a>=4?a-1:a),l=[];for(let s=0;s<a;s++)l.push(i+n*s);return l}async function W(e,i){const n=await d.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),l=e.layer,s=e.defaultSymbolEnabled,r=l.geometryType,t="polygon"===r,o=e.symbolType?.includes("3d-volumetric"),m=await R({basemap:e.basemap,geometryType:r,sizeScheme:e.sizeScheme,worldScale:o,view:e.view}),u=m.scheme,{result:p,outlineResult:y}=i,b=p?.classBreakInfos??[],h=e.classificationMethod,g=e.normalizationType,w=t?u.marker:u,v=t?u.background:null,z=t?"point":r,T=U(w,z),x=o?S.getSizeRangeForAxis({minSize:T[0],maxSize:T[1]},"height"):null,V=j({minSize:T[0],maxSize:x?x.maxSize:T[1]},b.length),E=y&&y.opacity,F=new a({backgroundFillSymbol:v&&S.createSymbol(r,{type:e.symbolType,color:v.color,outline:S.getSymbolOutlineFromScheme(v,r,E)}),classBreakInfos:b.map(((a,i)=>({minValue:a.minValue,maxValue:a.maxValue,symbol:S.createSymbol(z,{type:e.symbolType,color:w.color,size:V[i],widthAndDepth:x&&x.minSize,outline:S.getSymbolOutlineFromScheme(w,z,E)}),label:a.label}))),defaultLabel:s?n.other:null,defaultSymbol:s?S.createSymbol(z,{type:e.symbolType,color:w.noDataColor,size:S.getSymbolSizeFromScheme(w,z,!0),widthAndDepth:x&&x.minSize,outline:S.getSymbolOutlineFromScheme(w,z,E)}):null,field:e.field,valueExpression:e.valueExpression,valueExpressionTitle:e.valueExpressionTitle,normalizationType:g,normalizationField:e.normalizationField,normalizationTotal:"percent-of-total"===g?p?.normalizationTotal:void 0,legendOptions:e.legendOptions,authoringInfo:new c({type:"class-breaks-size",classificationMethod:h,standardDeviationInterval:e.standardDeviationInterval})});return"standard-deviation"!==h&&f.setLabelsForClassBreaks({classBreakInfos:F.classBreakInfos,classificationMethod:h,normalizationType:g,round:!0}),y&&y.visualVariables&&y.visualVariables.length&&(F.visualVariables=y.visualVariables.map((e=>e.clone()))),{renderer:F,sizeScheme:k.cloneScheme(u),classBreaksResult:p,defaultValuesUsed:!!i.defaultValuesUsed,basemapId:m.basemapId,basemapTheme:m.basemapTheme}}async function $(e){const a=await I(e),{view:i,field:n,valueExpression:l,minValue:s,maxValue:r,layer:t,normalizationField:o,signal:m,statistics:u}=a,p=o?"field":void 0,[d,y,c]=await Promise.all([u??S.getSummaryStatistics({layer:t,field:n,valueExpression:l,sqlExpression:a.sqlExpression,sqlWhere:a.sqlWhere,normalizationType:p,normalizationField:o,minValue:s,maxValue:r,view:i,signal:m}),"90-10"===a.theme?S.getClassBreaks({layer:t,field:n,normalizationField:o,valueExpression:l,classificationMethod:"quantile",minValue:s,maxValue:r,view:i,numClasses:10,signal:m}):null,a.sizeOptimizationEnabled?z({view:i,layer:t,signal:m}).catch(S.errorCallback):null]);return M(a,d,y?.result,c)}async function H(e){const a=await L(e),i={layer:a.layer,view:a.view,signal:a.signal},[n,l]=await Promise.all([$(q(a)),a.outlineOptimizationEnabled?v(i).catch(S.errorCallback):null]),s=a.normalizationField;return P(n,l,s?"field":void 0,s,a)}async function N(e){const a=await O(e);return W(a,await S.getClassBreaks(C(a),a.outlineOptimizationEnabled))}async function _(e){const a=await D(e),{defaultSymbolEnabled:i,view:n,startTime:l,endTime:s,symbolType:r,minValue:t,maxValue:o,signal:m}=a,u=a.layer,p={layer:a.layer,view:a.view,signal:m},[c,b]=await Promise.all([a.unit?{unit:a.unit,statistics:null,valueExpression:null}:await w({view:n,layer:u,startTime:l,endTime:s,minValue:t,maxValue:o,signal:m}),a.outlineOptimizationEnabled?v(p).catch(S.errorCallback):null]),{unit:f,statistics:h}=c,g=T.getAgeExpressions({layer:u,startTime:l,endTime:s,unit:f}).valueExpression,z=await d.fetchMessageBundle("esri/smartMapping/t9n/smartMapping"),x=y.substitute(z[`ageInfo_${f}`],{unit:f,startTime:S.formatDate(l,f,u),endTime:S.formatDate(s,f,u)}),V=await $(q({layer:u,basemap:a.basemap,valueExpression:g,symbolType:r,statistics:h,legendOptions:{title:x},theme:a.theme,sizeScheme:a.sizeScheme,sizeOptimizationEnabled:a.sizeOptimizationEnabled,view:a.view,minValue:t,maxValue:o,signal:m})),E={layer:u,valueExpression:g,defaultSymbolEnabled:i,symbolType:r},k=await P(V,b,null,null,E),F=k.renderer.authoringInfo?.visualVariables;return F?.forEach((e=>S.updateAgeRendererAuthoringInfoVV(e,l,s,f))),{...k,unit:f}}e.createAgeRenderer=_,e.createClassBreaksRenderer=N,e.createContinuousRenderer=H,e.createVisualVariables=$,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
