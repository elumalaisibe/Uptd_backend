/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../renderers/ClassBreaksRenderer","../../renderers/DictionaryRenderer","../../renderers/DotDensityRenderer","../../renderers/HeatmapRenderer","../../renderers/PieChartRenderer","../../renderers/Renderer","../../renderers/SimpleRenderer","../../renderers/UniqueValueRenderer","../../renderers/support/jsonUtils","../../core/Error","../heuristics/outline","../heuristics/sizeRange","./support/utils","../support/binningUtils","../support/adapters/support/layerUtils","../symbology/location"],(function(e,r,a,i,n,o,l,s,t,m,p,c,d,y,u,b,h){"use strict";async function g(e){if(!e||!e.layer)throw new p("location-renderer:missing-parameters","'layer' parameter is required");e.forBinning&&u.verifyBinningParams(e,"location-renderer");const r={...e,layer:e.layer};r.symbolType=r.symbolType||"2d";const a=e.forBinning?b.binningCapableLayerTypes:b.featureCapableLayerTypes,i=b.createLayerAdapter(r.layer,a,e.forBinning);if(!i)throw new p("location-renderer:invalid-parameters","'layer' must be one of these types: "+b.getLayerTypeLabels(a).join(", "));r.layer=i;const n=null!=r.signal?{signal:r.signal}:null;await i.load(n);const o=i.geometryType;if(r.outlineOptimizationEnabled="polygon"===o&&r.outlineOptimizationEnabled,r.sizeOptimizationEnabled=("point"===o||"multipoint"===o||"polyline"===o)&&r.sizeOptimizationEnabled,"mesh"===o)r.symbolType="3d-volumetric",r.colorMixMode=r.colorMixMode||"replace",r.edgesType=r.edgesType||"none";else{if("3d-volumetric-uniform"===r.symbolType&&"point"!==o)throw new p("location-renderer:not-supported","3d-volumetric-uniform symbols are supported for point layers only");if(r.symbolType.includes("3d-volumetric")&&(!r.view||"3d"!==r.view.type))throw new p("location-renderer:invalid-parameters","'view' parameter should be an instance of SceneView when 'symbolType' parameter is '3d-volumetric' or '3d-volumetric-uniform'")}return r}async function f(e,r){let a=e.locationScheme,i=null,n=null;const o=await y.getBasemapInfo(e.basemap,e.view);if(i=null!=o.basemapId?o.basemapId:null,n=null!=o.basemapTheme?o.basemapTheme:null,a)return{scheme:h.cloneScheme(a),basemapId:i,basemapTheme:n};const l=h.getSchemes({basemap:i,basemapTheme:n,geometryType:r,worldScale:!!e.symbolType?.includes("3d-volumetric"),view:e.view});return l&&(a=l.primaryScheme,i=l.basemapId,n=l.basemapTheme),{scheme:a,basemapId:i,basemapTheme:n}}async function w(e){const r=await g(e),a=r.layer.geometryType,i=await f(r,a),n=i.scheme;if(!n)throw new p("location-renderer:insufficient-info","Unable to find location scheme");const{view:o,layer:l,signal:t}=r,[m,u]=await Promise.all([r.outlineOptimizationEnabled?c({view:o,layer:l,signal:t}).catch(y.errorCallback):null,r.sizeOptimizationEnabled?d({view:o,layer:l,signal:t}).catch(y.errorCallback):null]),b=m&&m.opacity,w=new s({symbol:y.createSymbol(a,{type:r.symbolType,color:n.color,size:y.getSymbolSizeFromScheme(n,a),outline:y.getSymbolOutlineFromScheme(n,a,b),meshInfo:{colorMixMode:r.colorMixMode,edgesType:r.edgesType}})});return m&&m.visualVariables&&m.visualVariables.length&&(w.visualVariables=m.visualVariables.map((e=>e.clone()))),u&&u.minSize&&(w.visualVariables?w.visualVariables.push(u.minSize):w.visualVariables=[u.minSize]),{renderer:w,locationScheme:h.cloneScheme(n),basemapId:i.basemapId,basemapTheme:i.basemapTheme}}e.createRenderer=w,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
