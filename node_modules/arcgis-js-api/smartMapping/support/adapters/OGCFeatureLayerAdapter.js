/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/arrayUtils","../../../core/Error","../../../core/reactiveUtils","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../layers/support/fieldUtils","../../statistics/support/predominanceUtils","../../statistics/support/utils","../../statistics/support/WorkerClient","../utils","./FeatureLayerAdapter","./support/utils","../../../statistics/utils"],(function(e,t,r,s,a,i,n,o,u,l,c,p,d,y,f,h,w){"use strict";let m=function(t){function i(e){return t.call(this,e)||this}e._inherits(i,t);var n=i.prototype;return n._waitForLayerViewUpdate=async function(e){if(!e)throw new s("ogc-feature-layer-adapter:insufficient-data","layerView is required to fetch the features");await a.whenOnce((()=>!e.updating))},n._summaryStatsFromClientQuery=async function(e,t){const{signal:r,view:i}=e;if(!i)throw new s("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const n=h.getSummaryStatsQuery(this,e,t),o=await i.whenLayerView(this.layer);await a.whenOnce((()=>!o.updating),r);const u=await o.queryFeatures(n,{signal:r}),l=h.getSummaryStatisticsFromFeatureSet(u,t);return w.processSummaryStatisticsResult(l)},n._uvFromClientQuery=async function(e,t){const{signal:r,view:i}=e;if(!i)throw new s("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const n=h.getUVQuery(this,e),o=await i.whenLayerView(this.layer);await a.whenOnce((()=>!o.updating),r);const u=await o.queryFeatures(n,{signal:r}),l=await h.getUniqueValuesFromFeatureSet(u,{layer:this,field:e.field,field2:e.field2,field3:e.field3,fieldDelimiter:y.FIELD_DELIMITER,view:e.view,signal:e.signal});return w.createUVResult(l,t,e.returnAllCodedValues,y.FIELD_DELIMITER)},n.summaryStatistics=function(e){const{field:t,valueExpression:r,sqlExpression:a,features:i,view:n}=e,o=t?this.getField(t):null,u=l.isDateField(o),c=!!r,p="3d"===n?.type;if(!r&&a&&!this.supportsSQLExpression)throw new s("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return c||i||p?this._summaryStatsFromMemory(e,o):this._summaryStatsFromClientQuery(e,u)},n.uniqueValues=async function(e){const{valueExpression:t,sqlExpression:r,features:a,view:i}=e,n=await h.getDomainsForFields(e,this),o=!!t,u="3d"===i?.type;if(!t&&r&&!this.supportsSQLExpression)throw new s("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return o||a||u?this._uvFromMemory(e,n):this._uvFromClientQuery(e,n)},n.histogram=function(e){const{features:t,valueExpression:r,normalizationType:a,sqlExpression:i}=e,n=t||!!r;if(!r&&i&&!this.supportsSQLExpression)throw new s("ogc-feature-layer-adapter:not-supported","Layer does not support standardized SQL expression for queries");return n||a?this._histogramFromMemory(e):this._histogramForField(e)},n.classBreaks=function(e){return!1!==e.analyzeData?this._classBreaksFromMemory(e):this._classBreaksFromInterpolation(e)},n.queryFeatureCount=async function(e){const{whereClause:t,view:r,signal:i}=e;if(!r)throw new s("ogc-feature-layer-adapter:insufficient-data","view is required to fetch the features from layerView");const n=this.layer.createQuery();n.where=p.mergeWhereClauses(n.where,t);const o=await r.whenLayerView(this.layer);return await a.whenOnce((()=>!o.updating),i),o.queryFeatureCount(n,{signal:i})},n.generateRenderer=function(e,t){throw new s("ogc-feature-layer-adapter:not-supported","OGCFeatureLayer does not support generateRenderer operation")},n.predominantCategories=async function(e){const{fields:t,view:r,signal:s}=e,a=c.getArcadeForPredominantCategory(t),i=await this._uvFromMemory({valueExpression:a,view:r,signal:s});return h.getPredominantCategoriesFromUVInfos(i.uniqueValueInfos,t)},n.getSampleFeatures=async function(e,t){const{view:a,sampleSize:i,requiredFields:n,returnGeometry:o,signal:u}=e,l=this.layer.createQuery(),c=1;if(l.outSpatialReference=e.spatialReference||a&&a.spatialReference,l.returnGeometry=!!o,l.outFields=n,!a)throw new s("ogc-feature-layer-adapter:not-supported","view is required to get sample features for OGCFeatureLayer");const p=await a.whenLayerView(this.layer);if(h.getMissingFields(this,n,p).length)throw new s("ogc-feature-layer-adapter:not-supported","Required fields need to be passed in the outFields for OGCFeatureLayer");const d=await this._fetchFeaturesFromMemory(p,l,u,t),y=null!=i&&i>0&&i<=d.length?i:d.length;return r.pickRandom(d,y,c)},n.load=function(e){const t=this.layer.load(e).then((async t=>{this.geometryType=t.geometryType,this.objectIdField=t.objectIdField,this.supportsSQLExpression=t.get("capabilities.query.supportsSqlExpression"),this.minScale=t.minScale,this.maxScale=t.maxScale,this.fullExtent=t.fullExtent,this.workerClient=d.WorkerClient.getInstance(),await this.workerClient.open(e.signal)}));return this.addResolvingPromise(t),Promise.resolve(this)},e._createClass(i)}(f);m=t.__decorate([u.subclass("esri.smartMapping.support.adapters.OGCFeatureLayerAdapter")],m);return m}));
