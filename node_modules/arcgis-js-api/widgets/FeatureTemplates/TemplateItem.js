/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../Graphic","../../core/Accessor","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../symbols/support/symbolUtils"],(function(e,t,r,n,l,o,i,s,a,p,u,c){"use strict";const y=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"}));var d;const m="esri.widgets.FeatureTemplates.TemplateItem";let h=d=function(e){function r(t){var r;return(r=e.call(this,t)||this)._activeFetchInfo={id:null,request:null},r.layer=null,r.template=null,r.thumbnail=null,r}t._inherits(r,e);var n=r.prototype;return n.initialize=function(){this.addHandles(o.watch((()=>{const{layer:e}=this;return[e&&"renderer"in e?e.renderer:null,this.template]}),(()=>{this._activeFetchInfo.id=null,this._activeFetchInfo.request=null,this._set("thumbnail",null)}),o.initial))},n.clone=function(){const e=null!=this.thumbnail?this.thumbnail.cloneNode(!0):null,t=new d({layer:this.layer,template:this.template});return t._set("thumbnail",e),t},r.fetchThumbnail=async function(e,t){const r=await b(e,t);if(null==r)return null;const n={maxSize:36};"dictionary"===e.renderer?.type&&(n.fieldMap=e.renderer.fieldMap??void 0,n.feature={attributes:t.prototype.attributes??{}});return await c.renderPreviewHTML(r,n)},t._createClass(r,[{key:"description",get:function(){return this.template?.description},set:function(e){this.template&&(this.template.description=e)}},{key:"label",get:function(){return this.template?.name},set:function(e){this.template&&(this.template.name=e)}},{key:"id",get:function(){return`${this.label??""}â€“${this.layer?.id}`}},{key:"supportsUpload",get:function(){return"scene"===this.layer.type}}]),r}(l);async function b(e,t){const{renderer:r}=e;if(r){const e=new n({attributes:t.prototype.attributes}),l=await r.getSymbolAsync(e);if(l)return l}return f(e)}async function f(t){const{geometryType:r}=t,n="point"===r||"multipoint"===r?await new Promise(((t,r)=>e(["../../symbols/SimpleMarkerSymbol"],(e=>t(y(e))),r))):"polyline"===r?await new Promise(((t,r)=>e(["../../symbols/SimpleLineSymbol"],(e=>t(y(e))),r))):"polygon"===r||"mesh"===r||"multipatch"===r?await new Promise(((t,r)=>e(["../../symbols/SimpleFillSymbol"],(e=>t(y(e))),r))):null;return n?new n.default:null}r.__decorate([i.property()],h.prototype,"description",null),r.__decorate([i.property()],h.prototype,"label",null),r.__decorate([i.property()],h.prototype,"layer",void 0),r.__decorate([i.property()],h.prototype,"template",void 0),r.__decorate([i.property({readOnly:!0})],h.prototype,"thumbnail",void 0),r.__decorate([i.property()],h.prototype,"id",null),r.__decorate([i.property()],h.prototype,"supportsUpload",null),h=d=r.__decorate([u.subclass(m)],h);return h}));
