/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/Accessor","../../core/asyncUtils","../../core/Handles","../../core/handleUtils","../../core/maybe","../../core/memoize","../../core/promiseUtils","../../core/reactiveUtils","../../core/throttle","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../support/elevationInfoUtils","./support/constants","./support/geometryUtils","./support/profileUtils"],(function(e,t,o,r,i,l,s,a,n,p,c,d,u,h,f,_,m,P,v,g,y){"use strict";const M="line-change";e.ElevationProfileController=function(e){function o(t){var o;return(o=e.call(this,t)||this)._handles=new l,o._updateTask=null,o._paramsPerProfile=new Map,o._getUpdateParametersMemoized=n.memoize(((e,t,o)=>({stationary:e,visibleProfiles:t,generationParameters:o}))),o._getGenerationParametersMemoized=n.memoize(((e,t,o,r,i,l,s)=>g.isPolyline(t)&&g.isValidInputPath(t)&&null!=r?{view:e,geometry:t,elevationInfo:o,options:l,queue:r,cache:i,slicePlane:s}:null)),o._getElevationInfoMemoized=n.memoize(((e,t)=>({mode:e,offset:t}))),o._getOptionsMemoized=n.memoize(((e,t,o)=>{const{densificationMaxSamples:r,maxTotalSamples:i}=v.getConfig();return{geodesicDistanceThreshold:e,samplingDistance:t,densificationMaxSamples:Math.round(r/o),maxTotalSamples:i}})),o._updateThrottled=d.throttle((e=>p.ignoreAbortErrors(o._update(e))),v.getConfig().updateThrottleMillis),o}t._inherits(o,e);var r=o.prototype;return r.initialize=function(){const e=this.viewModel;this._handles.add([c.watch((()=>e.profiles.toArray()),(e=>{this._abortUpdate(),this._paramsPerProfile.clear(),this._handles.remove(M),this._handles.add(e.map((e=>s.handlesGroup([e.attach(this.viewModel),e.on("change",(()=>{this._invalidateProfile(e)}))]))),M)}),c.syncAndInitial),this._updateThrottled,c.watch((()=>this._updateParameters),this._updateThrottled,c.syncAndInitial)])},r.destroy=function(){this._handles.destroy(),this._paramsPerProfile.clear()},r._update=async function({stationary:e,visibleProfiles:t,generationParameters:o}){this._abortUpdate(),e&&(null!=o?this._updateTask=i.createTask((async e=>{this.viewModel.error=null;const r=t.filter((e=>!this._isProfileValid(e,o))),i=y.generateProfiles({...o,providers:r},{signal:e});try{for await(const t of i){p.throwIfAborted(e),this._clearInvalidResults(o);for(let e=0;e<r.length;e++)r[e].result=t[e]}for(const e of r)this._paramsPerProfile.set(e,o)}catch(l){p.throwIfAbortError(l),this._abortUpdate(),this.viewModel.error=l,r.forEach((e=>{e.result=null}))}})):this._clearResults())},r._abortUpdate=function(){this._updateTask=a.abortMaybe(this._updateTask)},r._isProfileValid=function(e,t){return this._paramsPerProfile.has(e)&&this._paramsPerProfile.get(e)===t},r._invalidateProfile=function(e){this._paramsPerProfile.delete(e),this._updateThrottled(this._updateParameters)},r._clearInvalidResults=function(e){for(const t of this.viewModel.profiles.items)this._isProfileValid(t,e)||(t.result=null,this._paramsPerProfile.delete(t))},r._clearResults=function(){for(const e of this.viewModel.profiles.items)e.result=null,this._paramsPerProfile.delete(e)},t._createClass(o,[{key:"_updateParameters",get:function(){const{viewModel:e}=this,t=e.view;return this._getUpdateParametersMemoized(null==t||t.stationary,this.viewModel.visibleProfiles,this._generationParameters)}},{key:"_generationParameters",get:function(){const{view:e,input:t,queue:o,tileCache:r}=this.viewModel;return null!=e&&e.ready?this._getGenerationParametersMemoized(e,a.applySome(t,(e=>e.geometry)),this._elevationInfo,o,r,this._options,"3d"===e.type?e.slicePlane:null):null}},{key:"_elevationInfo",get:function(){const e=a.applySome(this.viewModel.input,(e=>P.hasGraphicFeatureExpressionInfo(e)?null:P.getGraphicEffectiveElevationInfo(e)));return null!=e?this._getElevationInfoMemoized(e.mode,e.offset):null}},{key:"_options",get:function(){const e=this.viewModel,t=e.visibleProfiles.length;let o=e.minDemResolution??v.getConfig().defaultDemResolution;return o=parseFloat(o.toFixed(2)),this._getOptionsMemoized(e.geodesicDistanceThreshold,o,t)}}]),o}(r),o.__decorate([u.property({nonNullable:!0})],e.ElevationProfileController.prototype,"viewModel",void 0),o.__decorate([u.property()],e.ElevationProfileController.prototype,"_updateParameters",null),o.__decorate([u.property()],e.ElevationProfileController.prototype,"_generationParameters",null),o.__decorate([u.property()],e.ElevationProfileController.prototype,"_elevationInfo",null),o.__decorate([u.property()],e.ElevationProfileController.prototype,"_options",null),e.ElevationProfileController=o.__decorate([m.subclass("esri.widgets.ElevationProfile.ElevationProfileController")],e.ElevationProfileController),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
