/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../Color","../../core/handleUtils","../../core/maybe","../../core/memoize","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../layers/support/ElevationQuery","../../support/elevationInfoUtils","./ElevationProfileLine"],(function(e,t,o,r,n,i,a,l,s,c,p,u,y,v,d){"use strict";let f=function(t){function l(e){var r;return(r=t.call(this,e)||this).type="input",r.color=new o("#00c8c8"),r.viewVisualizationEnabled=!1,r.numSamplesForPreview=50,r.numSamplesPerChunk=500,r.chartFillEnabled=!1,r.chartStrokeOffsetY=-1,r._getQueryElevationDependencies=i.memoize(((e,t,o,r,i)=>n.applySome(e,(e=>({elevationInfo:e,visibleLayers:t,view:o,stationary:r,spatialReference:i}))))),r}e._inherits(l,t);var s=l.prototype;return s.queryElevation=async function(e,{noDataValue:t,signal:o}){const r=this.queryElevationDependencies;if(null==r)throw new Error("ElevationProfileLineInput: no dependencies");const{view:n,elevationInfo:i,spatialReference:a}=r;if("on-the-ground"===i.mode&&"3d"===n.type&&a){const r=await y.GeometryDescriptor.fromGeometry(e).project(a,o);if(!r)return{geometry:e,noDataValue:t};const i=n.elevationProvider;return r.coordinates.forEach((e=>{e.z=i.getElevation(e.x,e.y,0,a,"ground")??0})),{geometry:r.export(),noDataValue:t}}return{geometry:e,noDataValue:t}},s.attach=function(t){const o=()=>this._onChange();return r.handlesGroup([e._get(e._getPrototypeOf(l.prototype),"attach",this).call(this,t),a.watch((()=>this.queryElevationDependencies),o),a.on((()=>t.elevationProvider),"elevation-change",o,{onListenerAdd:o,onListenerRemove:o})])},e._createClass(l,[{key:"queryElevationDependencies",get:function(){const e=this._viewModel?.view;return null==e?null:this._getQueryElevationDependencies(this._elevationInfo,this._visibleLayers,e,e.stationary,e.spatialReference)}},{key:"available",get:function(){return!this._viewModel?.inputIsSketched}},{key:"_elevationInfo",get:function(){return n.applySome(this._viewModel?.input,v.getGraphicEffectiveElevationInfo)}},{key:"_visibleLayers",get:function(){const e=this._viewModel?.view;return n.applySome(e,(e=>e.map?.allLayers?.filter((e=>e.visible)).toArray()))??[]}}]),l}(d);t.__decorate([l.property({type:o,nonNullable:!0})],f.prototype,"color",void 0),t.__decorate([l.property()],f.prototype,"viewVisualizationEnabled",void 0),t.__decorate([l.property()],f.prototype,"queryElevationDependencies",null),t.__decorate([l.property()],f.prototype,"available",null),t.__decorate([l.property()],f.prototype,"_elevationInfo",null),t.__decorate([l.property()],f.prototype,"_visibleLayers",null),f=t.__decorate([u.subclass("esri.widgets.ElevationProfile.ElevationProfileLineInput")],f);return f}));
