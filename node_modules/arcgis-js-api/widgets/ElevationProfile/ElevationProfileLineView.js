/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../Color","../../core/handleUtils","../../core/maybe","../../core/memoize","../../core/reactiveUtils","../../core/SetUtils","../../core/unitUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../chunks/vec3","../../chunks/vec4f64","../../geometry/ellipsoidUtils","../../geometry/support/ray","../../layers/support/ElevationQuery","../../views/3d/webgl-engine/lib/Intersector","../../views/3d/webgl-engine/lib/IntersectorInterfaces","../../views/3d/webgl-engine/lib/intersectorUtilsConversions","./ElevationProfileLine"],(function(e,t,r,n,o,i,s,l,c,a,u,p,d,y,_,v,f,h,w,m,g,I,b){"use strict";const E=2e5;let x=function(t){function a(e){var n;return(n=t.call(this,e)||this).type="view",n.color=new r("#cf4ccf"),n.viewVisualizationEnabled=!0,n.include=null,n.exclude=null,n.numSamplesForPreview=50,n.numSamplesPerChunk=25,n._getQueryElevationDependencies=i.memoize(((e,t,r,n,o,i,s)=>({inputGraphicUid:null!=e?L(e):null,visibleLayers:t,maxIntersectionDistance:r,intersectOptions:n,view:o,stationary:i,spatialReference:s}))),n._vecA=v.create(),n._vecB=v.create(),n._ray=h.create(),n}e._inherits(a,t);var u=a.prototype;return u.queryElevation=async function(e,{noDataValue:t,signal:r}){const n=this.queryElevationDependencies;if(null==n)throw new Error("ElevationProfileLineInput: no dependencies");const o=this._intersector;if(null==o)throw new Error("ElevationProfileLineInput: no view");const{intersectOptions:i,view:s,spatialReference:l}=n,c=s.renderCoordsHelper,a=s.sceneIntersectionHelper,u=this._vecA,p=this._vecA,d=this._vecB,y=this._ray;if(!l)return{geometry:e,noDataValue:t};const v=await w.GeometryDescriptor.fromGeometry(e).project(l,r);if(!v)return{geometry:e,noDataValue:t};const f=v.coordinates,m=f.length;for(let w=0;w<m;++w){const e=f[w];_.set(d,e.x,e.y,e.z??0),c.toRenderCoords(d,l,d),c.setAltitude(u,E,d);const r=h.fromPoints(u,d,y);a.computeIntersection(r,o,i);const s=D(n,o.results.all);s?(s.getIntersectionPoint(p),c.fromRenderCoords(p,p,l),e.z=p[2]):e.z=t}return{geometry:v.export(),noDataValue:t}},u.attach=function(t){const r=()=>this._onChange();return n.handlesGroup([e._get(e._getPrototypeOf(a.prototype),"attach",this).call(this,t),s.watch((()=>this.queryElevationDependencies),r),s.on((()=>t.elevationProvider),"elevation-change",r,{onListenerAdd:r,onListenerRemove:r})])},e._createClass(a,[{key:"minDemResolution",get:function(){const e=this._viewModel?.view;if(null==e||"3d"!==e.type)return null;const t=e.pointsOfInterest?.focus?.renderLocation;if(!t)return null;return e.state.camera.computeRenderPixelSizeAt(t)*c.getMetersPerVerticalUnitForSR(e.spatialReference)}},{key:"queryElevationDependencies",get:function(){return o.applySome(this._view,(e=>this._getQueryElevationDependencies(this._viewModel?.input,this._visibleLayers,this._maxIntersectionDistance,this._intersectOptions,e,e.stationary,e.spatialReference)))}},{key:"_visibleLayers",get:function(){const e=this._view;return o.applySome(e,(e=>e.map?.allLayers?.filter((e=>e.visible)).toArray()))??[]}},{key:"_intersectOptions",get:function(){const e=this._view;if(null==e)return{};const t=e.externalToInternalIntersectOptions({include:this.include,exclude:this.exclude}),r=e.externalToInternalIntersectOptions({exclude:this._pointCloudLayers});return t.exclude=l.union(t.exclude,r.exclude),t}},{key:"_pointCloudLayers",get:function(){const e=this._view;return null==e?[]:e.allLayerViews.toArray().filter((e=>"point-cloud"===e.layer?.type)).map((e=>e.layer))}},{key:"_view",get:function(){const e=this._viewModel?.view;return null!=e&&"3d"===e.type?e:null}},{key:"_maxIntersectionDistance",get:function(){const e=this._view;return null!=e&&e.renderCoordsHelper?f.getReferenceEllipsoid(e.spatialReference).radius/e.renderCoordsHelper.unitInMeters:Number.POSITIVE_INFINITY}},{key:"_intersector",get:function(){const e=this._view;if(null==e)return null;const t=m.newIntersector(e.state.viewingMode),r=t.options;return r.hud=!1,r.invisibleTerrain=!1,r.backfacesTerrain=!1,r.selectionMode=!1,r.store=g.StoreResults.ALL,t}}]),a}(b);function D({view:e,inputGraphicUid:t,maxIntersectionDistance:r},n){for(const o of n){if(null!=o.distanceInRenderSpace&&o.distanceInRenderSpace>r)continue;const n=I.toGraphic(o,e);if(null==n||L(n)!==t)return o}return null}function L(e){if(e.layer&&"objectIdField"in e.layer){const t=e.attributes[e.layer.objectIdField];if(t)return`o-${e.layer.id}-${t}`}return`u-${e.uid}`}t.__decorate([a.property({type:r,nonNullable:!0})],x.prototype,"color",void 0),t.__decorate([a.property()],x.prototype,"viewVisualizationEnabled",void 0),t.__decorate([a.property()],x.prototype,"include",void 0),t.__decorate([a.property()],x.prototype,"exclude",void 0),t.__decorate([a.property({readOnly:!0})],x.prototype,"minDemResolution",null),t.__decorate([a.property()],x.prototype,"queryElevationDependencies",null),t.__decorate([a.property()],x.prototype,"_visibleLayers",null),t.__decorate([a.property()],x.prototype,"_intersectOptions",null),t.__decorate([a.property()],x.prototype,"_pointCloudLayers",null),t.__decorate([a.property()],x.prototype,"_view",null),t.__decorate([a.property()],x.prototype,"_maxIntersectionDistance",null),t.__decorate([a.property()],x.prototype,"_intersector",null),x=t.__decorate([y.subclass("esri.widgets.ElevationProfile.ElevationProfileLineView")],x);return x}));
