/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Accessor","../../../core/Error","../../../core/HandleOwner","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../views/interactive/snapping/FeatureSnappingLayerSource","../../LayerList/support/layerListUtils","./SnappingLayerListViewModel"],(function(e,r,t,n,i,a,o,s,l,p,c,u,d,y){"use strict";const g="esri.widgets.support.SnappingControls.SnappingControlsViewModel";let h=function(r){function t(e){var t;return(t=r.call(this,e)||this).layerListViewModel=new y.SnappingLayerListViewModel,t.snappingOptions=null,t.view=null,t}e._inherits(t,r);var i=t.prototype;return i.initialize=function(){this.handles.add([a.watch((()=>({viewModel:this.layerListViewModel,view:this.view})),(({viewModel:e,view:r})=>{e.view=r}),a.initial),a.watch((()=>({viewModel:this.layerListViewModel,sources:this.snappingOptions?.featureSources})),(({viewModel:e,sources:r})=>{e.featureSnappingSources=r}),a.initial)])},i.toggleSnappingForLayers=function(e,r){e?.forEach((e=>r?this.enableSnappingForLayer(e):this.disableSnappingForLayer(e)))},i.toggleSnappingForAllLayers=function(e){this.layerListViewModel.selectableItems.forEach((({layer:{id:r}})=>{e?this.enableSnappingForLayer(r):this.disableSnappingForLayer(r)}))},i.enableSnappingForLayer=function(e){(this._findSnappingSourceForLayer(e)??this._makeSnappingSourceForLayer(e)).enabled=!0},i.disableSnappingForLayer=function(e){const r=this._findSnappingSourceForLayer(e);r&&(r.enabled=!1)},i.updateEnabledFeatureSources=function(e){for(const r of this.snappingOptions.featureSources)d.canDisplayLayer(r.layer)&&(r.enabled=e.includes(r.layer.id))},i._findSnappingSourceForLayer=function(e){return this.snappingOptions.featureSources.find((r=>r.layer.id===e))},i._makeSnappingSourceForLayer=function(e){const r=this.layerListViewModel.operationalItemsFlat.find((r=>r.layer.id===e))?.layer;if(!r)throw new n("snapping-controls:layer-not-found",`cannot enable snapping for layer with id ${e} because no such layer was found in the view`);const t=new u({layer:r});return this.snappingOptions.featureSources.add(t),t},e._createClass(t,[{key:"allLayersEnabled",get:function(){return(this.layerListViewModel?.selectableItems??[]).every((e=>e.enabled))}},{key:"allLayersDisabled",get:function(){return(this.layerListViewModel?.selectableItems??[]).every((e=>!e.enabled))}},{key:"layersEnabledCount",get:function(){return this.layerListViewModel?.selectableItems?.filter((e=>e.enabled)).length??0}},{key:"state",get:function(){return this.get("snappingOptions")?"ready":"disabled"}}]),t}(i.HandleOwnerMixin(t));r.__decorate([o.property()],h.prototype,"allLayersEnabled",null),r.__decorate([o.property()],h.prototype,"allLayersDisabled",null),r.__decorate([o.property({constructOnly:!0})],h.prototype,"layerListViewModel",void 0),r.__decorate([o.property()],h.prototype,"layersEnabledCount",null),r.__decorate([o.property()],h.prototype,"snappingOptions",void 0),r.__decorate([o.property()],h.prototype,"state",null),r.__decorate([o.property()],h.prototype,"view",void 0),h=r.__decorate([c.subclass(g)],h);return h}));
