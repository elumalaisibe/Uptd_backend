/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../Graphic","../../core/Accessor","../../core/Collection","../../core/Error","../../core/reactiveUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/decorators/cast","../../core/arrayUtils","../../core/has","../../core/accessorSupport/decorators/subclass","../../rest/query/support/AttachmentInfo","../../rest/support/AttachmentQuery","../Feature/support/featureUtils"],(function(t,e,a,i,n,r,c,o,s,h,d,l,p,u,f){"use strict";const m={editing:!1,operations:{add:!0,update:!0,delete:!0}},y=n.ofType(p);let A=function(e){function a(t){var a;return(a=e.call(this,t)||this)._getAttachmentsPromise=null,a._attachmentLayer=null,a.capabilities={...m},a.activeAttachmentInfo=null,a.activeFileInfo=null,a.attachmentInfos=new y,a.fileInfos=new n,a.graphic=null,a.mode="view",a.filesEnabled=!1,a.addHandles(c.watch((()=>a.graphic),(()=>a._graphicChanged()),c.initial)),a}t._inherits(a,e);var i=a.prototype;return i.destroy=function(){this._attachmentLayer=null,this.graphic=null},i.castCapabilities=function(t){return{...m,...t}},i.getAttachments=async function(){const{_attachmentLayer:t,attachmentInfos:e}=this;if(!t||"function"!=typeof t.queryAttachments)throw new r("invalid-layer","getAttachments(): A valid layer is required.");const a=this._getObjectId(),i=new u({objectIds:[a],returnMetadata:!0}),n=[],c=t.queryAttachments(i).then((t=>t[a]||n)).catch((()=>n));this._getAttachmentsPromise=c,this.notifyChange("state");const o=await c;return e.removeAll(),o.length&&e.addMany(o),this._getAttachmentsPromise=null,this.notifyChange("state"),o},i.addAttachment=async function(t,e=this.graphic){const{_attachmentLayer:a,attachmentInfos:i,capabilities:n}=this;if(!e)throw new r("invalid-graphic","addAttachment(): A valid graphic is required.",{graphic:e});if(!t)throw new r("invalid-attachment","addAttachment(): An attachment is required.",{attachment:t});if(!n.operations?.add)throw new r("invalid-capabilities","addAttachment(): add capabilities are required.");if(!a||"function"!=typeof a.addAttachment)throw new r("invalid-layer","addAttachment(): A valid layer is required.");const c=a.addAttachment(e,t).then((t=>this._queryAttachment(t.objectId,e))),o=await c;return i.add(o),o},i.deleteAttachment=async function(t){const{_attachmentLayer:e,attachmentInfos:a,graphic:i,capabilities:n}=this;if(!t)throw new r("invalid-attachment-info","deleteAttachment(): An attachmentInfo is required.",{attachmentInfo:t});if(!n.operations?.delete)throw new r("invalid-capabilities","deleteAttachment(): delete capabilities are required.");if(!e||"function"!=typeof e.deleteAttachments)throw new r("invalid-layer","deleteAttachment(): A valid layer is required.");if(!i)throw new r("invalid-graphic","deleteAttachment(): A graphic is required.");const c=e.deleteAttachments(i,[t.id]).then((()=>t)),o=await c;return a.remove(o),o},i.updateAttachment=async function(t,e=this.activeAttachmentInfo){const{_attachmentLayer:a,attachmentInfos:i,graphic:n,capabilities:c}=this;if(!t)throw new r("invalid-attachment","updateAttachment(): An attachment is required.",{attachment:t});if(!e)throw new r("invalid-attachment-info","updateAttachment(): An attachmentInfo is required.",{attachmentInfo:e});if(!c.operations?.update)throw new r("invalid-capabilities","updateAttachment(): Update capabilities are required.");const o=i.findIndex((t=>t===e));if(!a||"function"!=typeof a.updateAttachment)throw new r("invalid-layer","updateAttachment(): A valid layer is required.");if(!n)throw new r("invalid-graphic","updateAttachment(): A graphic is required.");const s=a.updateAttachment(n,e.id,t).then((t=>this._queryAttachment(t.objectId))),h=await s;return i.splice(o,1,h),h},i.commitFiles=async function(){return await Promise.all(this.fileInfos.items.map((t=>this.addAttachment(t.form)))),this.fileInfos.removeAll(),this.getAttachments()},i.addFile=function(t,e){if(!t||!e)return null;const a={file:t,form:e};return this.fileInfos.add(a),a},i.updateFile=function(t,e,a=this.activeFileInfo){if(!t||!e||!a)return null;const i=this.fileInfos.findIndex((t=>a===t));return i>-1&&this.fileInfos.splice(i,1,{file:t,form:e}),this.fileInfos.items[i]},i.deleteFile=function(t){const e=this.fileInfos.find((e=>e.file===t));return e?(this.fileInfos.remove(e),e):null},i._queryAttachment=async function(t,e){const{_attachmentLayer:a}=this;if(!t||!a?.queryAttachments)throw new r("invalid-attachment-id","Could not query attachment.");const i=this._getObjectId(e),n=new u({objectIds:[i],attachmentsWhere:`AttachmentId=${t}`,returnMetadata:!0});return a.queryAttachments(n).then((t=>t[i][0]))},i._getObjectId=function(t=this.graphic){return t?.getObjectId()??null},i._graphicChanged=function(){this.graphic&&(this._setAttachmentLayer(),this.getAttachments().catch((()=>{})))},i._setAttachmentLayer=function(){const{graphic:t}=this,e=f.getSourceLayer(t);this._attachmentLayer=e?"scene"===e.type&&null!=e.associatedLayer?e.associatedLayer:e:null},t._createClass(a,[{key:"state",get:function(){return this._getAttachmentsPromise?"loading":this.graphic?"ready":"disabled"}},{key:"supportsResizeAttachments",get:function(){const{graphic:t}=this;if(!t)return!1;const e=t.layer||t.sourceLayer;return e?.loaded&&"capabilities"in e&&e.capabilities&&"operations"in e.capabilities&&"supportsResizeAttachments"in e.capabilities.operations&&e.capabilities.operations.supportsResizeAttachments||!1}}]),a}(i);e.__decorate([o.property()],A.prototype,"capabilities",void 0),e.__decorate([s.cast("capabilities")],A.prototype,"castCapabilities",null),e.__decorate([o.property()],A.prototype,"activeAttachmentInfo",void 0),e.__decorate([o.property()],A.prototype,"activeFileInfo",void 0),e.__decorate([o.property({readOnly:!0,type:y})],A.prototype,"attachmentInfos",void 0),e.__decorate([o.property()],A.prototype,"fileInfos",void 0),e.__decorate([o.property({type:a})],A.prototype,"graphic",void 0),e.__decorate([o.property()],A.prototype,"mode",void 0),e.__decorate([o.property({readOnly:!0})],A.prototype,"state",null),e.__decorate([o.property()],A.prototype,"filesEnabled",void 0),e.__decorate([o.property({readOnly:!0})],A.prototype,"supportsResizeAttachments",null),A=e.__decorate([l.subclass("esri.widgets.Attachments.AttachmentsViewModel")],A);return A}));
