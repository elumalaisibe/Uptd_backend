/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/Logger","../core/reactiveUtils","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass","./Widget","./Daylight/css","./Daylight/DaylightViewModel","./Daylight/VisibleElements","./Daylight/support/daylightUtils","./Daylight/support/SliderWithDropdown","./support/componentsUtils","./support/DatePicker","./support/Heading","./support/widgetUtils","./support/decorators/messageBundle","./support/jsxFactory"],(function(e,t,i,s,o,n,a,l,r,d,c,p,h,u,g,y,S,_,b,m,w,k){"use strict";const v=/(.*)\s(.*)/,C="date",P="esri.widgets.Daylight";let M=function(i){function s(e,s){var o;return(o=i.call(this,e,s)||this).headingLevel=3,o.iconClass=p.CSS.widgetIcon,o.icon=null,o.viewModel=new h,o.visibleElements=new u,o.dateOrSeason=C,o._timeSlider=new y({viewModel:o.viewModel.timeSliderViewModel,steps:o.timeSliderSteps,labelInputsEnabled:!1,visibleElements:{labels:!0},tickConfigs:[{mode:"position",values:[0,360,720,1080,1439],labelsVisible:!0,tickCreatedFunction:o._onPrimaryTickCreated.bind(t._assertThisInitialized(o))},{mode:"position",values:[120,240,480,600,840,960,1200,1320],tickCreatedFunction:o._onSecondaryTickCreated.bind(t._assertThisInitialized(o))}]}),o._datePicker=new _({viewModel:o.viewModel.datePickerViewModel,commitOnMonthChange:!0}),o._onPlayDayClick=()=>{o.viewModel.toggleDayPlaying()},o._onYearPlayClick=()=>{o.viewModel.toggleYearPlaying()},o._onSeasonChange=e=>{const t=e.target;o.viewModel.currentSeason=t.value},o._onSunLightingCheckboxChange=()=>{o.viewModel.toggleSunLightingEnabled()},o._onShadowCheckboxChange=()=>{o.viewModel.toggleDirectShadowsEnabled()},o}t._inherits(s,i);var n=s.prototype;return n.postInitialize=function(){this.viewModel.isSupported&&this.addHandles([o.watch((()=>this.viewModel.datePickerViewModel),(e=>this._datePicker.viewModel=e),o.syncAndInitial),o.watch((()=>this.viewModel.timeSliderViewModel),(e=>this._timeSlider.viewModel=e),o.syncAndInitial),o.watch((()=>this.visibleElements?.timezone),(e=>this._timeSlider.showDropDown=e),o.syncAndInitial),o.watch((()=>!this.viewModel.sunLightingEnabled),(e=>{this._datePicker.disabled=e,this._timeSlider.disabled=e}),o.syncAndInitial),o.when((()=>!this.visible),(()=>this._datePicker?.close(!1)),o.sync)])},n.destroy=function(){this._datePicker.destroy(),this._timeSlider.destroy()},n.render=function(){const{messages:e,viewModel:t,visibleElements:i}=this,s=t.isSupported;return k.tsx("div",{class:this.classes(p.CSS.base,p.CSS.widget)},s?k.tsx(k.tsxFragment,null,i.header&&k.tsx(b.Heading,{level:this.headingLevel},e.title),this._renderTimeOptions(),i.datePicker&&this._renderDateOrSeason(),i.sunLightingToggle&&this._renderSunLightingToggle(),i.shadowsToggle&&this._renderShadowsToggle()):k.tsx("div",{key:"unsupported",class:p.CSS.panelError},k.tsx("p",null,e.unsupported)))},n.loadDependencies=function(){return S.loadCalciteComponents({button:()=>new Promise(((t,i)=>e(["../chunks/calcite-button"],t,i))),checkbox:()=>new Promise(((t,i)=>e(["../chunks/calcite-checkbox"],t,i))),label:()=>new Promise(((t,i)=>e(["../chunks/calcite-label"],t,i)))})},n._renderTimeOptions=function(){const{viewModel:e,visibleElements:t,messages:i}=this,{directShadowsEnabled:s,dayPlaying:o}=e,n=!e.sunLightingEnabled;return k.tsx("div",{class:this.classes(p.CSS.dayContainer,{[p.CSS.shadowOn]:s,[p.CSS.shadowOff]:!s,[p.CSS.sliderDateOn]:t.datePicker,[p.CSS.sliderDateOff]:!t.datePicker,[p.CSS.sliderAmPmOn]:this._useAmPm,[p.CSS.containerDisabled]:n}),key:"daylight-time-options"},this._timeSlider.render(),t.playButtons&&this._renderPlayPauseButton({playing:o,disabled:n,label:i.playDay,onClick:this._onPlayDayClick}))},n._renderDateOptions=function(){const{viewModel:e,visibleElements:t,messages:i}=this,{yearPlaying:s}=e,o=!e.sunLightingEnabled;return k.tsx("div",{key:"daylight-date-options",class:this.classes(p.CSS.dateContainer,o&&p.CSS.containerDisabled)},this._datePicker.render(),t.playButtons&&this._renderPlayPauseButton({playing:s,disabled:o,label:i.playYear,onClick:this._onYearPlayClick}))},n._renderPlayPauseButton=function({playing:e,disabled:t,label:i,onClick:s}){return k.tsx("calcite-button",{appearance:"solid",class:p.CSS.playPauseButton,disabled:t,iconStart:e?"pause-f":"play-f",label:i,round:!0,title:i,type:"button",onclick:s})},n._renderSeasonOptions=function(){const{messages:e,viewModel:t}=this,i=!t.sunLightingEnabled;return k.tsx("select",{class:this.classes(p.CSS.select,p.CSS.seasonPicker,i&&p.CSS.seasonPickerDisabled),disabled:i,value:t.currentSeason,"aria-label":e.season,onchange:this._onSeasonChange},g.ORDERED_SEASONS.map((t=>k.tsx("option",{value:t},e[t]))))},n._renderDateOrSeason=function(){return"date"===this.dateOrSeason?this._renderDateOptions():this._renderSeasonOptions()},n._renderSunLightingToggle=function(){const e=this.messages?.sunLightingToggle;return k.tsx("calcite-label",{key:"date-time-toggle",layout:"inline",title:e?.tooltip,scale:"s"},k.tsx("calcite-checkbox",{class:p.CSS.sunLightingCheckbox,checked:this.viewModel.sunLightingEnabled,onCalciteCheckboxChange:this._onSunLightingCheckboxChange}),e?.label)},n._renderShadowsToggle=function(){const e=this.messages.shadowsToggle;return k.tsx("calcite-label",{key:"shadow-toggle",layout:"inline",title:e?.tooltip,scale:"s"},k.tsx("calcite-checkbox",{class:p.CSS.shadowsCheckbox,checked:this.viewModel.directShadowsEnabled,onCalciteCheckboxChange:this._onShadowCheckboxChange}),e.label)},n._onPrimaryTickCreated=function(e,t,i){t.classList.add(...f,p.CSS.primaryTick),i.classList.add(...f,p.CSS.primaryTickLabel),i.onclick=t.onclick=this._makeGoToTime(e);const s=i.textContent,o=null!=s&&v.exec(s);o&&(i.innerHTML=`${o[1]}<br><div class=${p.CSS.primaryTickAmPm}>${o[2]}</div>`)},n._onSecondaryTickCreated=function(e,t){t.classList.add(...f,p.CSS.secondaryTick),t.onclick=this._makeGoToTime(e)},n._makeGoToTime=function(e){return()=>{this.viewModel.timeSliderPosition=e}},t._createClass(s,[{key:"label",get:function(){return this.messages?.title??""},set:function(e){this._overrideIfSome("label",e)}},{key:"playSpeedMultiplier",get:function(){return this.viewModel.playSpeedMultiplier},set:function(e){this.viewModel.playSpeedMultiplier=e}},{key:"timeSliderSteps",get:function(){return this._timeSlider?.steps??5},set:function(e){this._timeSlider.steps=e}},{key:"view",get:function(){return this.viewModel.view},set:function(e){this.viewModel.view=e}},{key:"test",get:function(){return{datePicker:this._datePicker}}},{key:"_useAmPm",get:function(){const e=this._timeSlider.viewModel.getLabelForValue(0,"tick");return null!=e&&v.test(e)}}]),s}(c);i.__decorate([n.property(),w.messageBundle("esri/widgets/Daylight/t9n/Daylight")],M.prototype,"messages",void 0),i.__decorate([n.property(),w.messageBundle("esri/widgets/support/t9n/timezone")],M.prototype,"timezoneMessages",void 0),i.__decorate([n.property()],M.prototype,"headingLevel",void 0),i.__decorate([n.property()],M.prototype,"iconClass",void 0),i.__decorate([n.property()],M.prototype,"icon",void 0),i.__decorate([n.property()],M.prototype,"label",null),i.__decorate([n.property()],M.prototype,"playSpeedMultiplier",null),i.__decorate([n.property()],M.prototype,"timeSliderSteps",null),i.__decorate([n.property()],M.prototype,"view",null),i.__decorate([n.property({type:h})],M.prototype,"viewModel",void 0),i.__decorate([n.property({type:u,nonNullable:!0})],M.prototype,"visibleElements",void 0),i.__decorate([n.property({cast:e=>"season"===e||"date"===e?e:(s.getLogger(P).warn(`"${e}" is not a valid option. Acceptable values are only "date" or "season". Defaulting to "${C}".`),C)})],M.prototype,"dateOrSeason",void 0),i.__decorate([n.property()],M.prototype,"_timeSlider",void 0),i.__decorate([n.property()],M.prototype,"_useAmPm",null),i.__decorate([n.property()],M.prototype,"_datePicker",void 0),M=i.__decorate([d.subclass(P)],M);const f=["esri-interactive","esri-widget__anchor"];return M}));
