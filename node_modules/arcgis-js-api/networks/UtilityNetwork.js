/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../core/deprecate","../core/Logger","../core/accessorSupport/decorators/property","../core/accessorSupport/ensureType","../core/arrayUtils","../core/has","../core/accessorSupport/decorators/subclass","../layers/FeatureLayer","../layers/support/featureQueryAll","./Network","./RulesTable","./support/NamedTraceConfiguration","./support/NetworkSystemLayers","./support/TerminalConfiguration","./support/TraceJobInfo","./support/typeUtils","../rest/support/Query"],(function(e,t,r,s,a,n,o,i,l,u,c,d,y,p,m,f,T,b,g,w){"use strict";const I=e=>Object.freeze(Object.defineProperty({__proto__:null,default:e},Symbol.toStringTag,{value:"Module"})),S="esri.networks.UtilityNetwork",h=a.getLogger(S);let k=function(r){function a(e){var t;return(t=r.call(this,e)||this).sharedNamedTraceConfigurations=[],t.type="utility",t}t._inherits(a,r);var n=a.prototype;return n.load=async function(e){return this.addResolvingPromise(t._get(t._getPrototypeOf(a.prototype),"load",this).call(this,e)),this.addResolvingPromise(this._loadNamedTraceConfigurationsFromNetwork(e)),this},n.getTerminalConfiguration=function(e){let t=null,r=null;const s=e.layer;let a=null;if("feature"===s?.type){if(a=s.layerId,null===a)return null}else{if("subtype-sublayer"!==s?.type)return null;if(a=s?.parent?.layerId??null,null===a)return null}const n=e.attributes;if(null==n)return null;for(const l of Object.keys(n))"ASSETGROUP"===l.toUpperCase()&&(t=e.getAttribute(l)),"ASSETTYPE"===l.toUpperCase()&&(r=e.getAttribute(l));if(!this.dataElement)return null;let o=null;const i=this.dataElement.domainNetworks;for(const l of i){const e=l.junctionSources?.find((e=>e.layerId===a));if(e){const s=e.assetGroups?.find((e=>e.assetGroupCode===t));if(s){const e=s.assetTypes?.find((e=>e.assetTypeCode===r));if(e){o=e.terminalConfigurationId;break}}}}if(null!=o){const e=this.dataElement.terminalConfigurations,t=e?.find((e=>e.terminalConfigurationId===o));return t?T.fromJSON(t):null}return null},n.getTierNames=function(e){const t=this.dataElement?.domainNetworks.find((t=>t.domainNetworkName===e));return t?.tiers.map((e=>e.name))||[]},n.getRulesTable=async function(){return this._createRulesTable()},n.isUtilityLayer=function(e){return this._utilityLayerList.has(e.layerId)},n.trace=async function(t){const[{trace:r},{default:s}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/trace"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/TraceParameters"],(e=>t(I(e))),r)))]),a=s.from(t);return r(this.networkServiceUrl,a)},n.submitTraceJob=async function(t){const[{submitTraceJob:r},{default:s}]=await Promise.all([new Promise(((t,r)=>e(["../rest/networks/trace"],t,r))),new Promise(((t,r)=>e(["../rest/networks/support/TraceParameters"],(e=>t(I(e))),r)))]),a=s.from(t),n=await r(this.networkServiceUrl,a);return new b({statusUrl:n})},n._loadNamedTraceConfigurationsFromNetwork=async function(e){if(0===this.sharedNamedTraceConfigurations?.length)return;const t=this.sharedNamedTraceConfigurations.map((e=>e.globalId)),r=await this.queryNamedTraceConfigurations({globalIds:t},e);for(const s of this.sharedNamedTraceConfigurations){const e=r?.find((e=>e.globalId===s.globalId));if(e){const t=e.write({},{origin:"service"});s.read(t,{origin:"service"})}}},n._createRulesTable=async function(){const e=new c({url:this.rulesTableUrl});await e.load();const t=this.dataElement?.domainNetworks;if(!t)return null;const r=t.flatMap((e=>[...e.edgeSources,...e.junctionSources])),s=(await this._queryRulesTable(e)).map((t=>this._hydrateRuleInfo(e,r,t)));return new p({layer:e,rules:s})},n._queryRulesTable=async function(e){const t=new w({where:"1=1",outFields:["*"]});return(await d.queryAllJSON(e,t)).features},n._hydrateRuleInfo=function(e,t,r){const s=e.fieldsIndex,a=s.get("RULETYPE"),n=s.get("CREATIONDATE"),o=s.get("FROMNETWORKSOURCEID"),i=s.get("FROMASSETGROUP"),l=s.get("FROMASSETTYPE"),u=s.get("FROMTERMINALID"),c=s.get("TONETWORKSOURCEID"),d=s.get("TOASSETGROUP"),y=s.get("TOASSETTYPE"),p=s.get("TOTERMINALID"),m=s.get("VIANETWORKSOURCEID"),f=s.get("VIAASSETGROUP"),T=s.get("VIAASSETTYPE"),b=s.get("VIATERMINALID"),w=r.attributes[a.name],I=new Date(r.attributes[n.name]),S=[{networkSourceId:r.attributes[o.name],assetGroupId:r.attributes[i.name],assetTypeId:r.attributes[l.name],terminalId:r.attributes[u.name]},{networkSourceId:r.attributes[c.name],assetGroupId:r.attributes[d.name],assetTypeId:r.attributes[y.name],terminalId:r.attributes[p.name]},{networkSourceId:r.attributes[m.name],assetGroupId:r.attributes[f.name],assetTypeId:r.attributes[T.name],terminalId:r.attributes[b.name]}];let h;!function(e){e[e.from=0]="from",e[e.to=1]="to",e[e.via=2]="via"}(h||(h={}));const k={ruleType:w,creationDate:I};for(const N of[h.from,h.to,h.via]){if(w!==g.RuleType.RTEdgeJunctionEdgeConnectivity&&N===h.via)continue;const e=S[N],r=t.find((t=>t.sourceId===e.networkSourceId)),s=r?.assetGroups.find((t=>t.assetGroupCode===e.assetGroupId)),a=s?.assetTypes.find((t=>t.assetTypeCode===e.assetTypeId));let n=this._getTerminal(w,a,e);w!==g.RuleType.RTContainment&&w!==g.RuleType.RTAttachment||(n=null);let o="";switch(N){case h.from:o="from";break;case h.to:o="to";break;case h.via:o="via"}k[`${o}NetworkSource`]=r,k[`${o}AssetGroup`]=s,k[`${o}AssetType`]=a,k[`${o}Terminal`]=n?.toJSON()}return k},n._getTerminal=function(e,t,r){if(e===g.RuleType.RTAttachment||e===g.RuleType.RTContainment)return null;const s=t?.terminalConfigurationId,a=this.terminalConfigurations?.find((e=>e.id===s));return a?.terminals?.find((e=>e.id===r.terminalId))??null},t._createClass(a,[{key:"serviceTerritoryFeatureLayerId",get:function(){return this.dataElement?.serviceTerritoryFeatureLayerId??null}},{key:"networkSystemLayers",get:function(){return new f({rulesTableId:this.sourceJSON?.systemLayers.rulesTableId,rulesTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.rulesTableId}`:null,subnetworksTableId:this.sourceJSON?.systemLayers.subnetworksTableId,subnetworksTableUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.subnetworksTableId}`:null,dirtyAreasLayerId:this.sourceJSON?.systemLayers.dirtyAreasLayerId,dirtyAreasLayerUrl:this.sourceJSON?`${this.featureServiceUrl}/${this.sourceJSON?.systemLayers.dirtyAreasLayerId}`:null})}},{key:"rulesTableId",get:function(){return s.deprecatedProperty(h,"rulesTableId",{replacement:"networkSystemLayers.rulesTableId",version:"4.25"}),this.sourceJSON?.systemLayers.rulesTableId}},{key:"rulesTableUrl",get:function(){return s.deprecatedProperty(h,"rulesTableUrl",{replacement:"networkSystemLayers.rulesTableUrl",version:"4.25"}),this.sourceJSON?`${this.featureServiceUrl}/${this.networkSystemLayers.rulesTableId}`:null}},{key:"subnetworksTableId",get:function(){return s.deprecatedProperty(h,"subnetworksTableId",{replacement:"networkSystemLayers.subnetworksTableId",version:"4.25"}),this.sourceJSON?.systemLayers.subnetworksTableId}},{key:"subnetworksTableUrl",get:function(){return s.deprecatedProperty(h,"subnetworksTableUrl",{replacement:"networkSystemLayers.subnetworksTableUrl",version:"4.25"}),this.sourceJSON?`${this.featureServiceUrl}/${this.networkSystemLayers.subnetworksTableId}`:null}},{key:"terminalConfigurations",get:function(){return this.dataElement?.terminalConfigurations.map((e=>T.fromJSON(e)))||[]}},{key:"domainNetworkNames",get:function(){return this.dataElement?.domainNetworks.map((e=>e.domainNetworkName))||[]}},{key:"_utilityLayerList",get:function(){const e=new Set;return this.dataElement?.domainNetworks?.map((t=>{t.edgeSources.map((t=>{e.add(t.layerId)})),t.junctionSources.map((t=>{e.add(t.layerId)}))})),e}}]),a}(y);r.__decorate([n.property({type:[m],json:{origins:{"web-map":{read:{source:"traceConfigurations"},write:{target:"traceConfigurations"}},service:{read:{source:"traceConfigurations"}}},read:!1}})],k.prototype,"sharedNamedTraceConfigurations",void 0),r.__decorate([n.property({type:["utility"],readOnly:!0,json:{read:!1,write:!1}})],k.prototype,"type",void 0),r.__decorate([n.property({readOnly:!0})],k.prototype,"serviceTerritoryFeatureLayerId",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"networkSystemLayers",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"rulesTableId",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"rulesTableUrl",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"subnetworksTableId",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"subnetworksTableUrl",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"terminalConfigurations",null),r.__decorate([n.property({readOnly:!0})],k.prototype,"domainNetworkNames",null),k=r.__decorate([u.subclass("esri.networks.UtilityNetwork")],k);return k}));
