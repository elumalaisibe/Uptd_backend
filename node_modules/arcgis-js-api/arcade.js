/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","./Graphic","./arcade/ArcadeDate","./arcade/ImmutableArray","./core/Error","./core/lang","./layers/FeatureLayer","./portal/Portal","./rest/support/FeatureSet","./support/arcadeOnDemand"],(function(e,t,a,r,n,o,c,s,i,l){"use strict";let u=null;function p(e,t,a,n={}){const o=t.elementType,c="value",s="array"===o.type?[{name:c,type:o.type,elementType:o.elementType}]:"dictionary"===o.type?[{name:c,type:o.type,properties:o.properties}]:[{name:c,type:o.type}];return new r(e.map((e=>{const t={};return d(t,s,{[c]:e},a,n),t[c]})))}function f(e,t,a={}){const r=e instanceof i?new c({source:e.features,geometryType:e.geometryType,fields:e.fields,spatialReference:e.spatialReference}):e;return t.constructFeatureSet(r,a.spatialReference,null,!0,a.lruCache,a.interceptor)}function y(e,t,a={}){const{spatialReference:r,interceptor:n,lruCache:o}=a;return"string"==typeof e?t.createFeatureSetCollectionFromService(e,r,o,n):t.createFeatureSetCollectionFromMap(e,r,o,n)}function m(e,t,a,r={}){const n={};return d(n,t.properties,e,a,r),new u.Dictionary(n)}function d(e,t,r,n,o={}){const c={};for(const a of Object.keys(r))c[a.toLowerCase()]=r[a];for(const s of t){const t=s.name.toLowerCase();if(o.variablesPreProcessed)e[t]=c[t];else switch(s.type){case"array":{const a=c[t];e[t]=null==a?null:p(a,s,n,o);break}case"feature":{const a=c[t];e[t]=null==a?null:u.Feature.createFromGraphic(a,o?.timeReference);break}case"featureSet":{const a=c[t];e[t]=null==a?null:n?f(a,n,o):null;break}case"featureSetCollection":{const a=c[t];e[t]=null==a?null:n?y(a,n,o):null;break}case"dictionary":{const a=c[t];e[t]=null==a?null:m(a,s,n,o);break}case"date":{const r=c[t];r?r instanceof a.ArcadeDate?e[t]=r:e[t]=o?.timeReference?.timeZone?a.ArcadeDate.dateJSAndZoneToArcadeDate(r,o?.timeReference?.timeZone):a.ArcadeDate.dateJSToArcadeDate(r):e[t]=null;break}case"geometry":case"boolean":case"text":case"number":e[t]=c[t]}}}function b(e,t){for(const a of e)t.push(a),"dictionary"===a.type&&b(a.properties,t);return t}function S(e,t,a,r,n){const{spatialReference:o,interceptor:c,lruCache:i,console:l,abortSignal:u,timeReference:p,services:f={portal:s.getDefault()}}=a,y={vars:{},spatialReference:o,interceptor:c,timeReference:p,lrucache:i,useAsync:n,services:f,console:l,abortSignal:u};return t?(d(y.vars,e.variables,t,r,a),y):y}function v(e,a){switch(a.getArcadeType(e)){case"number":case"text":case"boolean":case"point":case"polygon":case"polyline":case"multipoint":case"extent":return e;case"date":return e.toJSDate();case"feature":{const a=(e.type,e),r="geometry"in a?a.geometry():null,n="readAttributes"in a?a.readAttributes():a.attributes;return new t({geometry:r,attributes:n})}case"dictionary":{const t=e,r=t.attributes,n={};for(const e of Object.keys(r))n[e]=v(t.field(e),a);return n}case"array":return("toArray"in e?e.toArray():e).map((e=>v(e,a)))}return e}const w={variables:[{name:"$feature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"}]},g={variables:[{name:"$feature",type:"feature"},{name:"$aggregatedFeatures",type:"featureSet"}]},A=new Map([["form-constraint",{variables:[{name:"$feature",type:"feature"}]}],["feature-z",{variables:[{name:"$feature",type:"feature"}]}],["field-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$datastore",type:"featureSetCollection"}]}],["form-calculation",{variables:[{name:"$feature",type:"feature"},{name:"$originalFeature",type:"feature"},{name:"$layer",type:"featureSet"},{name:"$featureSet",type:"featureSet"},{name:"$datastore",type:"featureSetCollection"},{name:"$map",type:"featureSetCollection"},{name:"$editContext",type:"dictionary",properties:[{name:"editType",type:"text"}]}]}],["labeling",{variables:[{name:"$feature",type:"feature"}]}],["popup",w],["popup-element",w],["feature-reduction-popup",g],["feature-reduction-popup-element",g],["visualization",{variables:[{name:"$feature",type:"feature"},{name:"$view",type:"dictionary",properties:[{name:"scale",type:"number"}]}]}]]);function $(e){const t=A.get(e);if(!t){const t=Array.from(A.keys()).map((e=>`'${e}'`)).join(", ");throw new n("createArcadeProfile:invalid-profile-name",`Invalid profile name '${e}'. You must specify one of the following values: ${t}`)}return o.clone(t)}async function C(e,t,a={}){u||(u=await l.loadArcade());const{arcade:r,arcadeUtils:o}=u,{loadScriptDependencies:c,referencesMember:s,scriptIsAsync:i}=r,p=b(t.variables,[]),f=p.filter((e=>"featureSet"===e.type||"featureSetCollection"===e.type)).map((e=>e.name.toLowerCase())),y=r.parseScript(e,f);if(!y)throw new n("arcade:invalid-script","Unable to create SyntaxTree");const m=o.extractFieldNames(y),d=r.scriptTouchesGeometry(y),w=p.map((e=>e.name.toLowerCase())).filter((e=>s(y,e))),g=i(y,f);await c(y,g,f);const A={vars:{},spatialReference:null,useAsync:g};for(const n of w)A.vars[n]="any";const{lruCache:$}=a,C=r.compileScript(y,A),h=r.featureSetUtils(),{services:x}=a;return{execute:(e,a={})=>{if(g)throw new n("arcade:invalid-execution-mode","Cannot execute the script in synchronous mode");const r=C(S(t,e,{lruCache:$,...a},h,g));return a.rawOutput?r:v(r,o)},executeAsync:async(e,a={})=>{const r=await C(S(t,e,{lruCache:$,services:x,...a},h,g));return a.rawOutput?r:v(r,o)},isAsync:g,variablesUsed:w,fieldsUsed:m,geometryUsed:d,syntaxTree:y}}e.createArcadeExecutor=C,e.createArcadeProfile=$,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
