/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/Error","../../../core/promiseUtils","../../../core/urlUtils","../../Point"],(function(e,t,r,n,o,s,i){"use strict";async function l(t,r,n){const{source:s}=r,{loadGLTFMesh:l}=await o.whenOrAbort(new Promise(((t,r)=>e(["./loadGLTFMesh"],t,r))),n),u=await c(s,n);o.throwIfAborted(n);const f=l(new i({x:0,y:0,z:0,spatialReference:t.spatialReference}),u.url,{resolveFile:a(u),useTransform:!0,signal:n?.signal});f.then((()=>u.dispose()),(()=>u.dispose()));const{vertexAttributes:m,components:p}=await f;t.vertexAttributes=m,t.components=p}function a(e){const t=s.removeFile(e.url);return r=>{const n=s.makeRelative(r,t,t),o=n?n.replace(/^ *\.\//,""):null;return(o?e.files.get(o):null)??r}}async function c(e,t){if(Array.isArray(e)){if(!e.length)throw new n("mesh-load-external:missing-assets","There must be at least one file to load");return e[0]instanceof File?m(e):p(e,t)}return f(e)}async function u(e,t){const{parts:r}=e;if(1===r.length)return new b(r[0].partUrl);const n=await e.toBlob(t);return o.throwIfAborted(t),b.fromBlob(n)}function f(e){return b.fromBlob(e)}function m(e){return d(e.map((e=>({name:e.name,mimeType:e.type,source:f(e)}))))}async function p(e,t){const r=await o.eachAlwaysValues(e.map((async e=>{const r=await u(e);return o.throwIfAborted(t),{name:e.assetName,mimeType:e.assetMimeType,source:r}})));if(o.isAborted(t))throw r.forEach((e=>e.source.dispose())),o.createAbortError();return d(r)}const h=/^(model\/gltf\+json)|(model\/gltf-binary)$/,w=/\.(gltf|glb)/i;function d(e){const t=new Map;let r=null;for(const{name:n,mimeType:o,source:s}of e)(null==r||h.test(o)||w.test(n))&&(r=s.url),t.set(n,s.url),s.files.forEach(((e,r)=>t.set(r,e)));if(null==r)throw new n("mesh-load-external:missing-files","Missing files to load external mesh source");return new b(r,(()=>e.forEach((({source:e})=>e.dispose()))),t)}let b=function(){function e(e,t=(()=>{}),r=new Map){this.url=e,this.dispose=t,this.files=r}return e.fromBlob=function(t){const r=URL.createObjectURL(t);return new e(r,(()=>URL.revokeObjectURL(r)))},r._createClass(e)}();t.loadExternal=l,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
