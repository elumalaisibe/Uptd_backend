/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../Color","../../../Graphic","../../../core/compilerUtils","../../../core/Logger","../../support/lengthUtils","./sizeVariableUtils"],(function(e,a,n,i,r,t,s){"use strict";const l=r.getLogger("esri.renderers.visualVariables.support.visualVariableUtils"),o=new n,c=Math.PI,u=/^\s*(return\s+)?\$view\.scale\s*(;)?\s*$/i;function f(e,n,i){const r="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"color"===e.type)):e;if(!r)return;if("esri.renderers.visualVariables.ColorVariable"!==r.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.ColorVariable");const t="number"==typeof n,s=t?null:n,o=s&&s.attributes;let c=t?n:null;const u=r.field,{ipData:f,hasExpression:p}=r.cache;let d=r.cache.compiledFunc;if(!u&&!p){const e=r.stops;return e&&e[0]&&e[0].color}if("number"!=typeof c)if(p){if(null==i||null==i.arcade)return void l.error("Use of arcade expressions requires an arcade context");const e={viewingMode:i.viewingMode,scale:i.scale,spatialReference:i.spatialReference},a=i.arcade.arcadeUtils,n=a.getViewInfo(e),t=a.createExecContext(s,n);if(!d){const e=a.createSyntaxTree(r.valueExpression);d=a.createFunction(e),r.cache.compiledFunc=d}c=a.executeFunction(d,t)}else o&&(c=o[u]);const b=r.normalizationField,v=null!=o&&null!=b?parseFloat(o[b]):void 0;if(null!=c&&(!b||t||!isNaN(v)&&0!==v)){isNaN(v)||t||(c/=v);const e=R(c,f);if(e){const n=e[0],t=e[1],s=n===t?r.stops[n].color:a.blendColors(r.stops[n].color,r.stops[t].color,e[2],null!=i?i.color:void 0);return new a(s)}}}function p(e,a,n){const i="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"opacity"===e.type)):e;if(!i)return;if("esri.renderers.visualVariables.OpacityVariable"!==i.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.OpacityVariable");const r="number"==typeof a,t=r?null:a,s=t&&t.attributes;let o=r?a:null;const c=i.field,{ipData:u,hasExpression:f}=i.cache;let p=i.cache.compiledFunc;if(!c&&!f){const e=i.stops;return e&&e[0]&&e[0].opacity}if("number"!=typeof o)if(f){if(null==n||null==n.arcade)return void l.error("Use of arcade expressions requires an arcade context");const e={viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference},a=n.arcade.arcadeUtils,r=a.getViewInfo(e),s=a.createExecContext(t,r);if(!p){const e=a.createSyntaxTree(i.valueExpression);p=a.createFunction(e),i.cache.compiledFunc=p}o=a.executeFunction(p,s)}else s&&(o=s[c]);const d=i.normalizationField,b=null!=s&&null!=d?parseFloat(s[d]):void 0;if(null!=o&&(!d||r||!isNaN(b)&&0!==b)){isNaN(b)||r||(o/=b);const e=R(o,u);if(e){const a=e[0],n=e[1];if(a===n)return i.stops[a].opacity;{const r=i.stops[a].opacity;return r+(i.stops[n].opacity-r)*e[2]}}}}function d(e,a,n){const i="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"rotation"===e.type)):e;if(!i)return;if("esri.renderers.visualVariables.RotationVariable"!==i.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.RotationVariable");const r=i.axis||"heading",t="heading"===r&&"arithmetic"===i.rotationType?90:0,s="heading"===r&&"arithmetic"===i.rotationType?-1:1,o="number"==typeof a?null:a,c=o&&o.attributes,u=i.field,{hasExpression:f}=i.cache;let p=i.cache.compiledFunc,d=0;if(!u&&!f)return d;if(f){if(null==n||null==n.arcade)return void l.error("Use of arcade expressions requires an arcade context");const e={viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference},a=n.arcade.arcadeUtils,r=a.getViewInfo(e),t=a.createExecContext(o,r);if(!p){const e=a.createSyntaxTree(i.valueExpression);p=a.createFunction(e),i.cache.compiledFunc=p}d=a.executeFunction(p,t)}else c&&(d=c[u]||0);return d="number"!=typeof d||isNaN(d)?null:t+s*d,d}function b(e,a,n){const i="number"==typeof a,r=i?null:a,t=r&&r.attributes;let o=i?a:null;const{isScaleDriven:c}=e.cache;let u=e.cache.compiledFunc;if(c){const a=null!=n?n.scale:void 0,i=null!=n?n.view:void 0;o=null==a||"3d"===i?v(e):a}else if(!i)switch(e.inputValueType){case s.InputValueType.Expression:{if(null==n||null==n.arcade)return void l.error("Use of arcade expressions requires an arcade context");const a={viewingMode:n.viewingMode,scale:n.scale,spatialReference:n.spatialReference},i=n.arcade.arcadeUtils,t=i.getViewInfo(a),s=i.createExecContext(r,t);if(!u){const a=i.createSyntaxTree(e.valueExpression);u=i.createFunction(a),e.cache.compiledFunc=u}o=i.executeFunction(u,s);break}case s.InputValueType.Field:t&&(o=t[e.field]);break;case s.InputValueType.Unknown:o=null}if(!s.isValidNumber(o))return null;if(i||!e.normalizationField)return o;const f=t?parseFloat(t[e.normalizationField]):null;return s.isValidNumber(f)&&0!==f?o/f:null}function v(e){let a=null,n=null;const i=e.stops;return i?(a=i[0].value,n=i[i.length-1].value):(a=e.minDataValue||0,n=e.maxDataValue||0),(a+n)/2}function m(e,a,n){const i="visualVariables"in e&&e.visualVariables?e.visualVariables.find((e=>"size"===e.type)):e;if(!i)return;if("esri.renderers.visualVariables.SizeVariable"!==i.declaredClass)return void l.warn("The visualVariable should be an instance of esri.renderers.visualVariables.SizeVariable");const r=F(b(i,a,n),i,a,n,i.cache.ipData);return null==r||isNaN(r)?0:r}function h(e,a,n){return null==e?null:s.isSizeVariable(e)?m(e,a,n):s.isValidNumber(e)?e:null}function V(e,a,n){return s.isValidNumber(n)&&e>n?n:s.isValidNumber(a)&&e<a?a:e}function y(e,a,n,i){return e+((h(a.minSize,n,i)||a.minDataValue)??0)}function x(e,a,n){const i=e.stops;let r=i&&i.length&&i[0].size;return null==r&&(r=e.minSize),h(r,a,n)}function g(e,a,n,i){const r=(e-a.minDataValue)/(a.maxDataValue-a.minDataValue),t=h(a.minSize,n,i),s=h(a.maxSize,n,i),l=null!=i?i.shape:void 0;if(e<=a.minDataValue)return t;if(e>=a.maxDataValue)return s;if(null==t||null==s)return null;if("area"===a.scaleBy&&l){const e="circle"===l,a=e?c*(t/2)**2:t*t,n=a+r*((e?c*(s/2)**2:s*s)-a);return e?2*Math.sqrt(n/c):Math.sqrt(n)}return t+r*(s-t)}function S(e,a,n,i){const r=null!=i?i.shape:void 0,t=e/a.minDataValue,s=h(a.minSize,n,i),l=h(a.maxSize,n,i);let o=null;return o="circle"===r?2*Math.sqrt(t*(s/2)**2):"square"===r||"diamond"===r||"image"===r?Math.sqrt(t*s**2):t*s,V(o,s,l)}function z(e,a,n,i,r){const[t,s,l]=R(e,r);if(t===s)return h(a.stops?.[t].size,n,i);{const e=h(a.stops?.[t].size,n,i);return e+(h(a.stops?.[s].size,n,i)-e)*l}}function T(e,a,n,i){const r=(null!=i&&i.resolution?i.resolution:1)*t.meterIn[a.valueUnit],s=h(a.minSize,n,i),l=h(a.maxSize,n,i),{valueRepresentation:o}=a;let u=null;return u="area"===o?2*Math.sqrt(e/c)/r:"radius"===o||"distance"===o?2*e/r:e/r,V(u,s,l)}function w(e){return e}function F(e,a,n,i,r){switch(a.transformationType){case s.TransformationType.Additive:return y(e,a,n,i);case s.TransformationType.Constant:return x(a,n,i);case s.TransformationType.ClampedLinear:return g(e,a,n,i);case s.TransformationType.Proportional:return S(e,a,n,i);case s.TransformationType.Stops:return z(e,a,n,i,r);case s.TransformationType.RealWorldSize:return T(e,a,n,i);case s.TransformationType.Identity:return w(e);case s.TransformationType.Unknown:return null}}function N(e,a,n){const{isScaleDriven:i}=e.cache;if(!(i&&"3d"===n||a))return null;const r={scale:a,view:n};let t=h(e.minSize,o,r),s=h(e.maxSize,o,r);if(null!=t||null!=s){if(t>s){const e=s;s=t,t=e}return{minSize:t,maxSize:s}}}function E(e,a,n){if(!e.visualVariables)return;const i=[],r=[],t=[],s=[],l=[];for(const o of e.visualVariables)switch(o.type){case"color":r.push(o);break;case"opacity":t.push(o);break;case"rotation":l.push(o);break;case"size":s.push(o)}return r.forEach((e=>{const r=f(e,a,n);i.push({variable:e,value:r})})),t.forEach((e=>{const r=p(e,a,n);i.push({variable:e,value:r})})),l.forEach((e=>{const r=d(e,a,n);i.push({variable:e,value:r})})),s.forEach((e=>{const r=m(e,a,n);i.push({variable:e,value:r})})),i.filter((e=>null!=e.value))}function R(e,a){if(!a)return;let n=0,i=a.length-1;return a.some(((a,r)=>e<a?(i=r,!0):(n=r,!1))),[n,i,(e-a[n])/(a[i]-a[n])]}function C(e,a,n){const r=["proportional","proportional","proportional"];for(const t of e){const e=t.useSymbolValue?"symbol-value":m(t,a,n);switch(t.axis){case"width":r[0]=e;break;case"depth":r[1]=e;break;case"height":r[2]=e;break;case"width-and-depth":r[0]=e,r[1]=e;break;case"all":case void 0:case null:r[0]=e,r[1]=e,r[2]=e;break;default:i.neverReached(t.axis)}}return r}e.getAllSizes=C,e.getColor=f,e.getOpacity=p,e.getRotationAngle=d,e.getSize=m,e.getSizeForValue=F,e.getSizeFromNumberOrVariable=h,e.getSizeRangeAtScale=N,e.getVisualVariableValues=E,e.viewScaleRE=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
