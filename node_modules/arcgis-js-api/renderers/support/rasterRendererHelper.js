/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../Color","../../rasterRenderers","../../core/unitUtils","../../layers/support/Field","../../layers/support/RasterInfo","../FlowRenderer","./AuthoringInfo","./ClassBreakInfo","./colorRampUtils","./rasterRendererChecks","./UniqueValueInfo","../../rest/support/ClassBreaksDefinition","../../rest/support/generateRendererUtils","../../rest/support/MultipartColorRamp","../RasterStretchRenderer","../UniqueValueRenderer","../RasterColormapRenderer","../RasterShadedReliefRenderer","../ClassBreaksRenderer","../VectorFieldRenderer"],(function(e,t,n,a,r,l,s,o,i,u,c,m,d,f,p,h,b,g,y,R,v){"use strict";const C=.25,S=p.fromJSON({type:"multipart",colorRamps:[{fromColor:[0,0,255],toColor:[0,255,255]},{fromColor:[0,255,255],toColor:[255,255,0]},{fromColor:[255,255,0],toColor:[255,0,0]}]}),w=p.fromJSON(u.PREDEFINED_JSON_COLOR_RAMPS[0]),M=new Set(["scientific","standard-time","vector-uv","vector-magdir","vector-u","vector-v","vector-magnitude","vector-direction"]);function x(e,t){const{attributeTable:n,colormap:a}=e;if(c.isVectorFieldRendererSupported(e)){const t=j(e);if(null!=t)return t}if(null!=a){const t=q(e);if(null!=t)return t}if(null!=n){const t=O(e);if(null!=t)return t}return I(e,t)}function T(e,t=!1){const n=["raster-stretch"];return c.isColormapRendererSupported(e,t)&&n.push("raster-colormap"),c.isUVRendererSupported(e)&&n.push("unique-value"),c.isClassBreaksSupported(e,t)&&n.push("class-breaks"),c.isShadedReliefRendererSupported(e)&&n.push("raster-shaded-relief"),c.isVectorFieldRendererSupported(e)&&n.push("vector-field"),c.isFlowRendererSupported(e)&&n.push("flow"),n}function V(e,t,n){const a=["nearest","bilinear","cubic","majority"].find((e=>e===n?.toLowerCase()));if("Map"===t)return a??"bilinear";if("standard-time"===e.dataType)return a??"nearest";return"thematic"===e.dataType||e.attributeTable||e.colormap?"nearest"===a||"majority"===a?a:"nearest":a??"bilinear"}function I(e,t){e=k(e,t?.variableName);const{bandCount:n}=e;let{bandIds:a,stretchType:r}=t||{};a?.some((e=>e>=n))&&(a=null);let l=e.statistics,s=e.histograms;n>1?(a=a?.length?a:F(e),l=null==l?null:a?.map((e=>l[e])),s=null==s?null:a?.map((e=>s[e]))):a=[0],null==r&&(r=E(e));let o=!1;switch(r){case"none":o=!1;break;case"percent-clip":o=!s?.length;break;default:o=!l?.length}const{dataType:i}=e,u=1===a?.length&&M.has(i)?S:null,c=new h({stretchType:r,dynamicRangeAdjustment:o,colorRamp:u,outputMin:0,outputMax:255,gamma:1===a?.length?[1]:[1,1,1],useGamma:!1});return"percent-clip"===r?c.maxPercent=c.minPercent=C:"standard-deviation"===r&&(c.numberOfStandardDeviations=2),o||null==e.multidimensionalInfo&&!t?.includeStatisticsInStretch||("percent-clip"===r?c.histograms=s:"min-max"!==r&&"standard-deviation"!==r||(c.statistics=l)),c}function k(e,t){if(!t)return e;let n=e.statistics,a=e.histograms;const{multidimensionalInfo:r}=e;if(t&&null!=r){const e=r.variables.find((e=>e.name===t));if(e){const{statistics:t,histograms:r}=e;t?.length&&(n=t),r?.length&&(a=r)}}return l.fromJSON({...e.toJSON(),statistics:n,histograms:a})}function F(e){const t=e.bandCount;if(1===t)return null;if(2===t)return[0];const{bandInfos:n}=e;let a;if(n.length===t){const{red:e,green:t,blue:r,nir:l}=L(n);null!=e&&null!=t&&null!=r?a=[e,t,r]:null!=l&&null!=e&&null!=t&&(a=[l,e,t])}return!a&&t>=3&&(a=[0,1,2]),a}function B(e,t){const n=e.bandInfos.map((({name:e})=>e));return t?.length?t.map((e=>n[e])):n}function L(e){const t={};for(let n=0;n<e.length;n++){const a=e[n],r=a.name.toLowerCase();if("red"===r)t.red=n;else if("green"===r)t.green=n;else if("blue"===r)t.blue=n;else if("nearinfrared"===r||"nearinfrared_1"===r||"nir"===r)t.nir=n;else if(a.maxWavelength&&a.minWavelength){const e=a.minWavelength,r=a.maxWavelength;null==t.blue&&e>=410&&e<=480&&r>=480&&r<=540?t.blue=n:null==t.green&&e>=490&&e<=560&&r>=560&&r<=610?t.green=n:null==t.red&&e>=595&&e<=670&&r>=660&&r<=730?t.red=n:null==t.nir&&e>=700&&e<=860&&r>=800&&r<=950&&(t.nir=n)}}return t}function E(e){let t="percent-clip";const{pixelType:n,dataType:a,histograms:r,statistics:l,multidimensionalInfo:s}=e,o=M.has(a)||"generic"===a&&null!=s;return"u8"!==n||"processed"!==a&&null!=r&&null!=l?"u8"===n||"elevation"===a||o?t="min-max":null!=r?t="percent-clip":null!=l&&(t="min-max"):t="none",t}function O(e,n,a,r){if(!c.isUVRendererSupported(e,n))return null;const{attributeTable:l,statistics:s}=e,i=D(l,n),d=U(l,"red"),f=U(l,"green"),p=U(l,"blue"),h=new o,g=[],y=new Set,R=!!(d&&f&&p);if(null!=l)l.features.forEach((e=>{const n=e.attributes[i.name];if(!y.has(e.attributes[i.name])&&null!=n){y.add(n);const a=R&&("single"===d.type||"double"===d.type)&&("single"===f.type||"double"===f.type)&&("single"===p.type||"double"===p.type)&&!l.features.some((e=>e.attributes[d.name]>1||e.attributes[f.name]>1||e.attributes[p.name]>1)),r=a?255:1;g.push(new m({value:e.attributes[i.name],label:e.attributes[i.name]+"",symbol:{type:"simple-fill",style:"solid",outline:null,color:new t(R?[e.attributes[d.name]*r,e.attributes[f.name]*r,e.attributes[p.name]*r,1]:[0,0,0,0])}}))}}));else if(s?.[0])for(let o=s[0].min;o<=s[0].max;o++)g.push(new m({value:o,label:o.toString(),symbol:{type:"simple-fill",style:"solid",outline:null,color:new t([0,0,0,0])}}));if(g.sort(((e,t)=>e.value&&"string"==typeof e.value.valueOf()?0:e.value>t.value?1:-1)),!R){const e=u.convertColorRampToColormap(w,{numColors:g.length});g.forEach(((n,a)=>n.symbol.color=new t(e[a].slice(1,4)))),h.colorRamp=w}if(a||r){const e=a||u.convertColorRampToColormap(r,{numColors:g.length}).map((e=>e.slice(1)));g.forEach(((n,a)=>n.symbol.color=new t(e[a]))),h.colorRamp=r}return new b({field:i.name,uniqueValueInfos:g,authoringInfo:h})}function D(e,t,n){let a;return null!=e?(a=t?e.fields.find((e=>t.toLowerCase()===e.name.toLowerCase())):N(e.fields),a||(n||(a=e.fields.find((e=>"string"===e.type))),a||(a=U(e,"value")))):a=new r({name:"value"}),a}function N(e){let t;for(let n=0;n<e.length;n++){const a=e[n].name.toLowerCase();if("string"===e[n].type){if(a.startsWith("class")){t=e[n];break}null==t&&(a.endsWith("name")||a.endsWith("type"))&&(t=e[n])}}return t}function U(e,t){return null==e?null:e.fields.find((e=>e.name.toLowerCase()===t))}function q(e){if(!c.isColormapRendererSupported(e))return null;let t;const{attributeTable:n,colormap:a}=e;if(null!=n){const e=U(n,"value"),a=D(n,null,!0);"string"===a.type&&(t={},n.features.forEach((n=>{const r=n.attributes;t[r[e.name]]=a?r[a.name]:r[e.name]})))}return g.createFromColormap(a,t)}function z(e,t="traditional"){if(!c.isShadedReliefRendererSupported(e))return null;const{extent:n}=e,r=n.width*a.getMetersPerUnitForSR(n.spatialReference);return new y({hillshadeType:t,scalingType:r>5e6?"adjusted":"none"})}function W(e,t){e=k(e,t?.variableName);const{attributeTable:n}=e;if(!c.isClassBreaksSupported(e))return null;const a=null!=e.histograms?e.histograms[0]:null,r=null!=t?.numClasses&&isFinite(t?.numClasses)?t.numClasses:5,l=new o({classificationMethod:t?.classificationMethod,colorRamp:t?.colorRamp});let s=t?.field||"value";const m=[],p=[],h=1e3,b=null!=n,g=b&&n.fields.find((e=>"count"===e.name.toLowerCase())),y=b?n.fields.find((e=>e.name.toLowerCase()===s.toLowerCase())):void 0;if(y&&b){s=y.name;const e=n.features.length;let t=0;n.features.forEach((n=>t+=(g?n.attributes[g.name]:50)/e)),n.features.forEach((n=>{const a=n.attributes[y.name],r=g?n.attributes[g.name]:50;if(r>0){p.push(r);const n=Math.max(1,Math.round(r/e/t*h));for(let e=0;e<n;e++)m.push(a)}}))}else{const{pixelType:t}=e,r=(a.max-a.min)/a.size,l=t.includes("s")||t.includes("u"),s=l&&1===r?Math.floor(a.min+.5):a.min,o=l&&1===r?Math.floor(a.max-.5):a.max,i=a.size;let u,c=0;a.counts.forEach((e=>c+=e/i)),a.counts.forEach(((e,t)=>{if(e>0){p.push(e);const l=Math.max(1,Math.round(e/i/c*h));u=b?n.features[t].attributes[y.name]:0===t?s:t===i-1?o:a.min+r*(t+.5);for(let e=0;e<l;e++)m.push(u)}}))}const v=t?.classificationMethod||"natural-breaks";let C=t?.definedInterval;"defined-interval"!==v||C||(C=J(e,y,r));const w=f.createGenerateRendererClassBreaks({values:m,valueFrequency:p,normalizationTotal:null,definition:new d({classificationMethod:v,breakCount:r,definedInterval:C})});let M=t?.colors;if(!M){const e=t?.colorRamp||S;l.colorRamp=e;const n=u.convertColorRampToColormap(e,{numColors:w.classBreaks.length,interpolateAlpha:!0});M=n.map((e=>e.slice(1)))}const x=w.classBreaks.map(((e,t)=>new i({minValue:e.minValue,maxValue:e.maxValue,label:e.label,symbol:{type:"simple-fill",color:M[t]}})));return new R({field:s,classBreakInfos:x,authoringInfo:l})}function J(e,t,n){let a=0,r=0;if(null!=e.attributeTable){const n=e.attributeTable;a=r=n.features[0].attributes[t.name],n.features.forEach((e=>{const n=e.attributes[t.name];n<a&&(a=n),n>r&&(r=n)}))}else if(null!=e.histograms){const t=e.histograms;a=t[0].min,r=t[0].max}return(r-a)/n}const P=new Map([["m/s","meter-per-second"],["km/h","kilometer-per-hour"],["knots","knots"],["ft/s","feet-per-second"],["mph","mile-per-hour"]]);function j(e){if(!c.isVectorFieldRendererSupported(e))return null;let t;if(null!=e.statistics&&e.statistics.length&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=K(e.dataType,e.statistics);t=[{type:"size",field:"Magnitude",minSize:10,maxSize:40,minDataValue:n,maxDataValue:a}]}const n=null!=e.multidimensionalInfo?P.get(e.multidimensionalInfo.variables[0].unit):null,a=new v({visualVariables:t,inputUnit:n,rotationType:"geographic"});return a.visualVariables=[...a.sizeVariables,...a.rotationVariables],a}function A(e){return{color:e.symbolLayers[0].material?.color,type:"esriSFS",style:"esriSFSSolid"}}function _(e){if("uniqueValue"===e.type){const t=e.uniqueValueInfos,n=t?.[0].symbol;return n?.symbolLayers?.length&&(e.uniqueValueInfos=t?.map((e=>({value:e.value,label:e.label,symbol:e.symbol?A(e.symbol):null})))),e}if("classBreaks"===e.type){const t=e.classBreakInfos,n=t[0].symbol;return n?.symbolLayers?.length&&(e.classBreakInfos=t.map((e=>({classMinValue:e.classMinValue,classMaxValue:e.classMaxValue,label:e.label,symbol:e.symbol?A(e.symbol):null})))),e}return e}function G(e){if(!c.isFlowRendererSupported(e))return null;let t;if(null!=e.statistics&&e.statistics.length>0&&("vector-magdir"===e.dataType||"vector-uv"===e.dataType)){const{minMagnitude:n,maxMagnitude:a}=K(e.dataType,e.statistics);t=[{type:"color",field:"Magnitude",stops:[{value:n,color:"#1020C0"},{value:a,color:"#C02010"}]}]}return new s({visualVariables:t})}function K(e,t){let n,a;if("vector-magdir"===e)n=t[0].min,a=t[0].max;else{const e=t[0].min,r=t[0].max,l=t[1].min,s=t[1].max;n=0,a=Math.max(Math.abs(e),Math.abs(l),Math.abs(r),Math.abs(s))}return{minMagnitude:n,maxMagnitude:a}}e.createClassBreaksRenderer=W,e.createColormapRenderer=q,e.createDefaultRenderer=x,e.createFlowRenderer=G,e.createShadedReliefRenderer=z,e.createStretchRenderer=I,e.createUVRenderer=O,e.createVectorFieldRenderer=j,e.estimateMagnitudeRange=K,e.getBandNames=B,e.getClassField=D,e.getDefaultBandCombination=F,e.getDefaultInterpolation=V,e.getDefinedInterval=J,e.getField=U,e.getSupportedRendererTypes=T,e.getVariableRasterInfo=k,e.getWellKnownBandIndexes=L,e.normalizeRendererJSON=_,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
