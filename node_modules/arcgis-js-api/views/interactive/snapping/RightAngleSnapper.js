/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../chunks/vec2","../../../chunks/vec2f64","../../../chunks/vec3","../../../chunks/vec3f64","../../../support/elevationInfoUtils","./SnappingAlgorithm","./SnappingConstraint","./SnappingPoint","./snappingUtils","./candidates/RightAngleSnappingCandidate","../support/viewUtils"],(function(e,t,n,i,o,r,a,s,p,c,h,g,d){"use strict";let l=function(e){function i(){return e.apply(this,arguments)||this}t._inherits(i,e);var s=i.prototype;return s.snapNewVertex=function(e,t){const n=t.editGeometryOperations.data.components[0],i=n.vertices.length,o=[];if(i<2)return o;const{view:r}=this,s=d.vectorToScreenPoint(e,t.spatialReference,a.absoluteHeightElevationInfo,r),p=n.vertices[i-1];if(this.edgeExceedsShortLineThreshold(p.leftEdge,t)){const n=c.anyMapPointToSnappingPoint(p.pos,r,t),i=c.anyMapPointToSnappingPoint(p.leftEdge.leftVertex.pos,r,t);this._checkForSnappingCandidate(o,i,n,e,s,t)}const h=n.vertices[0];if(this.edgeExceedsShortLineThreshold(h.rightEdge,t)){const n=c.anyMapPointToSnappingPoint(h.pos,r,t),i=c.anyMapPointToSnappingPoint(h.rightEdge.rightVertex.pos,r,t);this._checkForSnappingCandidate(o,i,n,e,s,t)}return o},s.snapExistingVertex=function(e,t){const n=[],i=t.vertexHandle;if(i.component.vertices.length<3)return n;const{view:o}=this,r=d.vectorToScreenPoint(e,t.spatialReference,a.absoluteHeightElevationInfo,o),s=i.leftEdge,p=i.rightEdge;if(s&&s.leftVertex.leftEdge){const i=s.leftVertex.leftEdge;if(this.edgeExceedsShortLineThreshold(i,t)){const a=c.anyMapPointToSnappingPoint(i.rightVertex.pos,o,t),s=c.anyMapPointToSnappingPoint(i.leftVertex.pos,o,t);this._checkForSnappingCandidate(n,s,a,e,r,t)}}if(p&&p.rightVertex.rightEdge){const i=p.rightVertex.rightEdge;if(this.edgeExceedsShortLineThreshold(i,t)){const a=c.anyMapPointToSnappingPoint(i.leftVertex.pos,o,t),s=c.anyMapPointToSnappingPoint(i.rightVertex.pos,o,t);this._checkForSnappingCandidate(n,s,a,e,r,t)}}return n},s._checkForSnappingCandidate=function(e,t,i,s,l,S){const{spatialReference:P,pointer:v}=S;n.subtract(f,i,t);const x=o.set(u,f[1],-f[0],0),E=n.dot(x,n.subtract(f,s,i))/n.squaredLength(x),T=c.asSnappingPoint(n.scaleAndAdd(r.clone(s),i,x,E));if(h.squaredScreenDistance(l,d.vectorToScreenPoint(T,P,a.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(v)){if(this.isVertical(T,i)||this.isVertical(i,t))return;const n=o.scaleAndAdd(r.create(),i,x,Math.sign(E));e.push(new g.RightAngleSnappingCandidate({targetPoint:T,constraint:new p.VerticalHalfPlaneConstraint(i,c.asSnappingPoint(n)),previousVertex:t,otherVertex:i,otherVertexType:g.OtherVertexType.CENTER,isDraped:"on-the-ground"===S.elevationInfo?.mode}))}},t._createClass(i)}(s.SnappingAlgorithm);const f=i.create(),u=r.create();e.RightAngleSnapper=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
