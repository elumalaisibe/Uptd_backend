/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Evented","../../../../../core/Handles","../../../../../core/promiseUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/WatchUpdatingTracking","../../../../../geometry/SpatialReference","../../../../../layers/graphics/data/FeatureStore","../../../../../layers/graphics/data/QueryEngine","../../../../../layers/support/TileInfo","../../../../../rest/support/Query","../../../../../symbols/support/ElevationInfo","../snappingCandidateElevationAlignment","../snappingCandidateElevationFilter","../symbologySnappingCandidates","./FeatureServiceTiledFetcher","./FeatureServiceTileStore"],(function(e,t,i,n,r,a,s,o,l,d,u,c,p,h,g,f,y,_,S,m,v,w,F){"use strict";let I=function(t){function i(){var e;return(e=t.apply(this,arguments)||this)._isInitializing=!0,e.remoteClient=null,e._whenSetup=r.createResolver(),e._elevationAligner=S.getSnappingCandidateElevationAligner(),e._elevationFilter=m.getSnappingCandidateElevationFilter(),e._symbologyCandidatesFetcher=v.getSymbologySnappingCandidatesFetcher(),e._handles=new n,e._updatingHandles=new c.WatchUpdatingTracking,e._editsUpdatingHandles=new c.WatchUpdatingTracking,e._pendingApplyEdits=new Map,e._alignPointsInFeatures=async(t,i)=>{const n={points:t},a=await e.remoteClient.invoke("alignElevation",n,{signal:i});return r.throwIfAborted(i),a},e._getSymbologyCandidates=async(t,i)=>{const n={candidates:t,spatialReference:e._spatialReference.toJSON()},a=await e.remoteClient.invoke("getSymbologyCandidates",n,{signal:i});return r.throwIfAborted(i),a},e}e._inherits(i,t);var s=i.prototype;return s.destroy=function(){this._featureFetcher?.destroy(),this._queryEngine?.destroy(),this._featureStore?.clear(),this._handles?.destroy()},s.setup=async function(e){if(this.destroyed)return{result:{}};const{geometryType:t,objectIdField:i,timeInfo:n,fields:r}=e.serviceInfo,{hasZ:s}=e,o=p.fromJSON(e.spatialReference);this._spatialReference=o,this._featureStore=new h({...e.serviceInfo,hasZ:s,hasM:!1}),this._queryEngine=new g.QueryEngine({spatialReference:e.spatialReference,featureStore:this._featureStore,geometryType:t,fields:r,hasZ:s,hasM:!1,objectIdField:i,timeInfo:n}),this._featureFetcher=new w.FeatureServiceTiledFetcher({store:new F.FeatureServiceTileStore({featureStore:this._featureStore}),url:e.serviceInfo.url,objectIdField:e.serviceInfo.objectIdField,globalIdField:e.serviceInfo.globalIdField,capabilities:e.serviceInfo.capabilities,spatialReference:o,sourceSpatialReference:p.fromJSON(e.serviceInfo.spatialReference)});const l="3d"===e.configuration.viewType;return this._elevationAligner=S.getSnappingCandidateElevationAligner(l,{elevationInfo:null!=e.elevationInfo?_.fromJSON(e.elevationInfo):null,alignPointsInFeatures:this._alignPointsInFeatures,spatialReference:o}),this._elevationFilter=m.getSnappingCandidateElevationFilter(l),this._handles.add([a.watch((()=>this._featureFetcher.availability),(e=>this.emit("notify-availability",{availability:e})),a.sync),a.watch((()=>this.updating),(()=>this._notifyUpdating()))]),this._whenSetup.resolve(),this._isInitializing=!1,this.configure(e.configuration)},s.configure=async function(e){return await this._updatingHandles.addPromise(this._whenSetup.promise),this._updateFeatureFetcherConfiguration(e),{result:{}}},s.fetchCandidates=async function(e,t){await this._whenSetup.promise,r.throwIfAborted(t);const i=b(e),n=null!=t?t.signal:null,a=await this._queryEngine.executeQueryForSnapping(i,n);r.throwIfAborted(n);const s=await this._elevationAligner.alignCandidates(a.candidates,n);r.throwIfAborted(n);const o=await this._symbologyCandidatesFetcher.fetch(s,n);r.throwIfAborted(n);const l=0===o.length?s:s.concat(o);return{result:{candidates:this._elevationFilter.filter(i,l)}}},s.updateTiles=async function(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),this._featureFetcher.tileSize=e.tileSize,this._featureFetcher.tilesOfInterest=e.tiles,this._featureFetcher.tileInfo=null!=e.tileInfo?f.fromJSON(e.tileInfo):null,E},s.refresh=async function(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),this._featureFetcher.refresh(),E},s.whenNotUpdating=async function(e,t){return await this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t),await a.whenOnce((()=>!this.updatingExcludingEdits),t),r.throwIfAborted(t),E},s.getDebugInfo=async function(e,t){return r.throwIfAborted(t),{result:this._featureFetcher.debugInfo}},s.beginApplyEdits=async function(e,t){this._updatingHandles.addPromise(this._whenSetup.promise),r.throwIfAborted(t);const i=r.createResolver();return this._pendingApplyEdits.set(e.id,i),this._featureFetcher.applyEdits(i.promise),this._editsUpdatingHandles.addPromise(i.promise),E},s.endApplyEdits=async function(e,t){const i=this._pendingApplyEdits.get(e.id);return i&&i.resolve(e.edits),r.throwIfAborted(t),E},s.notifyElevationSourceChange=async function(e,t){return this._elevationAligner.notifyElevationSourceChange(),E},s.notifySymbologyChange=async function(e,t){return this._symbologyCandidatesFetcher.notifySymbologyChange(),E},s.setSymbologySnappingSupported=async function(e){return this._symbologyCandidatesFetcher=v.getSymbologySnappingCandidatesFetcher(e,this._getSymbologyCandidates),E},s._updateFeatureFetcherConfiguration=function(e){this._featureFetcher.filter=null!=e.filter?y.fromJSON(e.filter):null,this._featureFetcher.customParameters=e.customParameters},s._notifyUpdating=function(){this.emit("notify-updating",{updating:this.updating})},e._createClass(i,[{key:"updating",get:function(){return this.updatingExcludingEdits||this._editsUpdatingHandles.updating||this._featureFetcher.updating}},{key:"updatingExcludingEdits",get:function(){return this._featureFetcher.updatingExcludingEdits||this._isInitializing||this._updatingHandles.updating}}]),i}(i.EventedAccessor);t.__decorate([s.property({readOnly:!0})],I.prototype,"updating",null),t.__decorate([s.property({readOnly:!0})],I.prototype,"updatingExcludingEdits",null),t.__decorate([s.property()],I.prototype,"_isInitializing",void 0),I=t.__decorate([u.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorker")],I);function b(e){return{point:e.point,mode:e.mode,distance:e.distance,returnEdge:e.returnEdge,returnVertex:e.returnVertex,query:null!=e.filter?e.filter:{where:"1=1"}}}const E={result:{}};return I}));
