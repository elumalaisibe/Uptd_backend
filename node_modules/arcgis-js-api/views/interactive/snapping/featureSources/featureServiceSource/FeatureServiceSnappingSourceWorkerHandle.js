/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/arrayUtils","../../../../../core/HandleOwner","../../../../../core/promiseUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/workers/WorkerHandle","../../../../../geometry/support/typeUtils","../../../../../layers/graphics/dehydratedFeatures"],(function(e,t,n,r,i,o,a,d,s,l,c,p,u){"use strict";e.FeatureServiceSnappingSourceWorkerHandle=function(e){function n(t){var n;return(n=e.call(this,t)||this).schedule=null,n.hasZ=!1,n.elevationAlignPointsInFeatures=async e=>{const t=[];for(const{points:n}of e)for(const{z:e}of n)t.push(e);return{elevations:t,drapedObjectIds:new Set,failedObjectIds:new Set}},n.queryForSymbologySnapping=async()=>({candidates:[],sourceCandidateIndices:[]}),n.availability=0,n._workerHandleUpdating=!0,n._editId=0,n}t._inherits(n,e);var i=n.prototype;return i.destroy=function(){this._workerHandle.destroy()},i.initialize=function(){this._workerHandle=new h(this.schedule,{alignElevation:async(e,{signal:t})=>({result:await this.elevationAlignPointsInFeatures(e.points,t)}),getSymbologyCandidates:async(e,{signal:t})=>({result:await this.queryForSymbologySnapping(e,t)})}),this.handles.add([this._workerHandle.on("notify-updating",(({updating:e})=>this._workerHandleUpdating=e)),this._workerHandle.on("notify-availability",(({availability:e})=>this._set("availability",e)))])},i.setup=async function(e,t){const n=this._serviceInfoFromLayer(e.layer);if(null==n)return;const r={configuration:this._convertConfiguration(e.configuration),serviceInfo:n,spatialReference:e.spatialReference.toJSON(),hasZ:this.hasZ,elevationInfo:e.layer.elevationInfo?.toJSON()};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("setup",r,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))},i.configure=async function(e,t){const n=this._convertConfiguration(e);await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("configure",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))},i.refresh=async function(e){await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("refresh",{},e)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},e))},i.fetchCandidates=async function(e,t){const n=e.point,r={distance:e.distance,mode:e.mode,point:u.makeDehydratedPoint(n[0],n[1],n[2],e.coordinateHelper.spatialReference.toJSON()),returnEdge:e.returnEdge,returnVertex:e.returnVertex,filter:null!=e.filter?e.filter.toJSON():null};return this._workerHandle.invoke(r,t)},i.updateTiles=async function(e,t){const n={tiles:e.tiles,tileInfo:null!=e.tileInfo?e.tileInfo.toJSON():null,tileSize:e.tileSize};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("updateTiles",n,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))},i.applyEdits=async function(e,t){const n=this._editId++,i={id:n};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("beginApplyEdits",i,t));const a=await this.updatingHandles.addPromise(o.whenOrAbort(e.result,t)),d={id:n,edits:{addedFeatures:a.addedFeatures?.map((({objectId:e})=>e)).filter(r.isSome)??[],deletedFeatures:a.deletedFeatures?.map((({objectId:e,globalId:t})=>({objectId:e,globalId:t})))??[],updatedFeatures:a.updatedFeatures?.map((({objectId:e})=>e)).filter(r.isSome)??[]}};await this.updatingHandles.addPromise(this._workerHandle.invokeMethod("endApplyEdits",d,t)),this.updatingHandles.addPromise(this._workerHandle.invokeMethod("whenNotUpdating",{},t))},i.getDebugInfo=function(e){return this._workerHandle.invokeMethod("getDebugInfo",{},e)},i.notifyElevationSourceChange=async function(){await this._workerHandle.invokeMethod("notifyElevationSourceChange",{})},i.notifySymbologyChange=async function(){await this._workerHandle.invokeMethod("notifySymbologyChange",{})},i.setSymbologySnappingSupported=async function(e){await this._workerHandle.invokeMethod("setSymbologySnappingSupported",e)},i._convertConfiguration=function(e){return{filter:null!=e.filter?e.filter.toJSON():null,customParameters:e.customParameters,viewType:e.viewType}},i._serviceInfoFromLayer=function(e){return"multipatch"===e.geometryType||"mesh"===e.geometryType?null:{url:e.parsedUrl?.path??"",fields:e.fields.map((e=>e.toJSON())),geometryType:p.featureGeometryTypeKebabDictionary.toJSON(e.geometryType),capabilities:e.capabilities,objectIdField:e.objectIdField,globalIdField:e.globalIdField,spatialReference:e.spatialReference.toJSON(),timeInfo:e.timeInfo?.toJSON()}},t._createClass(n,[{key:"updating",get:function(){return this.updatingHandles.updating||this._workerHandleUpdating}}]),n}(i.HandleOwner),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"schedule",void 0),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"hasZ",void 0),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"elevationAlignPointsInFeatures",void 0),n.__decorate([a.property({constructOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"queryForSymbologySnapping",void 0),n.__decorate([a.property({readOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"updating",null),n.__decorate([a.property({readOnly:!0})],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"availability",void 0),n.__decorate([a.property()],e.FeatureServiceSnappingSourceWorkerHandle.prototype,"_workerHandleUpdating",void 0),e.FeatureServiceSnappingSourceWorkerHandle=n.__decorate([l.subclass("esri.views.interactive.snapping.featureSources.featureServiceSource.FeatureServiceSnappingSourceWorkerHandle")],e.FeatureServiceSnappingSourceWorkerHandle);let h=function(e){function n(t,n){return e.call(this,"FeatureServiceSnappingSourceWorker","fetchCandidates",{},t,{strategy:"dedicated",client:n})||this}return t._inherits(n,e),t._createClass(n)}(c.WorkerHandle);Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
