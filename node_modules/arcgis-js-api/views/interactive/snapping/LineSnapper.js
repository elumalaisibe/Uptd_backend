/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../support/elevationInfoUtils","./SnappingAlgorithm","./SnappingPoint","./snappingUtils","./candidates/LineSnappingCandidate","../support/viewUtils","../../support/geometry3dUtils","../../support/geometry2dUtils"],(function(e,t,n,i,o,s,r,a,p,d){"use strict";let l=function(e){function i(){return e.apply(this,arguments)||this}t._inherits(i,e);var l=i.prototype;return l.snapNewVertex=function(e,t){const i=t.editGeometryOperations.data.components[0],o=i.edges.length,r=[];if(o<1)return r;const{spatialReference:p}=t,d=a.vectorToScreenPoint(e,p,n.absoluteHeightElevationInfo,this.view),{view:l}=this,g=i.edges[o-1];let h=g;do{if(this.edgeExceedsShortLineThreshold(h,t)){const n=s.editEdgeToSnappingEdge(h,l,t);this._processCandidateProposal(n.left,n.right,e,d,t,r)}h=h.leftVertex.leftEdge}while(h&&h!==g);return r},l.snapExistingVertex=function(e,t){const i=[],r=t.vertexHandle,p=r.component;if(p.edges.length<2)return i;const{view:d}=this,{spatialReference:l}=t,g=a.vectorToScreenPoint(e,l,n.absoluteHeightElevationInfo,d),h=r.leftEdge,c=r.rightEdge;h&&c&&this.edgeExceedsShortLineThreshold(h,t)&&this.edgeExceedsShortLineThreshold(c,t)&&this._processCandidateProposal(o.anyMapPointToSnappingPoint(h.leftVertex.pos,d,t),o.anyMapPointToSnappingPoint(c.rightVertex.pos,d,t),e,g,t,i);const u=p.edges[0];let f=u;do{if(f!==r.leftEdge&&f!==r.rightEdge&&this.edgeExceedsShortLineThreshold(f,t)){const n=s.editEdgeToSnappingEdge(f,d,t);this._processCandidateProposal(n.left,n.right,e,g,t,i)}f=f.rightVertex.rightEdge}while(f&&f!==u);return i},l._processCandidateProposal=function(e,t,i,l,g,h){const{spatialReference:c,pointer:u}=g,f=o.asSnappingPoint(p.projectPointToLineLike(i,{start:e,end:t,type:d.LineType.LINE}));s.squaredScreenDistance(l,a.vectorToScreenPoint(f,c,n.absoluteHeightElevationInfo,this.view))<this.squaredProximityThreshold(u)&&h.push(new r.LineSnappingCandidate({lineStart:e,lineEnd:t,targetPoint:f,isDraped:"on-the-ground"===g.elevationInfo?.mode}))},t._createClass(i)}(i.SnappingAlgorithm);e.LineSnapper=l,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
