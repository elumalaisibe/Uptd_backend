/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/has","../../../../../core/Logger","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/RandomLCG","../../../../../core/accessorSupport/decorators/subclass","./BaseFeatureSource","../support/FeatureSetReaderPBFIndirect","../support/UpdateToken"],(function(e,t,s,n,o,r,a,i,u,d,l,c){"use strict";function h(e,t,s){const n=e.getXHydrated(),o=e.getYHydrated(),r=t.getColumnForX(n),a=Math.floor(t.normalizeCol(r));return`${s}/${Math.floor(t.getRowForY(o))}/${a}`}function g(e,t){if(null==e)return null;const s=t.transform,n=e.getQuantizationTransform();if(null==n){const[t,n]=s.scale,[o,r]=s.translate,a=-o/t,i=1/t,u=r/n,d=1/-n;return e.transform(a,u,i,d)}const[o,r]=n.scale,[a,i]=n.translate,[u,d]=s.scale,[l,c]=s.translate,h=o/u,g=(a-l)/u,p=r/d,_=(-i+c)/d;return e.transform(g,_,h,p)}e.SnapshotFeatureSource=function(e){function s(t){var s;return(s=e.call(this,t)||this).mode="snapshot",s._loading=!0,s._controller=new AbortController,s._downloadPromise=null,s._didSendEnd=!1,s._queries=new Array,s._invalidated=!1,s._hasAggregates=!1,s._random=new i(1e3),s._store=t.store,s._markedIdsBufId=s._store.storage.createBitset(),s}t._inherits(s,e);var n=s.prototype;return n.destroy=function(){t._get(t._getPrototypeOf(s.prototype),"destroy",this).call(this),this._controller.abort()},n.update=function(e,n){t._get(t._getPrototypeOf(s.prototype),"update",this).call(this,e,n),null==this._featureCount&&(this._featureCount=n.initialFeatureCount),null!=n.changedFeatureCount&&(this._featureCount=n.changedFeatureCount),this._hasAggregates=!!e.targets?.aggregate},n.resend=async function(e=!1){if(await this._downloadPromise,this._invalidated||e){const e=r.unwrapOrThrow(this._featureCount,"Expected featureCount to be defined");return this._invalidated=!1,this._subscriptions.forEach((e=>e.clear())),this._downloadPromise=this._download(e),void await this._downloadPromise}const t=this._queries.map((({query:e,reader:t})=>this._sendPatchQuery(e,t)));await Promise.all(t),this._subscriptions.forEach((e=>{e.requests.done.forEach((e=>this._onMessage(e.message)))}))},n.refresh=async function(e,t){t&&(this._featureCount=t.featureCount),await this.resend(!0)},n._sendPatchQuery=async function(e,t){const s=null!=e.outFields?e.outFields:[],n=this._queryInfo.outFields,o=n.filter((e=>!s.includes(e)));if(!o.length)return;const r=e.clone(),i=this._signal;r.returnGeometry=!1,r.returnCentroid=!1,r.outFields=o,e.outFields=n;const u=await this.enqueueQuery({query:r,depth:0,signal:i});a.throwIfAborted({signal:i}),t.joinAttributes(u)},n._fetchDataTile=async function(e){if(!this._downloadPromise){const e=r.unwrapOrThrow(this._featureCount,"Expected featureCount to be defined");this._downloadPromise=this._download(e)}const t=this._store.search(e),s=this._subscriptions.get(e.key.id),n=t.length-1;for(let r=0;r<n;r++){const n=g(t[r],e),o={type:"append",id:e.id,addOrUpdate:n,end:!1,status:c.UpdateToken.empty()};s.add({query:null,message:o}),this._hasAggregates||await a.after(1),this._onMessage(o)}const o=g(n>=0?t[n]:null,e),i=this._didSendEnd,u={type:"append",id:e.id,addOrUpdate:o,end:i,status:c.UpdateToken.empty()};s.add({query:null,message:u}),this._onMessage(u)},n._download=async function(e){try{await this.whenInitialized();const t=this._store.storage.getBitset(this._markedIdsBufId),s=new Set;t.clear();const n=Math.ceil(e/this.pageSize),o=Array.from({length:n},((e,t)=>t)).sort(((e,t)=>this._random.getInt()-this._random.getInt())).map((e=>this._downloadPage(e,t,s)));await Promise.all(o),this._store.sweepFeatures(t,this._store.storage),this._store.sweepFeatureSets(s)}catch(t){o.getLogger("esri.views.2d.layers.features.sources.SnapshotFeatureSource").error("mapview-snapshot-source","Encountered and error when downloading feature snapshot",t)}this._sendEnd(),this._loading=!1},n._downloadPage=async function(e,t,s){const n=this.pageSize,o={start:e*n,num:n,cacheHint:!0};null!=this.maxRecordCountFactor&&(o.maxRecordCountFactor=this.maxRecordCountFactor);const r=this.createQuery(o),i=this._signal,u=await this.enqueueQuery({query:r,depth:e,signal:i});a.throwIfAborted({signal:i}),this._queries.push({query:r,reader:u}),this._store.insert(u),s.add(u.instance);const d=u.getCursor();for(;d.next();)t.set(d.getDisplayId());this._send(u)},n._send=function(e){if(!this._subscriptions.size)return;let t=null;const s=new Map,n=new Set,o=new Map;this._subscriptions.forEach((e=>{const r=e.tile;s.set(r.key.id,null),t=r.tileInfoView,n.add(r.level);const{row:a,col:i}=r.key,u=`${r.level}/${a}/${i}`,d=o.get(u)??[];d.push(e),o.set(u,d)}));for(const r of n){const n=t.getLODInfoAt(r),a=e.getCursor();for(;a.next();){const e=h(a,n,r),t=a.getIndex();if(o.has(e))for(const n of o.get(e)){const e=n.tile.id;let o=s.get(e);null==o&&(o=[],s.set(e,o)),o.push(t)}}}s.forEach(((t,s)=>{if(null!=t){const n=this._subscriptions.get(s),o={type:"append",id:s,addOrUpdate:g(l.FeatureSetReaderIndirect.from(e,t),n.tile),end:!1,status:c.UpdateToken.empty()};n.add({query:null,message:o}),this._onMessage(o)}}))},n._sendEnd=function(){this._subscriptions.forEach((e=>{const t={type:"append",id:e.tile.id,addOrUpdate:null,end:!0,status:c.UpdateToken.empty()};e.add({query:null,message:t}),this._onMessage(t)})),this._didSendEnd=!0},t._createClass(s,[{key:"loading",get:function(){return this._loading}},{key:"_signal",get:function(){return this._controller.signal}}]),s}(d.BaseFeatureSource),e.SnapshotFeatureSource=s.__decorate([u.subclass("esri.view.2d.layers.features.sources.SnapshotFeatureSource")],e.SnapshotFeatureSource),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
