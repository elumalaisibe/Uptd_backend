/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../request","../../../../../core/Error","../../../../../core/has","../../../../../core/Logger","../../../../../core/promiseUtils","../controllers/support/sourceAdapters","./DataTileSource","../../../../support/QueueProcessor"],(function(e,t,r,s,i,n,o,a,u,c){"use strict";const l=4;let d=function(e){function u(t){var r;return(r=e.call(this,t)||this).type="feature",r.mode="on-demand",r._adapter=a.createSourceAdapter(t.serviceInfo),r._queue=new c.QueueProcessor({concurrency:8,process:async e=>{if(o.throwIfAborted(e),null!=e.tile){const t=e.tile.key.id,{signal:s}=e,n=i("esri-tiles-debug")?{tile:t.replaceAll("/","."),depth:e.depth}:void 0,o=await r._adapter.executeQuery(e.query,{signal:s,query:{...n,...r._schema?.customParameters}});return o.level=e.tile.key.level,o}return r._adapter.executeQuery(e.query,{...e,query:r._schema?.customParameters})}}),r._patchQueue=new c.QueueProcessor({concurrency:8,process:async e=>{if(o.throwIfAborted(e),null!=e.tile){const t=e.tile.key.id,{signal:s}=e,n=i("esri-tiles-debug")?{tile:t.replaceAll("/","."),depth:e.depth}:void 0,o=await r._adapter.executeQuery(e.query,{signal:s,query:{...n,...r._schema?.customParameters}});return o.level=e.tile.key.level,o}return r._adapter.executeQuery(e.query,{...e,query:r._schema?.customParameters})}}),r}t._inherits(u,e);var d=u.prototype;return d.destroy=function(){t._get(t._getPrototypeOf(u.prototype),"destroy",this).call(this),this._adapter.destroy(),this._queue.destroy(),this._patchQueue.destroy()},d.enqueueQuery=function(e,t){return this.updatingHandles.addPromise(this._queue.push(e,t))},d.enqueuePatchQuery=function(e,t){return this.updatingHandles.addPromise(this._patchQueue.push(e,t))},d.enableEvent=function(e,t){},d.subscribe=function(e,r){t._get(t._getPrototypeOf(u.prototype),"subscribe",this).call(this,e,r),this._fetchDataTile(e).catch((t=>{o.isAbortError(t)||n.getLogger("esri.views.2d.layers.features.sources.BaseFeatureSource").error(new s("mapview-query-error","Encountered error when fetching tile",{tile:e,error:t}))}))},d.unsubscribe=function(e){t._get(t._getPrototypeOf(u.prototype),"unsubscribe",this).call(this,e)},d.readers=function(e){return this._subscriptions.get(e).readers()},d.query=async function(e,t={}){const r=t.query??{};return this._adapter.executeQuery(e,{...t,query:{...r,...this._schema?.customParameters}})},d.queryLastEditDate=async function(){const e=this._serviceInfo.source,t={...e.query,f:"json"};return(await r(e.path,{query:t,responseType:"json"})).data.editingInfo.lastEditDate},d.createTileQuery=function(e,t={}){const r=this._serviceInfo.geometryType,s=this.createQuery(t);s.quantizationParameters=t.quantizationParameters??e.getQuantizationParameters(),s.resultType="tile",s.geometry=e.extent,this._serviceInfo.capabilities.query.supportsQuantization?"esriGeometryPolyline"===r&&(s.maxAllowableOffset=e.resolution*i("feature-polyline-generalization-factor")):"esriGeometryPolyline"!==r&&"esriGeometryPolygon"!==r||(s.maxAllowableOffset=e.resolution,"esriGeometryPolyline"===r&&(s.maxAllowableOffset*=i("feature-polyline-generalization-factor")));const n=this._serviceInfo.capabilities.query;return s.defaultSpatialReferenceEnabled=n.supportsDefaultSpatialReference,s.compactGeometryEnabled=n.supportsCompactGeometry,s},d._executePatchQuery=async function(e,t,r,s){const i=t.clone();i.outFields=[this._serviceInfo.objectIdField,...r],i.returnCentroid=!1,i.returnGeometry=!1;const n=null!=i.start?i.start/8e3:0,o=s.signal;return await this.enqueuePatchQuery({tile:e,query:i,signal:o,depth:n})},d._resend=async function(e,t){const{query:r,message:s}=e,i=null!=r.outFields?r.outFields:[],n=this._queryInfo.outFields,a=n.filter((e=>!i.includes(e)));if(null!=s.addOrUpdate)if(a.length)try{const e=this._subscriptions.get(s.id).tile,i=await this._executePatchQuery(e,r,a,t);o.throwIfAborted(t),r.outFields=n,s.addOrUpdate.joinAttributes(i),this._onMessage({...s,end:s.end,type:"append"})}catch(u){}else this._onMessage({...s,type:"append"});else this._onMessage({...s,type:"append"})},d._resendSubscription=async function(e){if(i("esri-2d-update-debug")&&console.debug(e.tile.id,"Resend Subscription"),e.empty)return this._onMessage({id:e.tile.id,addOrUpdate:null,end:!1,type:"append"});const t=e.signal;for(const r of e.requests.done)await this._resend(r,{signal:t});return null!=e.edits?this._onMessage(e.edits):void 0},d.resend=async function(){const e=Array.from(this._subscriptions.values());await Promise.all(e.map((e=>this._resendSubscription(e))))},t._createClass(u,[{key:"maxRecordCountFactor",get:function(){const{query:e}=this._serviceInfo.capabilities;return e.supportsMaxRecordCountFactor?l:null}},{key:"maxPageSize",get:function(){const{query:e}=this._serviceInfo.capabilities;return(e.maxRecordCount??8e3)*(this.maxRecordCountFactor??1)}},{key:"pageSize",get:function(){return Math.min(8e3,this.maxPageSize)}}]),u}(u.DataTileSource);e.BaseFeatureSource=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
