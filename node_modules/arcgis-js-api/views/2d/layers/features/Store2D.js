/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../core/accessorSupport/diffUtils","../../../../support/arcadeOnDemand","../../arcade/callExpressionWithCursor"],(function(e,t,s,i,r,a,n){"use strict";let c=function(){function t(e,t){this._canCacheExpressionValue=!1,this._sourceInfo=e,this._storage=t,this._bitsets={computed:t.getBitset(t.createBitset())}}var c=t.prototype;return c.invalidate=function(){this._bitsets.computed.clear()},c.updateSchema=async function(e,t){const s=r.diff(this._schema,t);if(this._schema=t,!t||null==s||!r.hasDiff(s,"attributes"))return;i("esri-2d-update-debug")&&console.debug("Applying Update - Store:",s),this._bitsets.computed.clear(),e.targets[t.name]=!0;const a=t.attributes,n=[],c=[];for(const i in a){const e=a[i];switch(e.type){case"field":break;case"expression":n.push(this._createArcadeComputedField(e));break;case"label-expression":n.push(this._createLabelArcadeComputedField(e));break;case"statistic":c.push(e)}}this._computedFields=await Promise.all(n),this._canCacheExpressionValue=!this._computedFields.some((e=>"expression"===e.type&&null!=e.expression&&e.expression.referencesScale())),this._statisticFields=c},c.setComputedAttributes=function(e,t,s,i){const r=this._bitsets.computed;if(!this._canCacheExpressionValue||!r.has(s)){r.set(s);for(const r of this._computedFields){const a=this._evaluateField(t,r,i);switch(r.resultType){case"numeric":e.setComputedNumericAtIndex(s,r.fieldIndex,a);break;case"string":e.setComputedStringAtIndex(s,r.fieldIndex,a)}}}},c._createArcadeComputedField=async function(e){const t=this._sourceInfo.spatialReference,s=this._sourceInfo.fieldsIndex;return{...e,expression:await a.createRendererExpression(e.valueExpression,t,s)}},c._createLabelArcadeComputedField=async function(t){const s=this._sourceInfo.spatialReference,i=this._sourceInfo.fieldsIndex,{createLabelFunction:r}=await new Promise(((t,s)=>e(["../../../../layers/support/labelFormatUtils"],t,s))),a=await r(t.label,i,s);return{...t,builder:a}},c._evaluateField=function(e,t,s){switch(t.type){case"label-expression":{const s=e.readArcadeFeature();return t.builder.evaluate(s)||""}case"expression":{const{expression:i}=t;return n(i,e,{$view:{scale:s}})}}},s._createClass(t,[{key:"storage",get:function(){return this._storage}}]),t}();t.Store2D=c,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
