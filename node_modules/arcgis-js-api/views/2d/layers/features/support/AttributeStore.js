/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/Error","../../../../../core/has","../../../../../core/Logger","../../../../../core/mathUtils","../../../../../core/maybe","../../../../../core/promiseUtils","../../../../../core/accessorSupport/diffUtils","../../../../../core/support/WatchUpdatingTracking","../../../../../layers/support/FieldsIndex","../../../engine/webgl/definitions","../../../engine/webgl/DisplayId","../../../engine/webgl/Utils","../../../engine/webgl/util/debug","../tileRenderers/support/visualVariablesUtils","../../../../webgl/enums"],(function(t,e,i,s,r,n,a,o,l,u,h,d,c,p,g,f,_){"use strict";const y=t=>Object.freeze(Object.defineProperty({__proto__:null,default:t},Symbol.toStringTag,{value:"Module"})),b=r.getLogger("esri.views.layers.2d.features.support.AttributeStore"),x=g.createDebugLogger(g.DEBUG_ATTR_UPDATES,b),m={sharedArrayBuffer:s("esri-shared-array-buffer"),atomics:s("esri-atomics")};function T(t,e){return i=>e(t(i))}let A=function(){function t(t,e,i,s){this.size=0,this.texelSize=4,this.dirtyStart=0,this.dirtyEnd=0;const{pixelType:r,layout:n,textureOnly:a}=s;this.textureOnly=a||!1,this.pixelType=r,this._ctype=e,this.layout=n,this._resetRange(),this._shared=t,this.size=i,a||(this.data=this._initData(r,i,t,e))}var i=t.prototype;return i.unsetComponentAllTexels=function(t,e){const i=this.data;for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+t]&=~e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1},i.setComponentAllTexels=function(t,e){const i=this.data;for(let s=0;s<this.size*this.size;s++)i[s*this.texelSize+t]|=255&e;this.dirtyStart=0,this.dirtyEnd=this.size*this.size-1},i.setComponent=function(t,e,i){const s=this.data;for(const r of i)s[r*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,r),this.dirtyEnd=Math.max(this.dirtyEnd,r)},i.setComponentTexel=function(t,e,i){this.data[i*this.texelSize+t]|=e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)},i.unsetComponentTexel=function(t,e,i){this.data[i*this.texelSize+t]&=~e,this.dirtyStart=Math.min(this.dirtyStart,i),this.dirtyEnd=Math.max(this.dirtyEnd,i)},i.getData=function(t,e){const i=c.getDisplayIdTexel(t);return this.data[i*this.texelSize+e]},i.setData=function(t,e,i){const s=c.getDisplayIdTexel(t),r=1<<e;0!=(this.layout&r)?null!=this.data&&(this.data[s*this.texelSize+e]=i,this.dirtyStart=Math.min(this.dirtyStart,s),this.dirtyEnd=Math.max(this.dirtyEnd,s)):b.error("mapview-attributes-store","Tried to set a value for a texel's readonly component")},i.lock=function(){this.pixelType===_.PixelType.UNSIGNED_BYTE&&this._shared&&m.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,1)},i.unlock=function(){this.pixelType===_.PixelType.UNSIGNED_BYTE&&this._shared&&m.atomics&&"local"!==this._ctype&&Atomics.store(this.data,0,0)},i.expand=function(t){if(this.size=t,!this.textureOnly){const e=this._initData(this.pixelType,t,this._shared,this._ctype),i=this.data;e.set(i),this.data=e}},i.toMessage=function(){const t=this.dirtyStart,e=this.dirtyEnd,i=this.texelSize;if(t>e)return null;this._resetRange();const s=!(this._shared||"local"===this._ctype),r=this.pixelType,n=this.layout,a=this.data;return{start:t,end:e,data:s&&a.slice(t*i,(e+1)*i)||null,pixelType:r,layout:n}},i._initData=function(t,e,i,s){const r=i&&"local"!==s?SharedArrayBuffer:ArrayBuffer,n=p.getPixelArrayCtor(t),a=new n(new r(e*e*4*n.BYTES_PER_ELEMENT));for(let o=0;o<a.length;o+=4)a[o+1]=255;return a},i._resetRange=function(){this.dirtyStart=2147483647,this.dirtyEnd=0},e._createClass(t,[{key:"buffer",get:function(){return a.applySome(this.data,(t=>t.buffer))}}]),t}();return function(){function r(t,e){this._client=t,this.config=e,this.updatingHandles=new u.WatchUpdatingTracking,this._blocks=new Array,this._filters=new Array(d.MAX_FILTERS),this._attributeComputeInfo=null,this._targetType=0,this._abortController=new AbortController,this._hasScaleExpr=!1,this._size=32,this._nextUpdate=null,this._currUpdate=null,this._idsToHighlight=new Set;const i=e.supportsTextureFloat?_.PixelType.FLOAT:_.PixelType.UNSIGNED_BYTE;x(`Creating AttributeStore ${m.sharedArrayBuffer?"with":"without"} shared memory`),this._blockDescriptors=[{pixelType:_.PixelType.UNSIGNED_BYTE,layout:1},{pixelType:_.PixelType.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:_.PixelType.UNSIGNED_BYTE,layout:15,textureOnly:!0},{pixelType:i,layout:15},{pixelType:i,layout:15},{pixelType:i,layout:15},{pixelType:i,layout:15}],this._blocks=this._blockDescriptors.map((()=>null))}var p=r.prototype;return p.destroy=function(){this._abortController.abort(),this.updatingHandles.destroy()},p.isUpdating=function(){const t=this.updatingHandles.updating||!!this._nextUpdate;return s("esri-2d-log-updating")&&console.log(`Updating AttributeStore: ${t}\n  -> updatingHandles ${this.updatingHandles.updating} (currUpdate: ${!!this._currUpdate})\n  -> nextUpdate: ${!!this._nextUpdate}\n`),t},p.update=function(t,e){this.config=e;const i=e.schema.processors[0].storage,r=l.diff(this._schema,i);if((t.targets.feature||t.targets.aggregate)&&(t.storage.data=!0),r&&(s("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:",r),t.storage.data=!0,this._schema=i,this._attributeComputeInfo=null,null!=i)){switch(i.target){case"feature":this._targetType=c.DISPLAY_ID_TYPE_FEATURE;break;case"aggregate":this._targetType=c.DISPLAY_ID_TYPE_AGGREGATE}if("subtype"===i.type){this._attributeComputeInfo={isSubtype:!0,subtypeField:i.subtypeField,map:new Map};for(const t in i.mapping){const e=i.mapping[t];if(null!=e&&null!=e.vvMapping)for(const i of e.vvMapping)this._bindAttribute(i,parseInt(t,10))}}else{if(this._attributeComputeInfo={isSubtype:!1,map:new Map},null!=i.vvMapping)for(const t of i.vvMapping)this._bindAttribute(t);if(null!=i.attributeMapping)for(const t of i.attributeMapping)this._bindAttribute(t)}}},p.onTileData=function(t,e){if(null==e.addOrUpdate)return;const i=e.addOrUpdate.getCursor();for(;i.next();){const t=i.getDisplayId();this.setAttributeData(t,i)}},p.setHighlight=async function(t,e){const i=1,s=this._getBlock(0),r=e.map((t=>c.getDisplayIdTexel(t)));s.lock(),s.unsetComponentAllTexels(0,i),s.setComponent(0,i,r),s.unlock(),this._idsToHighlight.clear();for(const n of t)this._idsToHighlight.add(n);await this.sendUpdates()},p.updateFilters=async function(t,e,i){s("esri-2d-update-debug")&&console.debug("AttributeStore::updateFilters");const{service:r,spatialReference:n}=i,{filters:a}=e,o=a.map(((t,e)=>this._updateFilter(t,e,r,n))),l=(await Promise.all(o)).some((t=>t));s("esri-2d-update-debug")&&console.debug("AttributeStore::updateFilters - finsihed"),l&&(t.storage.filters=!0,s("esri-2d-update-debug")&&console.debug("Applying Update - AttributeStore:","Filters changed"))},p.setData=function(t,e,i,s){const r=c.getDisplayIdTexel(t);this._ensureSizeForTexel(r),this._getBlock(e).setData(t,i,s)},p.getData=function(t,e,i){return this._getBlock(e).getData(t,i)},p.getHighlightFlag=function(t){return this._idsToHighlight.has(t)?d.HIGHLIGHT_FLAG:0},p.unsetAttributeData=function(t){const e=c.getDisplayIdTexel(t);this._getBlock(0).setData(e,0,0)},p.setAttributeData=function(t,e){const i=c.getDisplayIdTexel(t);if(this._ensureSizeForTexel(i),this._getBlock(0).setData(i,0,this.getFilterFlags(e)),this._targetType!==c.getDisplayIdType(t))return;const s=this._attributeComputeInfo,r=this.config.supportsTextureFloat?1:2,a=4;let o=null;s&&(o=s.isSubtype?s.map.get(e.readAttribute(s.subtypeField)):s.map,o&&o.size&&o.forEach(((t,s)=>{const o=s*r%a,l=Math.floor(s*r/a),u=this._getBlock(l+d.ATTRIBUTE_DATA_VV),h=t(e);if(this.config.supportsTextureFloat)u.setData(i,o,h);else if(h===d.NAN_MAGIC_NUMBER)u.setData(i,o,255),u.setData(i,o+1,255);else{const t=n.clamp(Math.round(h),-32767,32766)+32768,e=255&t,s=(65280&t)>>8;u.setData(i,o,e),u.setData(i,o+1,s)}})))},p.sendUpdates=function(){if(s("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate"),this._nextUpdate)return this._nextUpdate.promise;if(this._currUpdate)return this._nextUpdate=o.createResolver(),this.updatingHandles.addPromise(this._nextUpdate.promise),this._nextUpdate.promise;const t={blocks:this._blocks.map((t=>null!=t?t.toMessage():null))};return this._currUpdate=this._createResources().then((()=>{const e=()=>{if(this._currUpdate=null,this._nextUpdate){const t=this._nextUpdate;this._nextUpdate=null,this.sendUpdates().then((()=>t.resolve()))}else s("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate::No additional updates queued")};s("esri-2d-update-debug")&&console.debug("AttributeStore::sendUpdate::client.update");const i=this.updatingHandles.addPromise(this._client.update(t,this._signal).then(e).catch(e));return this._client.render(this._signal),i})).catch((t=>{if(o.isAbortError(t))return this._createResourcesPromise=null,this._createResources();b.error(new i("mapview-attribute-store","Encountered an error during client update",t))})),this._currUpdate},p._ensureSizeForTexel=function(t){for(;t>=this._size*this._size;)if(this._expand())return},p._bindAttribute=function(t,e){function i(){const{normalizationField:e}=t;return e?i=>{const s=i.readAttribute(e);if(!s)return null;return i.readAttribute(t.field)/s}:e=>e.readAttribute(t.field)}function s(){return t.normalizationField&&b.warn("mapview-arcade","Ignoring normalizationField specified with an arcade expression which is not supported."),e=>e.getComputedNumericAtIndex(t.fieldIndex)}let r;if(null!=t.fieldIndex)r=s();else{if(!t.field)return;r=i()}const{valueRepresentation:n}=t;if(n){r=T(r,(t=>f.getVisualVariableSizeValueRepresentationRatio(t,n)))}const a=t=>null===t||isNaN(t)||t===1/0||t===-1/0?d.NAN_MAGIC_NUMBER:t,o=this._attributeComputeInfo;if(o.isSubtype){const i=o.map.get(e)??new Map;i.set(t.binding,T(r,a)),o.map.set(e,i)}else o.map.set(t.binding,T(r,a))},p._createResources=function(){if(null!=this._createResourcesPromise)return this._createResourcesPromise;this._getBlock(d.ATTRIBUTE_DATA_ANIMATION),this._getBlock(d.ATTRIBUTE_DATA_GPGPU),x("Initializing AttributeStore");const t={shared:m.sharedArrayBuffer&&!("local"===this._client.type),size:this._size,blocks:a.mapMany(this._blocks,(t=>({textureOnly:t.textureOnly,buffer:t.buffer,pixelType:t.pixelType})))},e=this._client.initialize(t,this._signal).catch((t=>{o.isAbortError(t)?this._createResourcesPromise=null:b.error(new i("mapview-attribute-store","Encountered an error during client initialization",t))}));return this._createResourcesPromise=e,e.then((()=>null==this._createResourcesPromise?this._createResources():void 0)),e},p._getBlock=function(t){const e=this._blocks[t];if(null!=e)return e;x(`Initializing AttributeBlock at index ${t}`);const i=m.sharedArrayBuffer,s=this._client.type,r=new A(i,s,this._size,this._blockDescriptors[t]);return this._blocks[t]=r,this._createResourcesPromise=null,r},p._expand=function(){if(this._size<this.config.maxTextureSize){const t=this._size<<=1;return x("Expanding block size to",t,this._blocks),a.forEachSome(this._blocks,(e=>e.expand(t))),this._createResourcesPromise=null,this._size=t,0}return b.error(new i("mapview-limitations","Maximum number of onscreen features exceeded.")),-1},p._updateFilter=async function(t,e,i,s){const r=this._filters[e],n=null!=r&&r.hash;if(!r&&!t)return!1;if(n===JSON.stringify(t))return!1;if(null==t){if(!r)return!1;const t=1<<e+1,i=this._getBlock(0);return this._filters[e]=null,i.setComponentAllTexels(0,t),this.sendUpdates(),!0}const a=await this._getFilter(e,i);return await a.update(t,s),!0},p._getFilter=async function(e,i){const s=this._filters[e];if(null!=s)return s;const{default:r}=await new Promise(((e,i)=>t(["./FeatureFilter"],(t=>e(y(t))),i))),n=new r({geometryType:i.geometryType,hasM:!1,hasZ:!1,timeInfo:i.timeInfo,fieldsIndex:new h(i.fields)});return this._filters[e]=n,n},p.isVisible=function(t){return!!(2&this._getBlock(0).getData(t,0))},p.getFilterFlags=function(t){let e=0;const i=c.getDisplayIdFilterMask(t.getDisplayId());for(let r=0;r<this._filters.length;r++){const s=!!(i&1<<r),n=this._filters[r];e|=(!s||null==n||n.check(t)?1:0)<<r}let s=0;if(this._idsToHighlight.size){const e=t.getObjectId();s=this.getHighlightFlag(e)}return e<<1|s},e._createClass(r,[{key:"hasScaleExpr",get:function(){return this._hasScaleExpr}},{key:"_signal",get:function(){return this._abortController.signal}},{key:"hasHighlight",get:function(){return this._idsToHighlight.size>0}}]),r}()}));
