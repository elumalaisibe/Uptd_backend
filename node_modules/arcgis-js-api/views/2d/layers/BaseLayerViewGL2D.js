/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../chunks/earcut","../../../geometry/support/aaBoundingRect","../../../geometry/support/coordsUtils","../../../geometry/support/normalizeUtilsSync","../../../geometry/support/spatialReferenceUtils","../../../layers/graphics/data/projectionSupport","../tiling/PagedTileQueue","../tiling/TileInfoView","../tiling/TileKey","../tiling/TileQueue","../tiling/TileStrategy","../engine/webgl/definitions","../engine/webgl/TurboLine","./LayerView2D","./support/DisplayGL","./support/util","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,t,s,i,n,r,o,c,a,l,u,f,h,p,d,y,x,g,v,T,_,m,w,R,O){"use strict";const b=new Set,M=[],z=[];let L=e._createClass((function(e,t,s,i,n,r,o,c=[0,0],l=a.create()){this.id=e,this.level=t,this.row=s,this.col=i,this.world=n,this.resolution=r,this.scale=o,this.coords=c,this.bounds=l})),C=function(t){function s(s){var i;return(i=t.call(this,s)||this)._tileMap=new Map,i.container=new m(e._assertThisInitialized(i)),i.layer=null,i.tiles=[],i._renderTarget={framebuffer:null,viewport:[0,0,0,0]},i}e._inherits(s,t);var i=s.prototype;return i.attach=function(){},i.detach=function(){},i.requestRender=function(){this.container.requestRender()},i.tilesChanged=function(e,t){},i.supportsSpatialReference=function(e){const t=this.layer?.tileInfo;return!t||f.equals(t.spatialReference,e)},i.doRefresh=async function(){},i.isUpdating=function(){return!1},i.update=function(e){const t=this._tileInfoView,s=this.tiles;if(t){const i=t.getTileCoverage(e.state,0),n=i?.spans,r=i?.lodInfo;if(n?.length&&r){const e=r.level;for(const{row:t,colFrom:i,colTo:o}of n)for(let n=i;n<=o;n++){const i=r.normalizeCol(n),o=r.getWorldForColumn(n),c=`${e}/${t}/${i}/${o}`;if(!this._tileMap.has(c)){const n=new L(c,e,t,i,o,r.resolution,r.scale);r.getTileCoords(n.coords,n,!1),r.getTileBounds(n.bounds,n,!0),this._tileMap.set(c,n),s.push(n),M.push(n)}b.add(c)}}}for(let i=s.length-1;i>=0;i--){const e=s[i];b.has(e.id)||(s.splice(i,1),z.push(e),this._tileMap.delete(e.id))}(M.length||z.length)&&(this.tilesChanged(M,z),M.length=z.length=0),b.clear(),this.requestRender()},i.moveStart=function(){},i.viewChange=function(){this.requestUpdate()},i.moveEnd=function(){},i.bindRenderTarget=function(){this.context.bindFramebuffer(this.context.FRAMEBUFFER,this._renderTarget.framebuffer),this.context.viewport(this._renderTarget.viewport[0],this._renderTarget.viewport[1],this._renderTarget.viewport[2],this._renderTarget.viewport[3])},i.getRenderTarget=function(){return this._renderTarget},i.tessellateExtent=async function(e){const t={vertices:[],indices:[]},s=await this._projectAndNormalizeGeometry(e),i=t.vertices.length;return t.vertices.push({x:s.xmin,y:s.ymin,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:0,distance:0}),t.vertices.push({x:s.xmax,y:s.ymin,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:0,distance:0}),t.vertices.push({x:s.xmin,y:s.ymax,xOffset:0,yOffset:0,uTexcoord:0,vTexcoord:1,distance:0}),t.vertices.push({x:s.xmax,y:s.ymax,xOffset:0,yOffset:0,uTexcoord:1,vTexcoord:1,distance:0}),t.indices.push(i,i+1,i+2,i+1,i+3,i+2),t},i.tessellatePoint=async function(e,t){const s=await this._projectAndNormalizeGeometry(e);return this._tessellatePoints([s],t)},i.tessellateMultipoint=async function(e,t){const s=await this._projectAndNormalizeGeometry(e),i=s.points.map((e=>({x:e[0],y:e[1],spatialReference:s.spatialReference})));return this._tessellatePoints(i,t)},i._tessellatePoints=async function(e,t){const s={vertices:[],indices:[]};for(const i of e){const e=s.vertices.length;s.vertices.push({x:i.x,y:i.y,xOffset:t.x,yOffset:t.y+t.height,uTexcoord:0,vTexcoord:0,distance:0}),s.vertices.push({x:i.x,y:i.y,xOffset:t.x+t.width,yOffset:t.y+t.height,uTexcoord:1,vTexcoord:0,distance:0}),s.vertices.push({x:i.x,y:i.y,xOffset:t.x,yOffset:t.y,uTexcoord:0,vTexcoord:1,distance:0}),s.vertices.push({x:i.x,y:i.y,xOffset:t.x+t.width,yOffset:t.y,uTexcoord:1,vTexcoord:1,distance:0}),s.indices.push(e,e+1,e+2,e+1,e+3,e+2)}return s},i.tessellatePolyline=async function(e,t){const s={vertices:[],indices:[]},i=(await this._projectAndNormalizeGeometry(e)).paths;if(!i||!i.length)return s;let n;const r=new T.LineTessellation(((e,i,r,o,c,a,l,u,f,h,p)=>{const d=s.vertices.length;return s.vertices.push({x:e,y:-i,xOffset:l*t/2,yOffset:u*t/2,uTexcoord:p/n,vTexcoord:(h+1)/2,distance:p}),d}),((e,t,i)=>{s.indices.push(e,t,i)}),!0);for(const o of i){n=0;for(let t=1;t<o.length;++t){const e=o[t][0]-o[t-1][0],s=o[t][1]-o[t-1][1];n+=Math.sqrt(e*e+s*s)}const e=o.map((e=>({x:e[0],y:-e[1]})));r.tessellate(e,I)}return s},i.tessellatePolygon=async function(e){const t={vertices:[],indices:[]},s=await this._projectAndNormalizeGeometry(e),i=s.rings;if(!i||!i.length)return t;l.closeRings(s);for(const a of s.rings)for(const e of a)e[1]=-e[1];let n=1/0,r=1/0,o=-1/0,c=-1/0;return w.analyzeRings(s.rings,(()=>{}),((e,t,s)=>{for(let i=e;i<t;i+=2)n=Math.min(n,s[i]),r=Math.min(r,s[i+1]),o=Math.max(o,s[i]),c=Math.max(c,s[i+1])})),w.analyzeRings(s.rings,(()=>{}),((e,s,i,a)=>{this._invokeEarcut(t,e,s,i,a,[n,r,o,c])})),t},i._invokeEarcut=function(e,t,s,i,n,r){const o=i.slice(t,s),a=c.earcut(o,n,2),l=e.vertices.length;for(let c=0;c<o.length;c+=2){const t=o[c],s=o[c+1];e.vertices.push({x:t,y:-s,xOffset:0,yOffset:0,uTexcoord:(t-r[0])/(r[2]-r[0]),vTexcoord:1-(s-r[1])/(r[3]-r[1]),distance:0})}for(let c=0;c<a.length;++c)e.indices.push(l+a[c])},i._projectAndNormalizeGeometry=async function(e){await h.checkProjectionSupport(e.spatialReference,this.view.spatialReference);const t=u.normalizeCentralMeridianForDisplay(e);return h.project(t,e.spatialReference,this.view.spatialReference)},e._createClass(s,[{key:"_tileInfoView",get:function(){const e=this.layer&&this.layer.tileInfo;return e?new d(e):null}},{key:"context",get:function(){return this.view._stage.context.gl}}]),s}(O(_.LayerView2DMixin(R)));t.__decorate([s.property()],C.prototype,"_tileInfoView",null),t.__decorate([s.property()],C.prototype,"layer",void 0),t.__decorate([s.property()],C.prototype,"context",null),C=t.__decorate([o.subclass("esri.views.2d.layers.BaseLayerViewGL2D")],C);const I={pixelCoordRatio:1,wrapDistance:1e11,halfWidth:v.THIN_LINE_HALF_WIDTH_THRESHOLD+1,initialDistance:0,textured:!0,offset:0};return C}));
