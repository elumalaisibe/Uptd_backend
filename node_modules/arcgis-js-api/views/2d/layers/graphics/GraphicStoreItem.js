/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../geometry/support/aaBoundingRect","../../../../geometry/support/centroid","../../../../geometry/support/jsonUtils","../../../../geometry/support/quantizationUtils","../../../../geometry/support/spatialReferenceUtils","../../../../layers/graphics/featureConversionUtils","../../../../layers/graphics/OptimizedGeometry"],(function(e,t,n,i,s,o,r,l){"use strict";const u=new l,a=new l,h="esriGeometryPolyline";function c(e){e.coords.length=0,e.lengths.length=0}let y=function(){function l(){this.bounds=t.create(),this.graphic=null}l.acquire=function(e=null,t,n,i,s){let o;return 0===l._pool.length?o=new l:(o=l._pool.pop(),this._set.delete(o)),o.acquire(e,t,n,i,s),o},l.release=function(e){e&&!this._set.has(e)&&(e.release(),this._pool.push(e),this._set.add(e))},l.getCentroidQuantized=function(e,t){if(i.isPolygon(e.geometry)){const i=e.symbol;if(null==i)return null;if(i?.layers.length>0&&i.layers.some((e=>"text"===e.type||"marker"===e.type))){const i=n.polygonCentroid(e.geometry);return null!==i?s.quantizePoint(t,{},{x:i[0],y:i[1]},!1,!1):null}}return null};var y=l.prototype;return y.acquire=function(e=null,t,n,i,s){e&&this.set(e,t,n,i,s)},y.release=function(){this.graphic=null,this.symbolResource=null,this.geometry=null},y.set=function(e,t,n,i,s){this.graphic=e,this.geometry=n,this.symbolResource=t,this.bounds=i,s&&(this.size=s)},y.getGeometryQuantized=function(e,n,l,y){const g=this.geometry,p=i.getJsonType(g);if(null==p)return null;switch(p){case"esriGeometryPolygon":{const t=g,{rings:n}=t;if(!n||0===n.length)return null;let i;if(i=1===n.length&&2===n[0].length?s.quantizeGeometry(e,{paths:[[n[0][0],n[0][1]]]}):s.quantizeGeometry(e,this.geometry),!i){const t={x:n[0][0][0],y:n[0][0][1]};if(i=s.quantizeGeometry(e,t),i){const{x:e,y:t}=i;return{rings:[[[e-1,t],[1,-1],[1,1],[-1,1],[-1,-1]]]}}}return i}case"esriGeometryPolyline":{const t=g;c(u),c(a);const n=t.hasZ??!1,i=t.hasM??!1;return r.convertFromPolyline(u,t),r.generalizeOptimizedGeometry(a,u,n,i,h,e.scale[0]),r.quantizeOptimizedGeometry(u,a,n,i,h,e),r.convertToPolyline(u,t.hasZ??!1,t.hasM??!1)}case"esriGeometryMultipoint":{const i=g,r=.5*y*Math.max(Math.abs(this.size[0])+this.size[2]-this.size[0],Math.abs(this.size[1])+this.size[3]-this.size[1]),u=o.getInfo(l);let a=i.points;if(u){const[e,i]=u.valid,s=i-e;a=a.filter((o=>{if(o[0]+r>i||o[0]-r<e){const e=[...o];return o[0]+r>i?e[0]-=s:e[0]+=s,t.containsPointWithMargin(n,o,r)||t.containsPointWithMargin(n,e,r)}return t.containsPointWithMargin(n,o,r)}))}return 0===a.length?{points:a}:s.quantizeGeometry(e,{points:a})}}return s.quantizeGeometry(e,this.geometry)},e._createClass(l,[{key:"symbol",get:function(){return this.symbolResource.symbol}}]),l}();return y._pool=[],y._set=new Set,y}));
