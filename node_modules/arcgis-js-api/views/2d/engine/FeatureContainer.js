/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/promiseUtils","../../../core/Queue","./webgl/AttributeStoreView","./webgl/TileContainer","./webgl/WGLRendererInfo"],(function(e,t,r,i,n,s,o){"use strict";let a=function(e){function s(t){var r;return(r=e.call(this,t)||this)._rendererInfo=new o.WGLRendererInfo,r._materialItemsRequestQueue=new i,r.attributeView=new n.AttributeStoreView((()=>r.onAttributeStoreUpdate())),r}t._inherits(s,e);var a=s.prototype;return a.destroy=function(){this.children.forEach((e=>e.destroy())),this.removeAllChildren(),this.attributeView.destroy(),this._materialItemsRequestQueue.clear()},a.setRendererInfo=function(e,t,r){this._rendererInfo.setInfo(e,t,r),this.requestRender()},a.getMaterialItems=async function(e,t){if(!e||0===e.length)return[];const i=r.createResolver();return this._materialItemsRequestQueue.push({items:e,abortOptions:t,resolver:i}),this.requestRender(),i.promise},a.doRender=function(e){if(e.context.capabilities.enable("textureFloat"),e.context.capabilities.enable("vao"),this._materialItemsRequestQueue.length>0){let t=this._materialItemsRequestQueue.pop();for(;t;)this._processMaterialItemRequest(e,t),t=this._materialItemsRequestQueue.pop()}t._get(t._getPrototypeOf(s.prototype),"doRender",this).call(this,e)},a.renderChildren=function(e){for(const t of this.children)t.commit(e);this._rendererInfo.update(e.state),t._get(t._getPrototypeOf(s.prototype),"renderChildren",this).call(this,e)},a.updateTransforms=function(e){if(this.children.some((e=>e.hasData)))for(const t of this.children)t.setTransform(e)},a.createRenderParams=function(e){const r=t._get(t._getPrototypeOf(s.prototype),"createRenderParams",this).call(this,e);return r.rendererInfo=this._rendererInfo,r.attributeView=this.attributeView,r},a.onAttributeStoreUpdate=function(){},a._processMaterialItemRequest=function(e,{items:t,abortOptions:r,resolver:i}){const{painter:n,pixelRatio:s}=e,o=t.map((e=>n.textureManager.rasterizeItem(e.symbol,s,e.glyphIds,r)));Promise.all(o).then((e=>{if(!this.stage)return void i.reject();const r=e.map(((e,r)=>({id:t[r].id,mosaicItem:e})));i.resolve(r)}),i.reject)},t._createClass(s)}(s);e.FeatureContainer=a,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
