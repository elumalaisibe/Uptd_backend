/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../enums","../Utils","./WGLGeometryBrush","../materialKey/MaterialKey","../../../../webgl/enums"],(function(e,t,a,n,o,i){"use strict";const r=e=>a.createProgramDescriptor(e.data,{geometry:[{location:0,name:"a_pos",count:2,type:i.DataType.SHORT},{location:1,name:"a_id",count:4,type:i.DataType.UNSIGNED_BYTE},{location:2,name:"a_color",count:4,type:i.DataType.UNSIGNED_BYTE,normalized:!0},{location:3,name:"a_offsetAndNormal",count:4,type:i.DataType.BYTE},{location:4,name:"a_accumulatedDistanceAndHalfWidth",count:2,type:i.DataType.UNSIGNED_SHORT},{location:5,name:"a_tlbr",count:4,type:i.DataType.UNSIGNED_SHORT},{location:6,name:"a_segmentDirection",count:4,type:i.DataType.BYTE},{location:7,name:"a_aux",count:2,type:i.DataType.UNSIGNED_SHORT},{location:8,name:"a_zoomRange",count:2,type:i.DataType.UNSIGNED_SHORT}]});let l=function(a){function n(){return a.apply(this,arguments)||this}e._inherits(n,a);var l=n.prototype;return l.dispose=function(){},l.getGeometryType=function(){return t.WGLGeometryType.LINE},l.supportsSymbology=function(e){return!0},l.drawGeometry=function(e,t,a,n){const{context:l,painter:s,rendererInfo:u,displayLevel:c,passOptions:y,requestRender:m,allowDelayedRender:p}=e,T=o.LineMaterialKey.load(a.materialKey),_=null!=y&&"hittest"===y.type;let d=r(T),f=i.PrimitiveType.TRIANGLES;_&&(d=this._getTriangleDesc(a.materialKey,d),f=i.PrimitiveType.POINTS);const{attributes:D,bufferLayouts:g}=d,E=s.materialManager.getMaterialProgram(e,T,"materials/line",D,n);if(p&&null!=m&&!E.compiled)return void m();const N=1/e.pixelRatio,S=0;l.useProgram(E),this._setSharedUniforms(E,e,t),T.textureBinding&&s.textureManager.bindTextures(l,E,T);const U=2**(c-t.key.level);E.setUniform1f("u_zoomFactor",U),E.setUniform1f("u_blur",S+N),E.setUniform1f("u_antialiasing",N),this._setSizeVVUniforms(T,E,u,t),this._setColorAndOpacityVVUniforms(T,E,u),l.setFaceCullingEnabled(!1);const G=a.target.getVAO(l,g,D,_);let h=a.indexCount,I=a.indexFrom*Uint32Array.BYTES_PER_ELEMENT;_&&(h/=3,I/=3),l.bindVAO(G),l.drawElements(f,h,i.DataType.UNSIGNED_INT,I)},e._createClass(n)}(n);return l}));
