/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","./FreeList","./Utils"],(function(e,t,r,i){"use strict";const n=["FILL","LINE","MARKER","TEXT","LABEL"];function o(e){const t=e.getStrides(),r={};for(let i=0;i<t.length;i++)r[n[i]]=t[i];return r}const s=.5;return function(){function t(e,t,n,o){this._strides=e,this._displayList=t,this._freeListsAndStorage={},this._dirtyMap=null,this._dirtyMap=n;for(const s in e){this._freeListsAndStorage[s]={vtxFreeList:o?new r.FreeList(o):null,idxFreeList:o?new r.FreeList(o):null,vertexBuffers:{},indexBuffer:o?new Uint32Array(o):null};for(const t in e[s])this._freeListsAndStorage[s].vertexBuffers[t]={data:o?i.allocateTypedArrayBuffer(o,e[s][t]):null,stride:e[s][t]}}}t.fromTileData=function(e,s){const d=o(e),a=[0,0,0,0,0],u=[0,0,0,0,0];for(const t of e.tileDisplayData.displayObjects)for(const e of t.displayRecords)a[e.geometryType]=Math.max(a[e.geometryType],e.vertexFrom+e.vertexCount),u[e.geometryType]=Math.max(u[e.geometryType],e.indexFrom+e.indexCount);const x=new t(d,e.tileDisplayData.displayList,s,void 0),f=e.tileBufferData?.geometries??[];for(let t=0;t<f.length;++t){const e=a[t],o=u[t],s=f[t],d=n[t],c=x._storageFor(d),l=f[t].indexBuffer;c.indexBuffer=l,c.idxFreeList=new r.FreeList(l.length),c.idxFreeList.allocate(o);let v=0;for(const r in s.vertexBuffer){const e=f[t].vertexBuffer[r];c.vertexBuffers[r].data=e.data,c.vertexBuffers[r].stride=e.stride;const n=i.strideToPackingFactor(e.stride),o=e.data.length*n/e.stride;v||(v=o)}c.vtxFreeList=new r.FreeList(v),c.vtxFreeList.allocate(e)}return x};var d=t.prototype;return d.delete=function(e){const t=n[e.geometryType];this._freeVertices(t,e.vertexFrom,e.vertexCount),this._freeIndices(t,e.indexFrom,e.indexCount),this._displayList.removeFromList(e),e.vertexFrom=void 0,e.indexFrom=void 0},d.setMeshData=function(e,t,r,o,s){const d=n[e.geometryType];let a,u;e.meshData=null,void 0===e.vertexFrom?(u=t.vertexCount,a=this._allocateVertices(d,u)):t.vertexCount>e.vertexCount?(this._freeVertices(d,e.vertexFrom,e.vertexCount),u=t.vertexCount,a=this._allocateVertices(d,u)):t.vertexCount===e.vertexCount?(a=e.vertexFrom,u=e.vertexCount):(this._freeVertices(d,e.vertexFrom+t.vertexCount,e.vertexCount-t.vertexCount),a=e.vertexFrom,u=t.vertexCount);let x,f,c,l=!0;if(void 0===e.indexFrom?(x=s,c=t.indexCount,f=this._allocateIndices(d,c)):t.indexCount>e.indexCount?(x=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom,e.indexCount),c=t.indexCount,f=this._allocateIndices(d,c)):t.indexCount===e.indexCount?(l=!1,f=e.indexFrom,c=e.indexCount):(x=this._displayList.removeFromList(e),this._freeIndices(d,e.indexFrom+t.indexCount,e.indexCount-t.indexCount),f=e.indexFrom,c=t.indexCount),-1!==a&&-1!==f){const n=this._storageFor(d);if(i.copyMeshData(a,f,n.vertexBuffers,n.indexBuffer,t,r,o),e.vertexFrom=a,e.indexFrom=f,e.vertexCount=t.vertexCount,e.indexCount=t.indexCount,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,e.vertexFrom,e.vertexCount)}return l&&this._displayList.addToList(e,x),!0}return-1!==a&&this._freeVertices(d,a,u),-1!==f&&this._freeIndices(d,f,c),e.setMeshDataFromBuffers(t,r,o),e.vertexFrom=void 0,e.vertexCount=0,e.indexFrom=void 0,e.indexCount=0,!1},d.tryAddMeshData=function(e,t){const r=t.vertexBuffer,o=t.indexBuffer,s=n[e.geometryType],d=this._allocateVertices(s,e.vertexCount);if(-1===d)return this._freeVertices(s,d,e.vertexCount),!1;const a=this._allocateIndices(s,e.indexCount);if(-1===a)return this._freeVertices(s,d,e.vertexCount),this._freeIndices(s,a,e.indexCount),!1;const u=this._storageFor(s);if(i.copyMeshData(d,a,u.vertexBuffers,u.indexBuffer,e,r,o),e.vertexFrom=d,e.indexFrom=a,this._dirtyMap){this._dirtyMap.markDirtyIndices(e.geometryType,e.indexFrom,e.indexCount);for(const t in r)this._dirtyMap.markDirtyVertices(e.geometryType,t,d,e.vertexCount)}return this._displayList.addToList(e),!0},d._allocateVertices=function(e,t){const r=this._storageFor(e),i=r.vtxFreeList?.allocate(t);if(null==i||-1===i)return-1;const n=r.vtxFreeList?.fragmentation;return null==n||n>s?-1:i},d._freeVertices=function(e,t,r){const i=this._storageFor(e);i.vtxFreeList?.free(t,r)},d._freeIndices=function(e,t,r){const i=this._storageFor(e);i.idxFreeList?.free(t,r)},d._allocateIndices=function(e,t){const r=this._storageFor(e),i=r.idxFreeList?.allocate(t);if(null==i||-1===i)return-1;const n=r.idxFreeList?.fragmentation;return null==n||n>s?-1:i},d._storageFor=function(e){return this._freeListsAndStorage[e]},d._stridesFor=function(e,t){return this._strides[e][t]},e._createClass(t)}()}));
