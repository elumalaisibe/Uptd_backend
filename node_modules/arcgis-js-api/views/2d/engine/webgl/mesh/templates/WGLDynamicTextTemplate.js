/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/screenUtils","../../../../../../symbols/cim/enums","../../../../../../symbols/cim/utils","../../alignmentUtils","../../color","../../definitions","../../number","../../materialKey/MaterialKey","./util","./WGLBaseTextTemplate","./WGLDynamicMeshTemplate","../../../../layers/features/textUtils"],(function(e,t,i,a,n,o,r,l,s,c,_,u,p){"use strict";const h=5;function m(e,t,i,a){return"string"==typeof e.text?e.text:"function"==typeof e.text?e.text(t,i,a)??"":""}return function(_){function u(e,n,c){var u;(u=_.call(this,e)||this)._horizontalAlignment="center",u._verticalAlignment="middle",u._textToGlyphs=new Map,u._minMaxZoom=l.i1616to32(Math.round(n*r.MIN_MAX_ZOOM_PRECISION_FACTOR),Math.round(c*r.MIN_MAX_ZOOM_PRECISION_FACTOR));const p=e.scaleFactor||1;u._cimTextLayer=e;const m=e.color;if(a.isFeatureValueFn(m)){const e=(e,t,i)=>o.premultiplyAlphaRGBA(m(e,t,i));u._dynamicPropertyMap.set("_color",e)}else u._color=o.premultiplyAlphaRGBA(m);const y=e.outlineColor;if(a.isFeatureValueFn(y)){const e=(e,t,i)=>o.premultiplyAlphaRGBA(y(e,t,i));u._dynamicPropertyMap.set("_haloColor",e)}else u._haloColor=o.premultiplyAlphaRGBA(y);let f;a.isFeatureValueFn(e.size)||(f=Math.min(Math.round(t.pt2px(e.size*e.sizeRatio)),127));const M=(i,n,o)=>a.isFeatureValueFn(e.size)?Math.min(Math.round(t.pt2px(e.size(i,n,o)*e.sizeRatio)),127):f;if(u._dynamicPropertyMap.set("_size",M),a.isFeatureValueFn(e.outlineSize)){const i=(i,a,n)=>Math.min(Math.floor(h*t.pt2px(e.outlineSize(i,a,n)*e.sizeRatio)),127);u._dynamicPropertyMap.set("_haloSize",i)}else u._haloSize=Math.min(Math.floor(h*t.pt2px(e.outlineSize*e.sizeRatio)),127);let d;a.isFeatureValueFn(e.offsetX)||(d=Math.round(t.pt2px(e.offsetX*e.sizeRatio)));const g=(i,n,o)=>a.isFeatureValueFn(e.offsetX)?Math.round(t.pt2px(e.offsetX(i,n,o)*e.sizeRatio)):d;let F;u._dynamicPropertyMap.set("_xOffset",g),a.isFeatureValueFn(e.offsetY)||(F=Math.round(t.pt2px(e.offsetY*e.sizeRatio)));const x=(i,n,o)=>a.isFeatureValueFn(e.offsetY)?Math.round(t.pt2px(e.offsetY(i,n,o)*e.sizeRatio)):F;if(u._dynamicPropertyMap.set("_yOffset",x),a.isFeatureValueFn(e.angle)?u._dynamicPropertyMap.set("_angle",e.angle):u._angle=e.angle,a.isFeatureValueFn(e.horizontalAlignment)?u._dynamicPropertyMap.set("_horizontalAlignment",e.horizontalAlignment):u._horizontalAlignment=e.horizontalAlignment,a.isFeatureValueFn(e.verticalAlignment)?u._dynamicPropertyMap.set("_verticalAlignment",e.verticalAlignment):u._verticalAlignment=e.verticalAlignment,null!=e.effects){const t=e.effects;a.isFeatureValueFn(t)?u._dynamicPropertyMap.set("_effects",t):u._effects=t}if(null!=e.markerPlacement){const t=e.markerPlacement;a.isFeatureValueFn(t)?u._dynamicPropertyMap.set("_markerPlacement",t):u._textPlacement=t}a.isFeatureValueFn(e.text)?u._dynamicPropertyMap.set("_text",e.text):u._text=e.text,u._backgroundColor=e.backgroundColor&&o.premultiplyAlphaRGBA(e.backgroundColor),u._borderLineColor=e.borderLineColor&&o.premultiplyAlphaRGBA(e.borderLineColor),u._borderLineSize=e.borderLineWidth,u._scaleFactor=p;const A=Math.min(Math.round(t.pt2px(e.referenceSize*e.sizeRatio)),127);u._referenceSize=Math.round(Math.sqrt(256*A)),u._materialKey=e.materialKey;const z=s.TextMaterialKey.load(u._materialKey);return z.sdf=!0,u._bitset=(e.alignment===i.Alignment.MAP?1:0)|(e.colorLocked?1:0)<<1,u._materialKey=z.data,u._decoration="none",u._lineHeight=1,u._lineWidth=512,u._isCIM=!0,u}e._inherits(u,_),u.fromCIMText=function(e,t){const[i,a]=c.getMinMaxZoom(e.scaleInfo,t);return new u(e,i,a)};var y=u.prototype;return y.analyze=async function(t,i,a,n){const o=i.readLegacyFeature(),r=m(this._cimTextLayer,o,a,n),l=await e._get(e._getPrototypeOf(u.prototype),"analyze",this).call(this,t,i,a,n,p.codepoints(r));return l&&l.glyphMosaicItems&&this._textToGlyphs.set(r,l.glyphMosaicItems),l},y.bindFeature=function(e,t,i){const a=e.readLegacyFeature();if(this._dynamicPropertyMap.forEach(((e,n)=>{this[n]=e(a,t,i)})),!this._text||0===this._text.length)return void(this._shapingInfo=null);this._size*=this._scaleFactor,this._scale=this._size/r.GLYPH_SIZE,this._xOffset*=this._scaleFactor,this._yOffset*=this._scaleFactor,this._xAlignD=n.getXAnchorDirection(this._horizontalAlignment??"center"),this._yAlignD=n.getYAnchorDirection(this._verticalAlignment??"baseline");const o=this._textToGlyphs.get(this._text)??[];this.bindTextInfo(o,!1)},e._createClass(u)}(_(u))}));
