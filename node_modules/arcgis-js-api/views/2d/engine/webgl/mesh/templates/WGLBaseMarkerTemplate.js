/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../../../chunks/_rollupPluginBabelHelpers","../../../../../../core/screenUtils","../../../../../../chunks/mat2d","../../../../../../chunks/mat2df32","../../../../../../chunks/vec2","../../../../../../chunks/vec2f32","../../../../../../geometry/GeometryCursor","../../../../../../symbols/cim/placements/CIMMarkerPlacementHelper","../../definitions","../../enums","../../number","../../materialKey/MaterialKey"],(function(t,e,i,r,s,o,n,h,a,f,_,l){"use strict";const x=3.14159265359/180,c=8;return m=>function(m){function d(...t){var e;return(e=m.call(this,...t)||this).angle=0,e.xOffset=0,e.yOffset=0,e.width=0,e.height=0,e.boundsType="square",e._anchorX=0,e._anchorY=0,e._computedWidth=0,e._computedHeight=0,e._allowBorrowing=!0,e._vertexBoundsScaleX=1,e._vertexBoundsScaleY=1,e.geometryType=f.WGLGeometryType.MARKER,e}t._inherits(d,m);var u=d.prototype;return u._write=function(t,e,i,r){const s=e.getDisplayId();t.recordStart(s,this._materialKey,this.geometryType,!0),this._writeGeometry(t,e,s,i,r),t.recordEnd()},u._writeGeometry=function(t,e,i,r,s){if(null!=this._markerPlacement)return this._writePlacedMarkers(t,e,r,s);if(this._allowBorrowing=!0,!s&&"esriGeometryPoint"===e.geometryType){const r=e.getX(),s=e.getY();if(!t.hasAggregates&&t.hasPixelBufferEnabled&&(r<0||r>=513||s<0||s>=513))return;return this._writeVertices(t,i,this._getPos(r,s),r,s)}const o=s?s.asOptimized():"esriGeometryPolygon"===e.geometryType?e.readCentroid():e.readGeometryForDisplay();if(null!=o){if(o.isPoint){const[e,r]=o.coords;if(!t.hasAggregates&&t.hasPixelBufferEnabled&&(e<0||e>=512||r<0||r>=512))return;return this._writeVertices(t,i,this._getPos(e,r),e,r)}o.forEachVertex(((e,r)=>{const s=2*a.TILE_SIZE;e<-s||e>=s||r<-s||r>=s||this._writeVertices(t,i,this._getPos(e,r),e,r)}))}},u._writePlacedMarkers=function(t,i,s,a){const f=a||n.GeometryCursor.fromFeatureSetReaderCIM(i);if(!f)return;const _=-1,l=h.CIMMarkerPlacementHelper.getPlacement(f,_,this._markerPlacement,e.pt2px(1),t.tileKey,s.geometryEngine);if(!l)return;this._allowBorrowing="esriGeometryPolygon"!==i.geometryType;const c=i.getDisplayId(),m=o.create(),d=r.create(),u=-128,v=640;let W=l.next();for(;null!=W;){const e=W.tx,i=-W.ty;e>=u&&e<=v&&i>=u&&i<=v&&(this._applyTransformation(d,m,-W.getAngle()/x),this._writeVertices(t,c,this._getPos(e,i),e,i)),W=l.next()}},u._writeVertices=function(t,e,i,r,s){const o=l.MarkerMaterialKey.load(this._materialKey);return o.symbologyType===f.WGLSymbologyType.HEATMAP?this._writeHeatmapVertices(t,e,i):this._writeMarkerVertices(t,e,o,i,r,s)},u._writeMarkerVertices=function(t,e,i,r,s,o){const n=i.vvRotation,h=t.vertexCount();let a=this._computedWidth*this._vertexBoundsScaleX,f=this._computedHeight*this._vertexBoundsScaleY;if(this.angle){const t=Math.max(a,f);a=t,f=t}if(n){const t=Math.max(this.xOffset,this.yOffset);a+=t,f+=t}this._allowBorrowing&&t.vertexBounds(s+this.xOffset,o-this.yOffset,a,f),t.vertexWrite(r),t.vertexWrite(this._offsetUpperLeft),t.vertexWrite(this._texUpperLeft),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),t.vertexWrite(r),t.vertexWrite(this._offsetUpperRight),t.vertexWrite(this._texUpperRight),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),t.vertexWrite(r),t.vertexWrite(this._offsetBottomLeft),t.vertexWrite(this._texBottomLeft),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),t.vertexWrite(r),t.vertexWrite(this._offsetBottomRight),t.vertexWrite(this._texBottomRight),t.vertexWrite(this._bitestAndDistRatio),t.vertexWrite(e),t.vertexWrite(this._fillColor),t.vertexWrite(this._outlineColor),t.vertexWrite(this._sizeOutlineWidth),t.vertexWrite(this._minMaxZoom),t.vertexEnd(),this._writeIndices(t,h)},u._writeHeatmapVertices=function(t,e,i){const r=t.vertexCount();t.vertexWrite(i),t.vertexWrite(this._offsetUpperLeft),t.vertexWrite(e),t.vertexEnd(),t.vertexWrite(i),t.vertexWrite(this._offsetUpperRight),t.vertexWrite(e),t.vertexEnd(),t.vertexWrite(i),t.vertexWrite(this._offsetBottomLeft),t.vertexWrite(e),t.vertexEnd(),t.vertexWrite(i),t.vertexWrite(this._offsetBottomRight),t.vertexWrite(e),t.vertexEnd(),this._writeIndices(t,r)},u._writeIndices=function(t,e){t.indexWrite(e+0),t.indexWrite(e+1),t.indexWrite(e+2),t.indexWrite(e+1),t.indexWrite(e+3),t.indexWrite(e+2)},u._applyTransformation=function(t,e,r=0){r?i.fromRotation(t,x*r):i.identity(t),i.translate(t,t,o.fromValues(this.xOffset,-this.yOffset)),this.angle&&i.rotate(t,t,x*this.angle);const n=this._computedWidth,h=this._computedHeight,a=-(.5+this._anchorX)*n,f=-(.5-this._anchorY)*h;s.set(e,a,f),s.transformMat2d(e,e,t),this._offsetUpperLeft=_.i1616to32(16*e[0],16*e[1]),s.set(e,a+n,f),s.transformMat2d(e,e,t),this._offsetUpperRight=_.i1616to32(16*e[0],16*e[1]),s.set(e,a,f+h),s.transformMat2d(e,e,t),this._offsetBottomLeft=_.i1616to32(16*e[0],16*e[1]),s.set(e,a+n,f+h),s.transformMat2d(e,e,t),this._offsetBottomRight=_.i1616to32(16*e[0],16*e[1])},u._computeSize=function(t,e,i,r,s,o,n,h){const f=t*i,l=e*i;if(!!o.sdf&&!n){const i=h&&t>e?f:t,s=e,o=r+2*1;t=Math.min(i+o,f),e=Math.min(s+o,l)}else t=f,e=l;const x=a.SDF_TEXTURE_SIZE/Math.max(f,l),c=.5*(f-t)*x,m=.5*(l-e)*x,d=o.rect.x+a.SPRITE_PADDING+c,u=o.rect.y+a.SPRITE_PADDING+m,v=d+o.width-2*c,W=u+o.height-2*m,p=Math.floor(d),g=Math.floor(u),y=Math.ceil(v),M=Math.ceil(W);t*=(y-p)/(v-d),e*=(M-g)/(W-u),this._texUpperLeft=_.i1616to32(p,g),this._texUpperRight=_.i1616to32(y,g),this._texBottomLeft=_.i1616to32(p,M),this._texBottomRight=_.i1616to32(y,M),this._anchorX*=f/t,this._anchorY*=l/e,t*=s,e*=s,this._computedWidth=t,this._computedHeight=e},u._getPos=function(t,e){return _.i1616to32(Math.round(c*t),Math.round(c*e))},t._createClass(d)}(m)}));
