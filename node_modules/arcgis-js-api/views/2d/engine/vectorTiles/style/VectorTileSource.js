/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/lang","../../../../../core/urlUtils","../../../../../geometry/Extent","../../../../../layers/support/TileInfo","../../../../../layers/support/TilemapCache","../TilemapIndex","../TilemapRequest","./VectorTilesRequestManager"],(function(e,t,i,l,s,n,r,o,a){"use strict";return function(){function u(e,a,u){this.tilemap=null,this.tileInfo=null,this.capabilities=null,this.fullExtent=null,this.name=e,this.sourceUrl=a;const p=i.urlToObject(this.sourceUrl),h=t.clone(u),c=h.tiles;if(p)for(let t=0;t<c.length;t++){const e=i.urlToObject(c[t]);e&&(i.isAbsolute(e.path)||(e.path=i.join(p.path,e.path)),c[t]=i.addQueryParameters(e.path,{...p.query,...e.query}))}this.tileServers=c;const f=u.capabilities&&u.capabilities.split(",").map((e=>e.toLowerCase().trim())),m=!0===u?.exportTilesAllowed,d=!0===f?.includes("tilemap"),y=m&&u.hasOwnProperty("maxExportTilesCount")?u.maxExportTilesCount:0;this.capabilities={operations:{supportsExportTiles:m,supportsTileMap:d},exportTiles:m?{maxExportTilesCount:+y}:null},this.tileInfo=s.fromJSON(h.tileInfo);const x=u.tileMap?i.addQueryParameters(i.join(p.path,u.tileMap),p.query??{}):null;d?(this.type="vector-tile",this.tilemap=new o(new n.TilemapCache({layer:{parsedUrl:p,tileInfo:this.tileInfo},minLOD:h.minLOD??this.tileInfo.lods[0].level,maxLOD:h.maxLOD??this.tileInfo.lods[this.tileInfo.lods.length-1].level}),x)):x&&(this.tilemap=new r(x)),this.fullExtent=l.fromJSON(u.fullExtent)}var p=u.prototype;return p.destroy=function(){this.tilemap?.destroy()},p.getRefKey=async function(e,t){return await(this.tilemap?.dataKey(e,t))??e},p.requestTile=function(e,t,i,l){const s=this.tileServers[t%this.tileServers.length];return a.request(s,e,t,i,l)},p.isCompatibleWith=function(e){const t=this.tileInfo,i=e.tileInfo;if(!t.spatialReference.equals(i.spatialReference))return!1;if(!t.origin.equals(i.origin))return!1;if(Math.round(t.dpi)!==Math.round(i.dpi))return!1;const l=t.lods,s=i.lods,n=Math.min(l.length,s.length);for(let r=0;r<n;r++){const e=l[r],t=s[r];if(e.level!==t.level||Math.round(e.scale)!==Math.round(t.scale))return!1}return!0},e._createClass(u)}()}));
