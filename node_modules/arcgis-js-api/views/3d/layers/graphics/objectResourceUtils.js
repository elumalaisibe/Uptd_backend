/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../core/devEnvironmentUtils","../../../../chunks/mat3","../../../../chunks/mat3f64","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/aaBoundingBox","../../../../geometry/support/FloatArray","../../../../geometry/support/buffer/BufferView","../../../../chunks/vec32","../../../../chunks/vec42","../../../../chunks/vec22","../../../../chunks/vec33","../../../../chunks/vec43","../../glTF/DefaultLoadingContext","../../glTF/loader","../../glTF/internal/indexUtils","../../glTF/internal/resourceUtils","../../glTF/internal/TextureTransformUtils","./ProcessedObjectResource","./wosrLoader","../../webgl-engine/core/shaderLibrary/attributes/NormalAttribute.glsl","../../webgl-engine/lib/Attribute","../../webgl-engine/lib/basicInterfaces","../../webgl-engine/lib/Geometry","../../webgl-engine/lib/Texture","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/DefaultMaterial","../../webgl-engine/materials/DefaultMaterial_COLOR_GAMMA","../../webgl-engine/materials/pbrUtils"],(function(e,t,r,o,s,i,n,a,u,l,c,d,f,m,g,x,b,p,h,M,T,A,R,y,w,v,B,O,F,V,L,S){"use strict";async function C(e,r){const o=E(t.adjustStaticAGOUrl(e));if("wosr"===o.fileType){const e=await(r.cache?r.cache.loadWOSR(o.url,r):R.load(o.url,r)),{engineResources:t,referenceBoundingBox:s}=R.processLoadResult(e,r);return{lods:t,referenceBoundingBox:s,isEsriSymbolResource:!1,isWosr:!0}}const s=await(r.cache?r.cache.loadGLTF(o.url,r,!!r.usePBR):p.loadGLTF(new b.DefaultLoadingContext(r.streamDataRequester),o.url,r,r.usePBR)),i=s.model.meta?.ESRI_proxyEllipsoid,n=s.meta.isEsriSymbolResource&&null!=i&&s.meta.uri.includes("/RealisticTrees/");n&&!s.customMeta.esriTreeRendering&&(s.customMeta.esriTreeRendering=!0,G(s,i));const a=!!r.usePBR,u=s.meta.isEsriSymbolResource?{usePBR:a,isSchematic:!1,treeRendering:n,mrrFactors:[...S.defaultEsriSymbologyMRRFactors]}:{usePBR:a,isSchematic:!1,treeRendering:!1,mrrFactors:[...S.defaultAdvancedMRRFactors]},l={...r.materialParamsMixin,treeRendering:n},{engineResources:c,referenceBoundingBox:d}=I(s,u,l,r.skipHighLods&&null==o.specifiedLodIndex?{skipHighLods:!0}:{skipHighLods:!1,singleLodIndex:o.specifiedLodIndex});return{lods:c,referenceBoundingBox:d,isEsriSymbolResource:s.meta.isEsriSymbolResource,isWosr:!1}}function E(e){const t=e.match(/(.*\.(gltf|glb))(\?lod=([0-9]+))?$/);if(t)return{fileType:"gltf",url:t[1],specifiedLodIndex:null!=t[4]?Number(t[4]):null};return e.match(/(.*\.(json|json\.gz))$/)?{fileType:"wosr",url:e,specifiedLodIndex:null}:{fileType:"unknown",url:e,specifiedLodIndex:null}}function I(e,t,r,o){const s=e.model,i=new Array,n=new Map,a=new Map,l=s.lods.length,c=u.empty();return s.lods.forEach(((e,d)=>{const f=!0===o.skipHighLods&&(l>1&&0===d||l>3&&1===d)||!1===o.skipHighLods&&null!=o.singleLodIndex&&d!==o.singleLodIndex;if(f&&0!==d)return;const m=new A.ProcessedObjectResource(e.name,e.lodThreshold,[0,0,0]);e.parts.forEach((e=>{const o=f?new V.DefaultMaterial({}):k(s,e,m,t,r,n,a),{geometry:i,vertexCount:l}=N(e,null!=o?o:new V.DefaultMaterial({})),g=i.boundingInfo;null!=g&&0===d&&(u.expandWithVec3(c,g.bbMin),u.expandWithVec3(c,g.bbMax)),null!=o&&(m.stageResources.geometries.push(i),m.numberOfVertices+=l)})),f||i.push(m)})),{engineResources:i,referenceBoundingBox:c}}function k(e,t,r,o,s,i,n){const a=t.material+(t.attributes.normal?"_normal":"")+(t.attributes.color?"_color":"")+(t.attributes.texCoord0?"_texCoord0":"")+(t.attributes.tangent?"_tangent":""),u=e.materials.get(t.material),l=null!=t.attributes.texCoord0,c=null!=t.attributes.normal;if(null==u)return null;const d=P(u.alphaMode);if(!i.has(a)){if(l){const t=(t,r=!1)=>{if(null!=t&&!n.has(t)){const o=e.textures.get(t);if(null!=o){const e=o.data;n.set(t,new O.Texture(M.isEncodedMeshTexture(e)?e.data:e,{...o.parameters,preMultiplyAlpha:!M.isEncodedMeshTexture(e)&&r,encoding:M.isEncodedMeshTexture(e)&&null!=e.encoding?e.encoding:void 0}))}}};t(u.textureColor,d!==v.AlphaDiscardMode.Opaque),t(u.textureNormal),t(u.textureOcclusion),t(u.textureEmissive),t(u.textureMetallicRoughness)}const r=u.color[0]**(1/L.COLOR_GAMMA),f=u.color[1]**(1/L.COLOR_GAMMA),m=u.color[2]**(1/L.COLOR_GAMMA),g=u.emissiveFactor[0]**(1/L.COLOR_GAMMA),x=u.emissiveFactor[1]**(1/L.COLOR_GAMMA),b=u.emissiveFactor[2]**(1/L.COLOR_GAMMA),p=null!=u.textureColor&&l?n.get(u.textureColor):null,h=S.useSchematicPBR({normalTexture:u.textureNormal,metallicRoughnessTexture:u.textureMetallicRoughness,metallicFactor:u.metallicFactor,roughnessFactor:u.roughnessFactor,emissiveTexture:u.textureEmissive,emissiveFactor:u.emissiveFactor,occlusionTexture:u.textureOcclusion});i.set(a,new V.DefaultMaterial({...o,transparent:d===v.AlphaDiscardMode.Blend,customDepthTest:v.DepthTestFunction.Lequal,textureAlphaMode:d,textureAlphaCutoff:u.alphaCutoff,diffuse:[r,f,m],ambient:[r,f,m],opacity:u.opacity,doubleSided:u.doubleSided,doubleSidedType:"winding-order",cullFace:u.doubleSided?v.CullFaceOptions.None:v.CullFaceOptions.Back,hasVertexColors:!!t.attributes.color,hasVertexTangents:!!t.attributes.tangent,normalType:c?y.NormalType.Attribute:y.NormalType.ScreenDerivative,castShadows:!0,receiveSSAO:!0,textureId:null!=p?p.id:void 0,colorMixMode:u.colorMixMode,normalTextureId:null!=u.textureNormal&&l?n.get(u.textureNormal).id:void 0,textureAlphaPremultiplied:null!=p&&!!p.parameters.preMultiplyAlpha,occlusionTextureId:null!=u.textureOcclusion&&l?n.get(u.textureOcclusion).id:void 0,emissiveTextureId:null!=u.textureEmissive&&l?n.get(u.textureEmissive).id:void 0,metallicRoughnessTextureId:null!=u.textureMetallicRoughness&&l?n.get(u.textureMetallicRoughness).id:void 0,emissiveFactor:[g,x,b],mrrFactors:h?[...S.defaultSchematicMRRFactors]:[u.metallicFactor,u.roughnessFactor,o.mrrFactors[2]],isSchematic:h,colorTextureTransformMatrix:T.getTransformMatrix(u.colorTextureTransform),normalTextureTransformMatrix:T.getTransformMatrix(u.normalTextureTransform),occlusionTextureTransformMatrix:T.getTransformMatrix(u.occlusionTextureTransform),emissiveTextureTransformMatrix:T.getTransformMatrix(u.emissiveTextureTransform),metallicRoughnessTextureTransformMatrix:T.getTransformMatrix(u.metallicRoughnessTextureTransform),...s}))}const f=i.get(a);if(r.stageResources.materials.push(f),l){const e=e=>{null!=e&&r.stageResources.textures.push(n.get(e))};e(u.textureColor),e(u.textureNormal),e(u.textureOcclusion),e(u.textureEmissive),e(u.textureMetallicRoughness)}return f}function N(e,t){const o=e.attributes.position.count,s=h.convertPrimitiveToTriangles(e.indices||o,e.primitiveType),i=l.newFloatArray(3*o),{typedBuffer:n,typedBufferStride:a}=e.attributes.position;d.transformMat4(i,n,e.transform,3,a);const u=[[F.VertexAttribute.POSITION,new w.Attribute(i,3,!0)]],b=[[F.VertexAttribute.POSITION,s]];if(null!=e.attributes.normal){const t=l.newFloatArray(3*o),{typedBuffer:i,typedBufferStride:n}=e.attributes.normal;r.normalFromMat4(D,e.transform),d.transformMat3(t,i,D,3,n),u.push([F.VertexAttribute.NORMAL,new w.Attribute(t,3,!0)]),b.push([F.VertexAttribute.NORMAL,s])}if(null!=e.attributes.tangent){const t=l.newFloatArray(4*o),{typedBuffer:i,typedBufferStride:n}=e.attributes.tangent;r.normalFromMat4(D,e.transform),f.transformMat3(t,i,D,4,n),u.push([F.VertexAttribute.TANGENT,new w.Attribute(t,4,!0)]),b.push([F.VertexAttribute.TANGENT,s])}if(null!=e.attributes.texCoord0){const t=l.newFloatArray(2*o),{typedBuffer:r,typedBufferStride:i}=e.attributes.texCoord0;m.normalizeIntegerBuffer(t,r,2,i),u.push([F.VertexAttribute.UV0,new w.Attribute(t,2,!0)]),b.push([F.VertexAttribute.UV0,s])}if(null!=e.attributes.color){const t=new Uint8Array(4*o);4===e.attributes.color.elementCount?e.attributes.color instanceof c.BufferViewVec4f?f.scale(t,e.attributes.color,255):e.attributes.color instanceof c.BufferViewVec4u8?x.copy(t,e.attributes.color):e.attributes.color instanceof c.BufferViewVec4u16&&f.scale(t,e.attributes.color,1/256):(t.fill(255),e.attributes.color instanceof c.BufferViewVec3f?d.scale(t,e.attributes.color,255,4):e.attributes.color instanceof c.BufferViewVec3u8?g.copy(t,e.attributes.color.typedBuffer,4,e.attributes.color.typedBufferStride):e.attributes.color instanceof c.BufferViewVec3u16&&d.scale(t,e.attributes.color,1/256,4)),u.push([F.VertexAttribute.COLOR,new w.Attribute(t,4,!0)]),b.push([F.VertexAttribute.COLOR,s])}return{geometry:new B.Geometry(t,u,b),vertexCount:o}}const D=o.create();function P(e){switch(e){case"BLEND":return v.AlphaDiscardMode.Blend;case"MASK":return v.AlphaDiscardMode.Mask;case"OPAQUE":case null:case void 0:return v.AlphaDiscardMode.Opaque}}function G(e,t){for(let r=0;r<e.model.lods.length;++r){const o=e.model.lods[r];for(const u of o.parts){const o=u.attributes.normal;if(null==o)return;const l=u.attributes.position,d=l.count,f=a.create(),m=a.create(),g=a.create(),x=new Uint8Array(4*d),b=new Float64Array(3*d),p=s.invert(i.create(),u.transform);let h=0,M=0;for(let s=0;s<d;s++){l.getVec(s,m),o.getVec(s,f),n.transformMat4(m,m,u.transform),n.subtract(g,m,t.center),n.divide(g,g,t.radius);const i=g[2],a=n.length(g),c=Math.min(.45+.55*a*a,1);n.divide(g,g,t.radius),null!==p&&n.transformMat4(g,g,p),n.normalize(g,g),r+1!==e.model.lods.length&&e.model.lods.length>1&&(i>-1?n.lerp(g,g,f,.2):n.lerp(g,g,f,Math.min(-4*i-3.8,1))),b[h]=g[0],b[h+1]=g[1],b[h+2]=g[2],h+=3,x[M]=255*c,x[M+1]=255*c,x[M+2]=255*c,x[M+3]=255,M+=4}u.attributes.normal=new c.BufferViewVec3f(b),u.attributes.color=new c.BufferViewVec4u8(x)}}}e.fetch=C,e.gltfToEngineResources=I,e.parseUrl=E,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
