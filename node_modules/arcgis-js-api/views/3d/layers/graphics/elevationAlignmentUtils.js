/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/mat4","../../../../chunks/mat4f64","../../../../chunks/vec3f64","../../../../geometry/projection","../../../../layers/graphics/dehydratedFeatureUtils","./graphicUtils","../../support/ElevationProvider"],(function(e,t,n,o,r,i,a,l,s){"use strict";function u(e,t,n,o,r,a,l,s,u,c,f){const d=R[f.mode];let p,v,g=0;if(i.projectBuffer(e,t,n,o,u.spatialReference,r,s))return d.requiresAlignment(f)?(g=d.applyElevationAlignmentBuffer(o,r,a,l,s,u,c,f),p=a,v=l):(p=o,v=r),i.projectBuffer(p,u.spatialReference,v,a,c.spatialReference,l,s)?g:void 0}function c(e,t,n,o,r){const i=(a.isDehydratedPoint(e)?e.z:s.isSamplePosition(e)?e.array[e.offset+2]:e[2])||0;switch(n.mode){case"on-the-ground":{const n=s.getElevationAtPoint(t,e,"ground")??0;return r.verticalDistanceToGround=0,r.sampledElevation=n,void(r.z=n)}case"relative-to-ground":{const a=s.getElevationAtPoint(t,e,"ground")??0,l=n.geometryZWithOffset(i,o);return r.verticalDistanceToGround=l,r.sampledElevation=a,void(r.z=l+a)}case"relative-to-scene":{const a=s.getElevationAtPoint(t,e,"scene")??0,l=n.geometryZWithOffset(i,o);return r.verticalDistanceToGround=l,r.sampledElevation=a,void(r.z=l+a)}case"absolute-height":{const a=n.geometryZWithOffset(i,o),l=s.getElevationAtPoint(t,e,"ground")??0;return r.verticalDistanceToGround=a-l,r.sampledElevation=l,void(r.z=a)}default:return void(r.z=0)}}function f(e,t,n,o){return c(e,t,n,o,b),b.z}function d(t,n,o){return null==n||null==o?t.definedChanged:"on-the-ground"===n&&"on-the-ground"===o?t.staysOnTheGround:n===o||"on-the-ground"!==n&&"on-the-ground"!==o?e.SymbolUpdateType.UPDATE:t.onTheGroundChanged}function p(e){return"relative-to-ground"===e||"relative-to-scene"===e}function v(e){return"absolute-height"!==e}function g(e,t,o,r,a){c(t,o,a,r,b),l.updateVertexAttributeAuxpos1w(e,b.verticalDistanceToGround);const s=b.sampledElevation,u=n.copy(P,e.transformation);x[0]=t.x,x[1]=t.y,x[2]=b.z;return i.computeTranslationToOriginAndRotation(t.spatialReference,x,u,r.spatialReference)?e.transformation=u:console.warn("Could not locate symbol object properly, it might be misplaced"),s}function m(e,t,n,o,r,i){let a=0;const l=i.spatialReference;t*=3,o*=3;for(let s=0;s<r;++s){const r=e[t],s=e[t+1],u=e[t+2],c=i.getElevation(r,s,u,l,"ground")??0;a+=c,n[o]=r,n[o+1]=s,n[o+2]=c,t+=3,o+=3}return a/r}function E(e,t,n,o,r,i,a,l){let s=0;const u=l.calculateOffsetRenderUnits(a),c=l.featureExpressionInfoContext,f=i.spatialReference;t*=3,o*=3;for(let d=0;d<r;++d){const r=e[t],a=e[t+1],l=e[t+2],d=i.getElevation(r,a,l,f,"ground")??0;s+=d,n[o]=r,n[o+1]=a,n[o+2]=null==c?l+d+u:d+u,t+=3,o+=3}return s/r}function h(e,t,n,o,r,i,a,l){let s=0;const u=l.calculateOffsetRenderUnits(a),c=l.featureExpressionInfoContext,f=i.spatialReference;t*=3,o*=3;for(let d=0;d<r;++d){const r=e[t],a=e[t+1],l=e[t+2],d=i.getElevation(r,a,l,f,"scene")??0;s+=d,n[o]=r,n[o+1]=a,n[o+2]=null==c?l+d+u:d+u,t+=3,o+=3}return s/r}function y(e){const t=e.meterUnitOffset,n=e.featureExpressionInfoContext;return 0!==t||null!=n}function A(e,t,n,o,r,i,a,l){const s=l.calculateOffsetRenderUnits(a),u=l.featureExpressionInfoContext;t*=3,o*=3;for(let c=0;c<r;++c){const r=e[t],i=e[t+1],a=e[t+2];n[o]=r,n[o+1]=i,n[o+2]=null==u?a+s:s,t+=3,o+=3}return 0}let T=t._createClass((function(){this.verticalDistanceToGround=0,this.sampledElevation=0,this.z=0}));var U;e.SymbolUpdateType=void 0,(U=e.SymbolUpdateType||(e.SymbolUpdateType={}))[U.NONE=0]="NONE",U[U.UPDATE=1]="UPDATE",U[U.RECREATE=2]="RECREATE";const R={"absolute-height":{applyElevationAlignmentBuffer:A,requiresAlignment:y},"on-the-ground":{applyElevationAlignmentBuffer:m,requiresAlignment:()=>!0},"relative-to-ground":{applyElevationAlignmentBuffer:E,requiresAlignment:()=>!0},"relative-to-scene":{applyElevationAlignmentBuffer:h,requiresAlignment:()=>!0}},P=o.create(),b=new T,x=r.create();e.SampleElevationInfo=T,e.applyElevationAlignmentForHUD=g,e.applyPerVertexElevationAlignment=u,e.elevationModeChangeUpdateType=d,e.evaluateElevationAlignmentAtPoint=f,e.evaluateElevationInfoAtPoint=c,e.needsElevationUpdates2D=p,e.needsElevationUpdates3D=v,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
