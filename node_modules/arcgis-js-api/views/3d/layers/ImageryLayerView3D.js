/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/promiseUtils","../../../core/reactiveUtils","../../../core/Logger","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/Error","../../../core/accessorSupport/decorators/subclass","./DynamicLayerView3D","../../layers/ImageryLayerView"],(function(e,a,t,i,r,s,n,o,l,d,c,h){"use strict";let u=function(a){function r(){var e;return(e=a.apply(this,arguments)||this).type="imagery-3d",e.redrawDebounced=t.debounce((async a=>{e.redraw(((a,t)=>e._redrawImage(a,t)),a)}),2e3),e}e._inherits(r,a);var s=r.prototype;return s.initialize=function(){this.handles.add([i.when((()=>this.view.basemapTerrain.ready),(()=>this._initializeMaximumDataResolution()),{once:!0,initial:!0}),this.layer.on("redraw",(()=>this.updatingHandles.addPromise(this.redrawDebounced())))]),this.updatingHandles.add((()=>this.layer?.exportImageServiceParameters?.version),(()=>{this.updatingHandles.addPromise(this.refreshDebounced())})),this.updatingHandles.add((()=>this.layer?.renderer),(()=>{this.updatingHandles.addPromise(this.refreshDebounced())})),this.updatingHandles.add((()=>this.timeExtent),(()=>this.updatingHandles.addPromise(this.refreshDebounced())))},s._initializeMaximumDataResolution=function(){this.maximumDataResolution=this.layer.loaded?this.layer.serviceRasterInfo.pixelSize:null},s.getFetchOptions=function(){return{timeExtent:this.timeExtent}},s.processResult=async function(e,a,t){a.imageOrCanvasElement?e.image=a.imageOrCanvasElement:(e.image=document.createElement("canvas"),e.pixelData=a.pixelData,await this._redrawImage(e,t))},s._redrawImage=async function(e,a){if(!(e.image instanceof HTMLCanvasElement)||null==e.pixelData)throw new Error;const t=e.image,i=t.getContext("2d"),r=await this.layer.applyRenderer(e.pixelData,{signal:a}),s=this.layer.applyFilter(r).pixelBlock;if(null==s)throw new Error;t.width=s.width,t.height=s.height;const n=i.createImageData(s.width,s.height);n.data.set(s.getAsRGBA()),i.putImageData(n,0,0)},e._createClass(r)}(h(c));u=a.__decorate([d.subclass("esri.views.3d.layers.ImageryLayerView3D")],u);return u}));
