/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../chunks/_rollupPluginBabelHelpers","../../../chunks/tslib.es6","../../../core/Collection","../../../core/Logger","../../../core/reactiveUtils","../../../core/accessorSupport/decorators/property","../../../core/accessorSupport/ensureType","../../../core/arrayUtils","../../../core/has","../../../core/accessorSupport/decorators/subclass","../../../layers/support/layerUtils","./LayerView3D","./TiledLayerView3D","../../layers/LayerView","../../layers/RefreshableLayerView"],(function(e,t,i,r,o,s,l,n,a,c,h,u,d,p,y){"use strict";let f=function(t){function s(){var e;return(e=t.apply(this,arguments)||this).type="wmts-3d",e}e._inherits(s,t);var l=s.prototype;return l.initialize=function(){this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoSupportError(e.tileInfo,e.fullExtent)));const e=o.whenOnce((()=>this.view?.basemapTerrain?.tilingSchemeLocked)).then((()=>{const e=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoError(e.tileInfo,e.fullExtent)));null!=e&&(null!==e.id&&this.layer.activeLayer.tileMatrixSetId!==e.id&&(this.layer.activeLayer.tileMatrixSetId=e.id),e.tileInfo&&(this.tileInfo=e.tileInfo),this.layer.fullExtent=e.fullExtent)}));this.addResolvingPromise(e),this.when((()=>this._postInitialize()))},l.refresh=function(){this.emit("data-changed")},l.canResume=function(){if(!e._get(e._getPrototypeOf(s.prototype),"canResume",this).call(this))return!1;const t=this.layer.activeLayer.tileMatrixSet;return null!=t&&!this._getTileInfoError(t.tileInfo,t.fullExtent)},l.doRefresh=async function(){this.suspended||this.emit("data-changed")},l._postInitialize=function(){this.updatingHandles.add((()=>this.layer?.activeLayer?.styleId),(()=>this.refresh())),this.updatingHandles.add((()=>this.layer?.activeLayer),(e=>{const t=this._getCompatibleTileInfoMatrixSet((e=>this._getTileInfoError(e.tileInfo,e.fullExtent)),!0);null!=t&&null!==t.id&&e.tileMatrixSetId!==t.id&&(this.layer.activeLayer.tileMatrixSetId=t.id),this.notifyChange("suspended"),this.canResume()&&this.refresh()}))},l._getCompatibleTileInfoMatrixSet=function(e,t=!1){const o=h.getTileMaxtrixSetFromActiveLayer(this.layer);if(null!=o){if(i.isCollection(o)){const i=o.find((i=>{const o=e(i);return null!=o&&(t?r.getLogger(this).error("The selected tile matrix set is not compatible with the view",o):this.addResolvingPromise(Promise.reject(o))),null==o}));return i}const s=e(o);return null!=s&&(t?r.getLogger(this).error("The selected tile matrix set is not compatible with the view",s):this.addResolvingPromise(Promise.reject(s))),o}return null},l._getTileInfoError=function(e,t){return this._getTileInfoSupportError(e,t)||this._getTileInfoCompatibilityError(e,this.view.basemapTerrain.tilingScheme)},e._createClass(s,[{key:"hasMixedImageFormats",get:function(){return!0}}]),s}(y(d.TiledLayerView3D(u.LayerView3D(p))));t.__decorate([s.property({readOnly:!0})],f.prototype,"hasMixedImageFormats",null),t.__decorate([s.property()],f.prototype,"layer",void 0),t.__decorate([s.property()],f.prototype,"suspended",void 0),t.__decorate([s.property()],f.prototype,"tileInfo",void 0),f=t.__decorate([c.subclass("esri.views.3d.layers.WMTSLayerView3d")],f);return f}));
