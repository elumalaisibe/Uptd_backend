/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../core/Accessor","../../../../core/screenUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../geometry/support/ray","../../../../geometry/support/vectorStacks","../../../../layers/graphics/dehydratedFeatures","./LineOfSightIntersectionResult","../../layers/i3s/Intersector","../../support/geometryUtils/ray","../../terrain/Intersector","../../webgl-engine/lib/Intersector","../../webgl-engine/lib/IntersectorInterfaces","../../webgl-engine/lib/intersectorUtilsConversions"],(function(e,t,r,n,i,s,o,c,a,l,u,p,d,y,h,I,g,f,v,m,R,S){"use strict";e.LineOfSightRayIntersector=function(e){function r(t){var r;return(r=e.call(this,t)||this)._terrainIntersectionOptionsLayerUids=new Set(["terrain"]),r}t._inherits(r,e);var n=r.prototype;return n.initialize=function(){this.intersector=m.newIntersector(this.view.state.viewingMode),this.intersector.options.hud=!1,this.intersector.options.store=R.StoreResults.MIN},n.getScreenPointIntersection=function(e){const t=i.screenPointObjectToArray(e,y.sv2d.get()),r=f.fromScreen(this.view.state.camera,t,P);return this._getRayIntersection(r)},n._getRayIntersection=function(e,t){if(null==e||null==this.view.sceneIntersectionHelper)return null;this.intersector.options.store=R.StoreResults.MIN,this.view.sceneIntersectionHelper.intersectToolIntersectorRay(e,this.intersector,t);const r=this.intersector.results.min,n=p.create();if(!r.getIntersectionPoint(n))return null;const i=this.view.renderCoordsHelper.fromRenderCoords(n,this.view.spatialReference),s=p.clone(r.normal);if(g.isI3sIntersectorResult(r))return new I.LineOfSightIntersectionResult({type:R.IntersectorType.OBJECT,id:`${r.target.layerUid}/${r.target.nodeIndex}/${r.target.componentIndex}`,mapPoint:i,renderPoint:n,normal:s,ray:d.copy(e),graphic:null});if(v.isTerrainIntersectorResult(r))return new I.LineOfSightIntersectionResult({type:R.IntersectorType.TERRAIN,id:r.target.lij.slice(),mapPoint:i,renderPoint:n,normal:s,ray:d.copy(e),graphic:null});const o=S.toGraphic(r,this.view);if(null!=o){const t=o.layer,r=o.sourceLayer;let c;if(r)if("scene"===r.type)c=h.getObjectId(o,r.objectIdField);else c=o.uid;else c=o.uid;return new I.LineOfSightIntersectionResult({type:R.IntersectorType.OBJECT,id:`${t?.uid}/${c}`,mapPoint:i,renderPoint:n,normal:s,ray:d.copy(e),graphic:o})}return null},n.updateFromGroundIntersection=function(e,t,r){const n=w,i=b,s=O,o=L;u.copy(i,e),this.view.renderCoordsHelper.worldUpAtPosition(i,s),u.normalize(s,s);const c=this.view.basemapTerrain.visibleElevationBounds,a=c?Math.abs(c.max-c.min):100,l=t>=0?1:-1;u.scale(o,s,l*(a+Math.abs(t))),u.add(n,i,o),d.fromPoints(n,i,P);const y=this._getRayIntersection(P,{include:this._terrainIntersectionOptionsLayerUids});return null!=y?(u.scale(o,s,l*t),u.add(r,y.renderPoint,o),p.clone(y.normal)):(u.copy(r,e),null)},t._createClass(r)}(n),r.__decorate([s.property()],e.LineOfSightRayIntersector.prototype,"view",void 0),r.__decorate([s.property()],e.LineOfSightRayIntersector.prototype,"intersector",void 0),e.LineOfSightRayIntersector=r.__decorate([l.subclass("esri.views.3d.analysis.LineOfSight.LineOfSightRayIntersector")],e.LineOfSightRayIntersector);const w=p.create(),b=p.create(),O=p.create(),L=p.create(),P=d.create();Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
