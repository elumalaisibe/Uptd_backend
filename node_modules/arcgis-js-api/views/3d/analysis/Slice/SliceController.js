/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../../../../analysis/SlicePlane","../../../../core/Accessor","../../../../core/Handles","../../../../core/Logger","../../../../core/reactiveUtils","../../../../core/accessorSupport/decorators/property","../../../../core/accessorSupport/ensureType","../../../../core/arrayUtils","../../../../core/has","../../../../core/accessorSupport/decorators/subclass","../../../../chunks/boundedPlane","../../../../layers/Layer","../../../../layers/buildingSublayers/BuildingComponentSublayer","./sliceToolUtils","../support/projectionUtils","../../terrain/isTerrainSurfaceLayer"],(function(e,i,a,l,t,n,s,r,o,c,u,h,d,y,p,w,v,_,f){"use strict";const S="esri.views.3d.analysis.Slice.SliceController",g=s.getLogger(S);e.SliceController=function(e){function a(i){var a;return(a=e.call(this,i)||this)._handles=new n,a._internalChange=!1,a._currentSlicePlane=null,a}i._inherits(a,e);var t=a.prototype;return t.initialize=function(){this._handles.add(this.analysis.excludedLayers.on("before-add",(e=>{const i=e.item;null!=i&&(i instanceof p||i instanceof w)?i instanceof p&&f.isTerrainSurfaceLayer(i)?(g.error("excludedLayers",`Layer '${i.title}, id:${i.id}' of type '${i.type}' can not be individually excluded from slicing. Use 'excludeGroundSurface' instead.`),e.preventDefault()):this.analysis.excludedLayers.includes(i)&&e.preventDefault():(g.error("excludedLayers","Invalid layer type, layer must derive from Layer or BuildingComponentSublayer"),e.preventDefault())}))),P(this.view,this),this._handles.add([r.watch((()=>this.analysisViewData.plane),(()=>{this._internalChange||this._updateSlicePlaneFromBoundedPlane(),this._updateLayerViews()}),{sync:!0}),r.watch((()=>this.analysis.excludeGroundSurface),(()=>this._updateLayerViews()),{sync:!0}),this.analysis.excludedLayers.on("change",(()=>this._updateLayerViews())),r.watch((()=>[this.analysisViewData.active,this.analysisViewData.visible]),(()=>{this._updateActiveController(),this._updateViewSlicePlane()}),{sync:!0}),r.watch((()=>this._allLayerAndSubLayerViews),(()=>this._updateLayerViews()))]),this._handles.add([r.watch((()=>this.analysis.shape),(()=>{this._internalChange||(this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane())}),{sync:!0})],"analysis"),this._updateActiveController(),this._updateBoundedPlaneFromSlicePlane(),this._updateViewSlicePlane()},t.destroy=function(){this.analysisViewData.active&&(this.analysisViewData.active=!1,this.view.slicePlane=null),D(this.view,this),this._handles.destroy(),this.set("view",null)},t._updateBoundedPlaneFromSlicePlane=function(){const e=this.analysis.shape,i=this._currentSlicePlane;if(null==i&&null==e||null!=i&&null!=e&&e.equals(i))return;let a=null,l=null;if(null!=e&&null!=e.position){const i=e.position.spatialReference,t=v.projectAndElevationAlignShape(e,this.view);null==t&&_.logFailedGeometryProjectionError(this.analysis,i,g),a=v.projectedShapeToPlane(t,this.view,{tiltEnabled:this.analysis.tiltEnabled},y.create()),null!=a&&(l={heading:e.heading,tilt:e.tilt,position:e.position,width:e.width,height:e.height})}this._currentSlicePlane=l,this._internalChange=!0,this.analysisViewData.plane=a,this._internalChange=!1},t._updateSlicePlaneFromBoundedPlane=function(){const e=this.analysisViewData.plane,i=v.planeToShape(e,this.view,this.view.spatialReference,new l);let a=null;null!=i&&(a={heading:i.heading,tilt:i.tilt,position:i.position,width:i.width,height:i.height}),this._currentSlicePlane=a,this._internalChange=!0,this.analysis.shape=i,this._internalChange=!1,this._updateViewSlicePlane()},t._updateActiveController=function(){if(C)return;const e=L(this.view);if(!e)return;if(this.analysisViewData.active)null!=e.activeController&&e.activeController!==this?(C=!0,e.activeController.analysisViewData.active=!1,C=!1):null!=e.activeController&&e.activeController,this._updateLayerViews(),e.activeController=this;else{if(null!=e.activeController&&e.activeController!==this)return;null!=e.activeController&&e.activeController===this&&(e.activeController=null,this._updateLayerViews())}},t._updateViewSlicePlane=function(){b(this.view)},t._updateLayerViews=function(){const e=null!=this.analysisViewData.plane&&this.analysisViewData.visible&&this.analysisViewData.active,i=[],a=e=>{"layers"in e?e.layers.forEach(a):i.push(e)};this.analysis.excludedLayers.forEach(a),this.view.allLayerViews.forEach((a=>{a.destroyed||("slicePlaneEnabled"in a&&(a.slicePlaneEnabled=e&&!i.includes(a.layer)),"sublayerViews"in a&&a.sublayerViews.forEach((a=>{a.slicePlaneEnabled=e&&!i.includes(a.sublayer)})))})),null!=this.view.basemapTerrain&&(this.view.basemapTerrain.slicePlaneEnabled=e&&!this.analysis.excludeGroundSurface)},i._createClass(a,[{key:"_allLayerAndSubLayerViews",get:function(){const e=this.view.allLayerViews.items;return e.concat(e.filter(v.isIBuildingSceneLayerView3D).flatMap((({sublayerViews:e})=>e.items)))}}]),a}(t),a.__decorate([o.property()],e.SliceController.prototype,"view",void 0),a.__decorate([o.property()],e.SliceController.prototype,"analysis",void 0),a.__decorate([o.property()],e.SliceController.prototype,"analysisViewData",void 0),a.__decorate([o.property()],e.SliceController.prototype,"_allLayerAndSubLayerViews",null),e.SliceController=a.__decorate([d.subclass(S)],e.SliceController);const V=new Map;let C=!1;function b(e){const i=L(e),a=i?.activeController;null!=a&&null!=a.analysisViewData.plane&&a.analysisViewData.visible?e.slicePlane=a.analysisViewData.plane:e.slicePlane=null}function P(e,i){V.has(e)||V.set(e,{all:[],activeController:null}),V.get(e)?.all.push(i)}function L(e){return V.get(e)}function D(e,i){if(!V.has(e))throw new Error("view expected in global slice register");const a=V.get(e),l=a?.all.lastIndexOf(i)??-1;if(!a||-1===l)throw new Error("controller expected in global slice register");a.all.splice(l,1),0===a.all.length&&V.delete(e)}Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
