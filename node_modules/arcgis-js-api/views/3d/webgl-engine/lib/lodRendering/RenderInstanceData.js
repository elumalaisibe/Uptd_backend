/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../core/arrayUtils","../../../../../geometry/support/buffer/BufferView","../Util","../VertexAttribute","./BackedBufferObject"],(function(t,e,i,s,n,r,a){"use strict";let h=e._createClass((function(t){this.modelOriginHi=t.getField(r.VertexAttribute.MODELORIGINHI,s.BufferViewVec3f),this.modelOriginLo=t.getField(r.VertexAttribute.MODELORIGINLO,s.BufferViewVec3f),this.model=t.getField(r.VertexAttribute.MODEL,s.BufferViewMat3f),this.modelNormal=t.getField(r.VertexAttribute.MODELNORMAL,s.BufferViewMat3f),this.featureAttribute=t.getField(r.VertexAttribute.INSTANCEFEATUREATTRIBUTE,s.BufferViewVec4f),this.color=t.getField(r.VertexAttribute.INSTANCECOLOR,s.BufferViewVec4u8),this.objectAndLayerIdColor=t.getField(r.VertexAttribute.INSTANCEOBJECTANDLAYERIDCOLOR,s.BufferViewVec4u8)})),c=function(){function t(t,e){this._headIndex=0,this._tailIndex=0,this._firstIndex=null,this._captureFirstIndex=!0,this._updating=!1,this._prevHeadIndex=0,this._resized=!1,this._rctx=t,this._instanceBufferLayout=e,this._elementSize=e.stride,this._capacity=1}var s=t.prototype;return s.destroy=function(){this._buffer&&this._buffer.destroy()},s.reset=function(){this._headIndex=0,this._tailIndex=0,this._firstIndex=null},s.startUpdateCycle=function(){this._captureFirstIndex=!0},s.beginUpdate=function(){n.assert(!this._updating,"already updating"),this._updating=!0,this._prevHeadIndex=this._headIndex},s.endUpdate=function(){n.assert(this._updating,"not updating"),this.size<i.ReallocShrinkTreshold*this.capacity&&this._shrink(),this._resized?(this._buffer.transferAll(),this._resized=!1):this._transferRange(this._prevHeadIndex,this._headIndex),this._updating=!1},s.allocateHead=function(){n.assert(this._updating,"not updating"),this.isFull&&this._grow();const t=this.headIndex;return this._captureFirstIndex&&(this._firstIndex=t,this._captureFirstIndex=!1),this._incrementHead(),n.assert(this._headIndex!==this._tailIndex,"invalid pointers"),t},s.freeTail=function(){n.assert(this._updating,"not updating"),n.assert(this.size>0,"invalid size");const t=this._tailIndex===this._firstIndex;this._incrementTail(),t&&(this._firstIndex=this._tailIndex)},s._grow=function(){const t=Math.max(d,Math.floor(this._capacity*i.ReallocGrowthFactor));this._resize(t)},s._shrink=function(){const t=Math.max(d,Math.floor(this._capacity*i.ReallocShrinkFactor));this._resize(t)},s._resize=function(t){if(n.assert(this._updating,"not updating"),t===this._capacity)return;const e=new a(this._rctx,this._elementSize,t);if(this._buffer){this._firstIndex&&(this._firstIndex=(this._firstIndex+this._capacity-this._tailIndex)%this._capacity);const t=this.size,i=this._compactInstances(e);n.assert(i===t,"invalid compaction"),this._buffer.destroy(),this._tailIndex=0,this._headIndex=i,this._prevHeadIndex=0}this._resized=!0,this._capacity=t,this._buffer=e,this._view=new h(this._instanceBufferLayout.createView(this._buffer.array))},s._compactInstances=function(t){const e=this._headIndex,i=this._tailIndex;return i<e?(this._buffer.copyRange(i,e,t),e-i):i>e?(this._buffer.copyRange(i,this._capacity,t),e>0&&this._buffer.copyRange(0,e,t,this._capacity-i),e+(this._capacity-i)):0},s._incrementHead=function(t=1){this._headIndex=(this._headIndex+t)%this._capacity},s._incrementTail=function(t=1){this._tailIndex=(this._tailIndex+t)%this._capacity},s._transferRange=function(t,e){t<e?this._buffer.transferRange(t,e):t>e&&(e>0&&this._buffer.transferRange(0,e),this._buffer.transferRange(t,this._capacity))},e._createClass(t,[{key:"buffer",get:function(){return this._buffer.buffer}},{key:"view",get:function(){return this._view}},{key:"capacity",get:function(){return this._capacity}},{key:"size",get:function(){const t=this._headIndex,e=this._tailIndex;return t>=e?t-e:t+this._capacity-e}},{key:"isEmpty",get:function(){return this._headIndex===this._tailIndex}},{key:"isFull",get:function(){return this._tailIndex===(this._headIndex+1)%this._capacity}},{key:"headIndex",get:function(){return this._headIndex}},{key:"tailIndex",get:function(){return this._tailIndex}},{key:"firstIndex",get:function(){return this._firstIndex}},{key:"memoryUsage",get:function(){return this._buffer?this._buffer.memoryUsage:{cpu:0,gpu:0}}}]),t}();const d=64;t.INITIAL_CAPACITY=d,t.RenderInstanceData=c,t.RenderInstanceDataView=h,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
