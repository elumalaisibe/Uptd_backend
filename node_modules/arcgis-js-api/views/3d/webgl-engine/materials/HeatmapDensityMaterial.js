/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/vec2","../../../../chunks/vec2f64","../../support/buffer/InterleavedLayout","../core/shaderLibrary/ShaderOutput","../lib/GLMaterial","../lib/Material","../lib/RenderSlot","../lib/VertexAttribute","./internal/bufferWriterUtils","../shaders/HeatmapDensityTechnique"],(function(t,e,r,i,n,a,s,u,o,c,l,f){"use strict";const h=2;let b=function(t){function r(){var e;return(e=t.apply(this,arguments)||this).isAttributeDriven=!1,e.usesHalfFloats=!1,e}return e._inherits(r,t),e._createClass(r)}(f.HeatmapDensityPassParameters),A=function(t){function i(e){var r;return(r=t.call(this,e,new b)||this)._configuration=new f.HeatmapDensityTechniqueConfiguration,r}e._inherits(i,t);var n=i.prototype;return n.requiresSlot=function(t,e){return t===o.RenderSlot.DRAPED_MATERIAL&&e===a.ShaderOutput.Color},n.getConfiguration=function(){return this._configuration.isAttributeDriven=this.parameters.isAttributeDriven,this._configuration.usesHalfFloat=this.parameters.usesHalfFloats,this._configuration},n.createGLMaterial=function(t){return new p(t)},n.intersect=function(){},n.intersectDraped=function(t,e,i,n,a,s){const u=t.vertexAttributes.get(c.VertexAttribute.POSITION),{parameters:o}=this,{searchRadius:l}=o,{screenToWorldRatio:f}=t,b=l*f+h*f,A=b*b,p=u.data.length/u.size;for(let c=0;c<p;c++){const t=c*u.size,e=r.set(V,u.data[t],u.data[t+1]);r.squaredDistance(e,n)<A&&a(s.dist,s.normal,-1,!1)}},n.createBufferWriter=function(){return new T(this.parameters.isAttributeDriven?g:d)},e._createClass(i)}(u.Material),p=function(t){function r(){return t.apply(this,arguments)||this}return e._inherits(r,t),r.prototype.beginSlot=function(t){return this.ensureTechnique(f.HeatmapDensityTechnique,t)},e._createClass(r)}(s),T=function(){function t(t){this.vertexBufferLayout=t}var r=t.prototype;return r.elementCount=function(t){return t.indices.get(c.VertexAttribute.POSITION).length*v},r.write=function(t,e,r,i,n){l.writePosition(r.indices.get(c.VertexAttribute.POSITION),r.vertexAttributes.get(c.VertexAttribute.POSITION).data,t,i.position,n,v);const a=r.indices.get(c.VertexAttribute.POSITION).length,s=i.uv0;let u=n;for(let c=0;c<a;++c)s.setValues(u++,-1,-1),s.setValues(u++,1,-1),s.setValues(u++,1,1),s.setValues(u++,1,1),s.setValues(u++,-1,1),s.setValues(u++,-1,-1);const o=c.VertexAttribute.FEATUREATTRIBUTE in i?i.featureAttribute:null;o&&l.writeBufferFloat(r.indices.get(c.VertexAttribute.FEATUREATTRIBUTE),r.vertexAttributes.get(c.VertexAttribute.FEATUREATTRIBUTE).data,o,n,v)},e._createClass(t)}();const d=n.newLayout().vec3f(c.VertexAttribute.POSITION).vec2f(c.VertexAttribute.UV0),g=d.clone().f32(c.VertexAttribute.FEATUREATTRIBUTE),v=6,V=i.create();t.HeatmapDensityMaterial=A,t.HeatmapDensityMaterialParameters=b,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
