/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/vec3f64","../../../../chunks/vec4f64","../../../ViewingMode","../core/shaderLibrary/ShaderOutput","../core/shaderLibrary/attributes/NormalAttribute.glsl","../core/shaderLibrary/attributes/TextureCoordinateAttribute.glsl","../core/shaderLibrary/attributes/VertexNormal.glsl","../core/shaderLibrary/util/AlphaCutoff","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../lib/basicInterfaces","../lib/DefaultVertexAttributeLocations","../lib/Material","../lib/OrderIndependentTransparency","../lib/Program","../lib/StencilUtils","../lib/TransparencyPassType","../materials/pbrUtils","../../../../chunks/DefaultMaterial.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,t,r,a,i,n,l,s,o,u,c,d,h,p,f,m,b,g,P,T,y,S,O,D){"use strict";let M=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).isSchematic=!1,t.usePBR=!1,t.mrrFactors=a.fromArray(y.defaultAdvancedMRRFactors),t.hasVertexColors=!1,t.hasSymbolColors=!1,t.doubleSided=!1,t.doubleSidedType="normal",t.cullFace=p.CullFaceOptions.Back,t.isInstanced=!1,t.hasInstancedColor=!1,t.emissiveFactor=a.fromValues(0,0,0),t.instancedDoublePrecision=!1,t.normalType=s.NormalType.Attribute,t.receiveSSAO=!0,t.receiveShadows=!0,t.castShadows=!0,t.shadowMappingEnabled=!1,t.ambient=a.fromValues(.2,.2,.2),t.diffuse=a.fromValues(.8,.8,.8),t.externalColor=i.fromValues(1,1,1,1),t.colorMixMode="multiply",t.opacity=1,t.layerOpacity=1,t.origin=a.create(),t.hasSlicePlane=!1,t.hasSliceHighlight=!0,t.offsetTransparentBackfaces=!1,t.vvSize=null,t.vvColor=null,t.vvOpacity=null,t.vvSymbolAnchor=null,t.vvSymbolRotationMatrix=null,t.modelTransformation=null,t.transparent=!1,t.writeDepth=!0,t.customDepthTest=p.DepthTestFunction.Less,t.textureAlphaMode=p.AlphaDiscardMode.Blend,t.textureAlphaCutoff=c.defaultMaskAlphaCutoff,t.textureAlphaPremultiplied=!1,t.hasOccludees=!1,t.renderOccluded=m.RenderOccludedFlag.Occlude,t}return r._inherits(t,e),r._createClass(t)}(u.VertexNormalPassParameters),v=function(e){function t(){var t;return(t=e.apply(this,arguments)||this).origin=a.create(),t.slicePlaneLocalOrigin=t.origin,t}return r._inherits(t,e),r._createClass(t)}(u.VertexNormalDrawParameters),C=function(e){function t(){return e.apply(this,arguments)||this}r._inherits(t,e);var a=t.prototype;return a.initializeConfiguration=function(e,t){t.spherical=e.viewingMode===n.ViewingMode.Global,t.doublePrecisionRequiresObfuscation=e.rctx.driverTest.doublePrecisionRequiresObfuscation.result,t.textureCoordinateType=t.hasColorTexture||t.hasMetallicRoughnessTexture||t.hasEmissionTexture||t.hasOcclusionTexture||t.hasNormalTexture?o.TextureCoordinateAttributeType.Default:o.TextureCoordinateAttributeType.None,t.objectAndLayerIdColorInstanced=t.instanced},a.initializeProgram=function(e){return this._initializeProgram(e,t.shader)},a._initializeProgram=function(e,t){return new g.Program(e.rctx,t.get().build(this.configuration),f.Default3D)},a._convertDepthTestFunction=function(e){return e===p.DepthTestFunction.Lequal?O.CompareFunction.LEQUAL:O.CompareFunction.LESS},a._makePipeline=function(e,t){const r=this.configuration,a=e===T.TransparencyPassType.NONE,i=e===T.TransparencyPassType.FrontFace;return D.makePipelineState({blending:r.output!==l.ShaderOutput.Color&&r.output!==l.ShaderOutput.Alpha||!r.transparent?null:a?b.blendingDefault:b.oitBlending(e),culling:x(r)?D.cullingParams(r.cullFace):null,depthTest:{func:b.oitDepthTest(e,this._convertDepthTestFunction(r.customDepthTest))},depthWrite:(a||i)&&r.writeDepth?D.defaultDepthWriteParams:null,colorWrite:D.defaultColorWriteParams,stencilWrite:r.hasOccludees?P.stencilWriteMaskOn:null,stencilTest:r.hasOccludees?t?P.stencilToolMaskBaseParams:P.stencilBaseAllZerosParams:null,polygonOffset:a||i?null:b.getOITPolygonOffset(r.enableOffset)})},a.initializePipeline=function(){return this._occludeePipelineState=this._makePipeline(this.configuration.transparencyPassType,!0),this._makePipeline(this.configuration.transparencyPassType,!1)},a.getPipelineState=function(e,a){return a?this._occludeePipelineState:r._get(r._getPrototypeOf(t.prototype),"getPipelineState",this).call(this,e,a)},r._createClass(t)}(h.ShaderTechnique);function x(e){return e.cullFace!==p.CullFaceOptions.None||!e.hasSlicePlane&&(!e.transparent&&!e.doubleSidedMode)}C.shader=new d.ReloadableShaderModule(S.DefaultMaterial,(()=>new Promise(((t,r)=>e(["./DefaultMaterial.glsl"],t,r))))),t.DefaultMaterialDrawParameters=v,t.DefaultMaterialPassParameters=M,t.DefaultMaterialTechnique=C,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
