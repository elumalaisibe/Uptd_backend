/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../chunks/tslib.es6","../core/shaderTechnique/ReloadableShaderModule","../core/shaderTechnique/ShaderTechnique","../core/shaderTechnique/ShaderTechniqueConfiguration","../lib/DefaultVertexAttributeLocations","../lib/OrderIndependentTransparency","../lib/Program","../lib/TransparencyPassType","../materials/DefaultTechniqueConfiguration","../../../../chunks/MeasurementArrow.glsl","../../../webgl/enums","../../../webgl/renderState"],(function(e,r,t,n,a,i,o,s,u,l,c,p,d,h,f){"use strict";let y=function(e){function r(r,t,n){return e.call(this,r,t,n)||this}t._inherits(r,e);var n=r.prototype;return n.initializeProgram=function(e){return new l.Program(e.rctx,r.shader.get().build(this.configuration),s.Default3D)},n._setPipelineState=function(e){const r=e===c.TransparencyPassType.NONE,t=this.configuration;return f.makePipelineState({blending:t.transparent?r?u.blendingDefault:u.oitBlending(e):null,polygonOffset:this.configuration.polygonOffsetEnabled?{factor:0,units:-4}:null,depthTest:{func:h.CompareFunction.LESS},depthWrite:f.defaultDepthWriteParams,colorWrite:f.defaultColorWriteParams})},n.initializePipeline=function(){return this._setPipelineState(this.configuration.transparencyPassType)},t._createClass(r,[{key:"primitiveType",get:function(){return h.PrimitiveType.TRIANGLE_STRIP}}]),r}(i.ShaderTechnique);y.shader=new a.ReloadableShaderModule(d.MeasurementArrow,(()=>new Promise(((r,t)=>e(["./MeasurementArrow.glsl"],r,t)))));let T=function(e){function r(){var r;return(r=e.apply(this,arguments)||this).polygonOffsetEnabled=!1,r.transparent=!1,r.transparencyPassType=c.TransparencyPassType.NONE,r}return t._inherits(r,e),t._createClass(r)}(p.DefaultTechniqueConfiguration);n.__decorate([o.parameter()],T.prototype,"polygonOffsetEnabled",void 0),n.__decorate([o.parameter()],T.prototype,"transparent",void 0),n.__decorate([o.parameter({count:c.TransparencyPassType.COUNT})],T.prototype,"transparencyPassType",void 0),r.MeasurementArrowTechnique=y,r.MeasurementArrowTechniqueConfiguration=T,Object.defineProperty(r,Symbol.toStringTag,{value:"Module"})}));
