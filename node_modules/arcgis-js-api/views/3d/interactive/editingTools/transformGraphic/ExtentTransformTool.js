/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Evented","../../../../../core/Handles","../../../../../core/handleUtils","../../../../../core/mathUtils","../../../../../core/quantityUtils","../../../../../core/reactiveUtils","../../../../../core/screenUtils","../../../../../core/unitUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../chunks/mat4","../../../../../chunks/vec2","../../../../../chunks/vec2f64","../../../../../chunks/vec3","../../../../../chunks/vec3f64","../../../../../geometry/support/aaBoundingRect","../../../../../chunks/boundedPlane","../../../../../geometry/support/plane","../../../../../geometry/support/ray","../../../../../geometry/support/vectorStacks","../../../../../support/elevationInfoUtils","../../../analysis/Slice/sliceToolUtils","../../../analysis/Slice/images/Factory","../../Manipulator3D","../../manipulatorUtils","../dragEventPipeline3D","../ManipulatorType","../manipulatorUtils","../settings","../visualElementUtils","../manipulations/MoveManipulation","../manipulations/MoveXYGraphicManipulation","./PreserveAspectRatio","../../visualElements/OutlineVisualElement","../../../layers/graphics/elevationAlignmentUtils","../../../layers/graphics/ElevationContext","../../../layers/graphics/GraphicState","../../../support/geometryUtils/ray","../../../../interactive/dragEventPipeline","../../../../interactive/InteractiveToolBase","../../../../interactive/editGeometry/EditGeometryOperations","../../../../interactive/editGeometry/interfaces","../../../../interactive/editGeometry/operations/UpdateVertices","../../../../interactive/editGeometry/support/editPlaneUtils","../../../../interactive/sketch/SketchTooltipOptions","../../../../interactive/tooltip/ExtentTooltipInfos","../../../../interactive/tooltip/Tooltip","../../../../interactive/tooltip/TranslateTooltipInfos","../../../../support/automaticLengthMeasurementUtils","../../../../support/colorUtils","../../../../support/euclideanLengthMeasurementUtils"],(function(t,e,i,a,n,o,r,s,l,p,c,h,u,d,_,g,m,y,v,f,S,M,T,E,A,b,x,B,O,R,P,G,D,z,w,I,U,Z,C,k,H,X,Y,L,N,V,F,q,W,j,J,K,Q,$,tt,et,it){"use strict";t.ExtentTransformTool=function(t){function i(e){var i;return(i=t.call(this,e)||this).enableZ=!0,i.enableRotation=!0,i.enableScaling=!0,i.tooltipOptions=new J,i._preserveAspectRatio=new C.PreserveAspectRatio,i.grabbing=!1,i.inputState=null,i.type="transform-3d",i._handles=new n,i._attachmentOrigin=null,i._outlineVisualElement=null,i._mapBounds=T.create(),i._mapBoundsStart=T.create(),i._zmax=0,i._sizeStart=null,i._displayBounds=T.create(),i._displayBoundsStart=T.create(),i._displayBoundsMarginStart=0,i._resizeHandles=[{direction:[1,0]},{direction:[1,1]},{direction:[0,1]},{direction:[-1,1]},{direction:[-1,0]},{direction:[-1,-1]},{direction:[0,-1]},{direction:[1,-1]}],i._moveXYTooltipInfo=null,i._moveZTooltipInfo=null,i._rotateTooltipInfo=null,i._scaleTooltipInfo=null,i._startAngle=0,i._endAngle=0,i._startScale=v.create(),i._endScale=v.create(),i}e._inherits(i,t);var a=i.prototype;return a.initialize=function(){const{view:t,graphic:e,manipulators:i,_handles:a}=this,n=w.getSettings(t).colors,r=this._graphicState=new Y.GraphicState({graphic:e}),s=e.geometry;this._editGeometryOperations=F.EditGeometryOperations.fromGeometry(s,t.state.viewingMode),this._graphicMoveManipulation=new Z.MoveXYGraphicManipulation({tool:this,view:t,graphicState:r}),this._moveZManipulator=B.createShiftManipulator(t,{offsetMode:B.OffsetMode.CENTER_ON_CALLOUT,calloutColor:n.accent,color:n.contrast,outlineColor:n.accent}),this._moveZManipulator.state|=B.IsShiftEdgeOnScreenFlag,a.add([this._createMoveXYGraphicDragPipeline(),l.watch((()=>this.enableZ),(()=>this._updateManipulatorAvailability(this._moveZManipulator,D.ManipulatorType.TRANSLATE_Z))),this._createMoveZDragPipeline()]),i.add(this._moveZManipulator),this._resizeManipulators=this._resizeHandles.map((e=>{const i=B.createResizeManipulator(t,e,{color:n.accent});return a.add([l.watch((()=>this.enableScaling),(()=>this._updateManipulatorAvailability(i,D.ManipulatorType.SCALE))),i.events.on("grab-changed",(t=>this._onResizeGrab(t))),this._createResizeDragPipeline(i,e)]),i})),i.addMany(this._resizeManipulators);const p=!this.view._stage?.renderView.renderingContext.driverTest.svgPremultipliesAlpha.result;this._rotateManipulatorTexture=O.getRotateHeadingTexture(t.toolViewManager.textures,{accentColor:et.multiplyOpacity(n.accent,.5),contrastColor:n.contrast,preMultiplyAlpha:p}),this._rotateManipulator=P.createRotateManipulator(t,{calloutColor:et.unitRGBAFromColor(n.accent),texture:this._rotateManipulatorTexture.texture}),a.add([l.watch((()=>this.enableRotation),(()=>this._updateManipulatorAvailability(this._rotateManipulator,D.ManipulatorType.ROTATE))),this._rotateManipulator.events.on("grab-changed",(t=>{this._onRotateGrab(t)})),this._createRotateDragPipeline(this._rotateManipulator)]),i.add(this._rotateManipulator),this._calculateMapBounds(),this._updateDisplayBounds();const c=I.createVisualElements({view:t,graphic:e,forEachManipulator:t=>this._forEachManipulator(t),onManipulatorsChanged:()=>o.makeHandle()});null!=c&&(this._outlineVisualElement=c.visualElement instanceof k.OutlineVisualElement?c.visualElement:null),null!=this._outlineVisualElement&&a.add(this._outlineVisualElement.events.on("attachment-origin-changed",(()=>this._updateDisplayBounds()))),a.add(c),a.add([r.on("changed",(()=>this._onGeometryChanged())),l.watch((()=>r.displaying),(()=>this._updateAllManipulatorAvailability())),l.watch((()=>r.isDraped),(()=>this._graphicDrapedChanged()),l.initial),t.trackGraphicState(r)]);const h=t.pointsOfInterest;a.add(l.watch((()=>h?.centerOnSurfaceFrequent.location),(()=>this._updateDisplayBounds())));const u=t=>{a.add(t.events.on("grab-changed",(()=>{this.grabbing=t.grabbing,this._updateAllManipulatorAvailability()})))};this._forEachManipulator(u);const d=(t,i)=>{a.add(t.events.on("immediate-click",(t=>{i===D.ManipulatorType.TRANSLATE_XY&&this.emit("immediate-click",{...t,graphic:e}),t.stopPropagation()})))};this._forEachManipulator(d),this._onGeometryChanged(),this._updateAllManipulatorAvailability(),this._initializeTooltip(),this.finishToolCreation()},a.destroy=function(){this._mapBounds=null,this._displayBounds=null,this._rotateManipulatorTexture.release(),this._handles.destroy(),this._graphicMoveManipulation.destroy(),this._editGeometryOperations.destroy(),this._tooltip.destroy(),this._set("view",null),this._set("graphic",null)},a._initializeTooltip=function(){const{_handles:t,view:e}=this,i=this._tooltip=new Q.Tooltip({view:e}),a=()=>{i.info=this._getUpdatedTooltipInfo()};t.add([this.on("graphic-translate-start",a),this.on("graphic-translate",a),this.on("graphic-translate-stop",(()=>{this._moveXYTooltipInfo=null,this._moveZTooltipInfo=null,this._tooltip.clear()})),this.on("graphic-rotate-start",(t=>{this._startAngle=t.angle,a()})),this.on("graphic-rotate",(t=>{this._endAngle=t.angle,a()})),this.on("graphic-rotate-stop",(()=>{this._startAngle=0,this._endAngle=0,a()})),this.on("graphic-scale-start",(t=>{y.set(this._startScale,t.xScale,t.yScale),y.set(this._endScale,t.xScale,t.yScale),a()})),this.on("graphic-scale",(t=>{y.set(this._endScale,t.xScale,t.yScale),a()})),this.on("graphic-scale-stop",(()=>{y.set(this._startScale,0,0),y.set(this._endScale,0,0),a()}))]),this._forEachManipulator((e=>{t.add([e.events.on("focus-changed",a),e.events.on("grab-changed",a),e.events.on("drag",(t=>{"cancel"===t.action?this._tooltip.clear():a()}))])}))},a._getUpdatedTooltipInfo=function(){return this.tooltipOptions.enabled?this._graphicMoveManipulation.grabbing||this._graphicMoveManipulation.dragging?this._computeMoveXYTooltipInfo():this._moveZManipulator.focused?this._computeMoveZTooltipInfo():this._rotateManipulator.focused?this._computeRotateTooltipInfo():this._resizeManipulators.some((t=>t.focused))?this._computeScaleTooltipInfo():null:null},a._computeMoveXYTooltipInfo=function(){return this._moveXYTooltipInfo??(this._moveXYTooltipInfo=new $.TranslateGraphicTooltipInfo({tooltipOptions:this.tooltipOptions}))},a._computeMoveZTooltipInfo=function(){const t=this._moveZTooltipInfo??(this._moveZTooltipInfo=new $.TranslateGraphicZTooltipInfo({tooltipOptions:this.tooltipOptions})),e=this._moveUnit;if(this._moveZManipulator.dragging){const e=this._mapBoundsStart.origin,i=this._mapBounds.origin,a=it.verticalSignedDistance(e,i,this.view.spatialReference);if(null==a)return null;t.distance=a}else t.distance=s.createLength(0,e);return t},a._computeRotateTooltipInfo=function(){const t=this._rotateTooltipInfo??(this._rotateTooltipInfo=new K.ExtentRotateTooltipInfo({tooltipOptions:this.tooltipOptions}));return t.angle=this._startAngle-this._endAngle,t},a._computeScaleTooltipInfo=function(){const t=this.graphic.geometry;if(null==t)return null;const e=this._scaleTooltipInfo??(this._scaleTooltipInfo=new K.ExtentScaleTooltipInfo({tooltipOptions:this.tooltipOptions})),i=j.mapPlaneAutoHorizontalSizeByElevationMode(this._mapBounds,this._zmax,t.spatialReference,this._graphicState.isDraped);return null==i?null:(e.xSize=i[0],e.ySize=i[1],null!=this._sizeStart&&this._resizeManipulators.some((t=>t.dragging))?(e.xScale=i[0].value/this._sizeStart[0].value,e.yScale=i[1].value/this._sizeStart[1].value):(e.xScale=1,e.yScale=1),e)},a._graphicDrapedChanged=function(){this._handles.remove(at),this._updateDisplayBounds(),this._graphicState.isDraped&&this._handles.add(this.view.elevationProvider.on("elevation-change",(t=>{null!=this._attachmentOrigin&&M.containsXY(t.extent,this._attachmentOrigin.x,this._attachmentOrigin.y)&&this._updateDisplayBounds()})),at)},a._updateAllManipulatorAvailability=function(){this._forEachManipulator(((t,e)=>this._updateManipulatorAvailability(t,e)))},a._updateManipulatorAvailability=function(t,e){const i=this.grabbing&&!t.grabbing;if(t.interactive=!i,t instanceof R.Manipulator3D){const a=this._graphicState.displaying,n=this.enableZ&&z.canMoveZ(this.graphic);switch(e){case D.ManipulatorType.ROTATE:t.available=a&&this.enableRotation;break;case D.ManipulatorType.SCALE:t.available=a&&(this.enableScaling||this.enableRotation||n),t.interactive=!i&&this.enableScaling,t.state=this.enableScaling?B.resizeNormal:B.resizeOutlineOnly;break;case D.ManipulatorType.TRANSLATE_Z:t.available=a&&n;break;default:t.available=a}}},a._forEachManipulator=function(t){this._graphicMoveManipulation.forEachManipulator(t),this._resizeManipulators.forEach((e=>t(e,D.ManipulatorType.SCALE))),t(this._rotateManipulator,D.ManipulatorType.ROTATE),t(this._moveZManipulator,D.ManipulatorType.TRANSLATE_Z)},a.reset=function(){},a._onGeometryChanged=function(){this._updateDisplayBounds()},a._calculateMapBounds=function(){const t=this.graphic.geometry,e=this._editGeometryOperations.data,i=e.components[0].edges[0],a=y.subtract(b.sv2d.get(),i.leftVertex.pos,i.rightVertex.pos);y.normalize(a,a);const n=P.getGraphicAttachmentOrigin(this.view,this.graphic)??t.extent?.center;let o=n?ot*this.view.pixelSizeAt(n):0;const r=this.view.spatialReference,s=t.spatialReference;r.equals(s)||(o*=c.getMetersPerUnitForSR(r)/c.getMetersPerUnitForSR(s)),j.calculateOrientedBounds(a,e,o,this._mapBounds),this._updateZMax()},a._updateZMax=function(){const t=this._editGeometryOperations.data;if(!t.geometry.hasZ)return void(this._zmax=0);const e=t.coordinateHelper;let i=Number.NEGATIVE_INFINITY;for(const a of t.components)for(const t of a.vertices){const a=e.getZ(t.pos)??0;i=Math.max(a,i)}this._zmax=i},a._updateDisplayBounds=function(){const{geometry:t}=this.graphic;if(null==t)return;const{extent:e}=t;if(!e)return;const i=null==this._outlineVisualElement||this._graphicState.isDraped||null==this._outlineVisualElement.attachmentOrigin?P.getGraphicAttachmentOrigin(this.view,this.graphic):this._outlineVisualElement.attachmentOrigin;this._attachmentOrigin=i??e.center;const a=null!=i?i.z:H.evaluateElevationAlignmentAtPoint(this._mapBounds.origin,this.view.elevationProvider,X.ElevationContext.fromElevationInfo(x.getGraphicEffectiveElevationInfo(this.graphic)),this.view.renderCoordsHelper),n=T.copy(this._mapBounds);n.origin[2]=a??0,j.mapPlaneToRenderPlane(n,this.view.renderCoordsHelper,t.spatialReference,this._displayBoundsMargin,this._displayBounds),this._updateManipulators()},a._createMoveXYGraphicDragPipeline=function(){return this._graphicMoveManipulation.createDragPipeline(((t,e,i)=>this._applyGraphicMoveSteps(e,i,U.ManipulationType.XY)))},a._createMoveZDragPipeline=function(){const t=this.view,e=this._editGeometryOperations.data.spatialReference;return N.createManipulatorDragEventPipeline(this._moveZManipulator,((i,a,n)=>{const o=S.clone(i.renderLocation),r=a.next(G.screenToZConstrained(t,o,e)).next(N.addScreenDelta());this._applyGraphicMoveSteps(r,n,U.ManipulationType.Z)}))},a._applyGraphicMoveSteps=function(t,e,i){const a=t.next((t=>("start"===t.action&&(this.inputState={type:"move"},this._updateOperationStartProperties(),this.emit("graphic-translate-start",{graphic:this.graphic,dxScreen:t.screenDeltaX,dyScreen:t.screenDeltaY})),t))).next(N.addMapDelta()).next(this._moveDragUpdateGeometry()).next((t=>{const e={graphic:this.graphic,dxScreen:t.screenDeltaX,dyScreen:t.screenDeltaY};switch(t.action){case"start":case"update":(t.mapEnd.x-t.mapStart.x||t.mapEnd.y-t.mapStart.y||(t.mapEnd.z??0)-(t.mapStart.z??0))&&this.emit("graphic-translate",e);break;case"end":this.inputState=null,this.emit("graphic-translate-stop",e)}return t})).next((t=>this._updateMoveTooltip(t,i)));return e.next((()=>{null!=this.inputState&&this.emit("graphic-translate-stop",{graphic:this.graphic,dxScreen:0,dyScreen:0}),this._cancel()})),a},a._updateOperationStartProperties=function(){T.copy(this._displayBounds,this._displayBoundsStart),T.copy(this._mapBounds,this._mapBoundsStart),null!=this.graphic.geometry?this._sizeStart=j.mapPlaneAutoHorizontalSizeByElevationMode(this._mapBoundsStart,this._zmax,this.graphic.geometry.spatialReference,this._graphicState.isDraped):this._sizeStart=null},a._moveDragUpdateGeometry=function(){return t=>{if(null==this.inputState||"move"!==this.inputState.type)return t;const e=[];for(const n of this._editGeometryOperations.data.components)e.push(...n.vertices);const i="start"===t.action?q.AccumulationBehaviour.NEW_STEP:q.AccumulationBehaviour.ACCUMULATE_STEPS,a=this._editGeometryOperations.moveVertices(e,t.mapDeltaX,t.mapDeltaY,t.mapDeltaZ,i);return j.apply(a,this._mapBounds),this.graphic.geometry=this._editGeometryOperations.data.geometry,t}},a._updateMoveTooltip=function(t,e){if(e===U.ManipulationType.XY||e===U.ManipulationType.XY_AXIS){const e=tt.autoHorizontalDistanceByElevationModeBetweenPoints(t.mapStart,t.mapEnd,this._graphicState.isDraped?"on-the-ground":"absolute-height");null!=e&&null!=this._moveXYTooltipInfo&&(this._moveXYTooltipInfo.distance=e)}return t},a._onResizeGrab=function({action:t,screenPoint:e}){if("start"!==t||!e)return;const i=this._calculatePickRay(e);E.intersectRay(this._displayBounds.plane,i,b.sv3d.get())&&(this._updateOperationStartProperties(),this._displayBoundsMarginStart=this._displayBoundsMargin,this.inputState={type:"resize"})},a._createResizeDragPipeline=function(t,e){return N.createManipulatorDragEventPipeline(t,((t,i,a)=>{null!=this.inputState&&(i.next((t=>("start"===t.action&&this.emit("graphic-scale-start",{graphic:this.graphic,xScale:1,yScale:1}),t))).next(G.screenToRenderPlane(this.view,this._displayBoundsStart.plane)).next((t=>({...t,handle:e}))).next(this._resizeDragRenderPlaneToFactors()).next(...this._preserveAspectRatio.createDragEventPipelineStep()).next(this._resizeDragUpdateGeometry()).next((t=>{const e={graphic:this.graphic,xScale:t.factor1,yScale:t.factor2};switch(t.action){case"start":case"update":this.emit("graphic-scale",e);break;case"end":this.inputState=null,this.emit("graphic-scale-stop",e)}return t})),a.next((()=>{null!=this.inputState&&this.emit("graphic-scale-stop",{graphic:this.graphic,xScale:1,yScale:1}),this._cancel()})))}))},a._resizeDragRenderPlaneToFactors=function(){return t=>{const e=this._displayBoundsStart,i=t.handle.direction,a=this._displayBoundsMargin,n=this._displayBoundsMarginStart,o=f.copy(b.sv3d.get(),e.origin);f.scaleAndAdd(o,o,e.basis1,-i[0]),f.scaleAndAdd(o,o,e.basis2,-i[1]);const r=f.subtract(b.sv3d.get(),t.renderEnd,o),s=f.subtract(b.sv3d.get(),t.renderStart,o),l=B.isDiagonalResizeHandle(t.handle),p=B.calculateDiagonalResizeHandleScale(e),c=B.calculateDiagonalResizeHandleScale(this._displayBounds)/p,h=(t,e)=>{if(0===t)return 1;let i=f.length(e),o=.5*t*f.dot(e,r)/i;const p=o<0?-1:1;if(l){o+=(i-.5*t*f.dot(e,s)/i)*p*c}const h=i<1.5*n?1:rt;return i=Math.max(i-n,rt),p>0&&(o-=a),p*Math.max(p*(o/i),h)};return{...t,factor1:h(i[0],e.basis1),factor2:h(i[1],e.basis2)}}},a._resizeDragUpdateGeometry=function(){return t=>{const e=f.copy(S.create(),this._mapBoundsStart.origin);f.scaleAndAdd(e,e,this._mapBoundsStart.basis1,-t.handle.direction[0]),f.scaleAndAdd(e,e,this._mapBoundsStart.basis2,-t.handle.direction[1]);const i=y.set(v.create(),this._mapBoundsStart.basis1[0],this._mapBoundsStart.basis1[1]);y.normalize(i,i);const a=[];for(const r of this._editGeometryOperations.data.components)a.push(...r.vertices);const n="start"===t.action?q.AccumulationBehaviour.NEW_STEP:q.AccumulationBehaviour.ACCUMULATE_STEPS,o=this._editGeometryOperations.scaleVertices(a,e,i,t.factor1,t.factor2,n,W.AccumulationType.REPLACE);return T.copy(this._mapBoundsStart,this._mapBounds),j.apply(o,this._mapBounds),this.graphic.geometry=this._editGeometryOperations.data.geometry,t}},a._onRotateGrab=function({action:t,screenPoint:e}){if("start"!==t||!e)return;const i=B.createRotatePlane(this._displayBounds,this.view.renderCoordsHelper,B.RotationAxis.HEADING,E.create()),a=this._calculatePickRay(e);E.intersectRay(i,a,b.sv3d.get())&&(this._updateOperationStartProperties(),this.inputState={type:"rotate",rotatePlane:i})},a._createRotateDragPipeline=function(t){return N.createManipulatorDragEventPipeline(t,((t,e,i)=>{const a=this.inputState;null!=a&&(e.next((t=>("start"===t.action&&this.emit("graphic-rotate-start",{graphic:this.graphic,angle:0}),t))).next(G.screenToRenderPlane(this.view,a.rotatePlane)).next(this._rotateDragRenderPlaneToRotate(a)).next(this._rotateDragUpdateGeometry()).next((t=>{const e={graphic:this.graphic,angle:r.rad2deg(t.rotateAngle)};switch(t.action){case"start":case"update":this.emit("graphic-rotate",e);break;case"end":this.inputState=null,this.emit("graphic-rotate-stop",e)}return t})),i.next((()=>{null!=this.inputState&&this.emit("graphic-rotate-stop",{graphic:this.graphic,angle:0}),this._cancel()})))}))},a._rotateDragRenderPlaneToRotate=function(t){return e=>{const i=E.normal(t.rotatePlane),a=P.calculateInputRotationTransform(e.renderStart,e.renderEnd,this._displayBounds.origin,i);return{...e,rotateAxis:i,rotateAngle:a}}},a._rotateDragUpdateGeometry=function(){return t=>{const e=f.copy(S.create(),this._mapBoundsStart.origin),i=[];for(const o of this._editGeometryOperations.data.components)i.push(...o.vertices);const a="start"===t.action?q.AccumulationBehaviour.NEW_STEP:q.AccumulationBehaviour.ACCUMULATE_STEPS,n=this._editGeometryOperations.rotateVertices(i,e,t.rotateAngle,a,W.AccumulationType.REPLACE);return T.copy(this._mapBoundsStart,this._mapBounds),j.apply(n,this._mapBounds),this.graphic.geometry=this._editGeometryOperations.data.geometry,t}},a._calculatePickRay=function(t){const e=A.create(),i=p.screenPointObjectToArray(t);return L.fromScreen(this.view.state.camera,i,e),f.normalize(e.direction,e.direction),e},a._updateManipulators=function(){if(!this.visible)return;const t=B.calculateBoundedPlaneTranslateRotate(this._displayBounds,b.sm4d.get());B.updateRotateHeadingHandle(this._rotateManipulator,t,this._displayBounds,this.view.renderCoordsHelper),this._updateZMoveHandle(this._moveZManipulator,t),this._resizeManipulators.forEach(((e,i)=>{B.updateResizeHandle(e,this._resizeHandles[i],t,this._displayBounds)}))},a._updateZMoveHandle=function(t,e){const i=this._displayBounds,a={basis:i.basis1,direction:-1,position:f.subtract(b.sv3d.get(),i.origin,i.basis1),edge:2},n=b.sm4d.get();m.rotateZ(n,e,a.edge*Math.PI/2),n[12]=0,n[13]=0,n[14]=0,t.modelTransform=n,t.renderLocation=a.position},a._cancel=function(){const t=this._editGeometryOperations.lastOperation;null!=t&&(this._editGeometryOperations.undo(),this.graphic.geometry=this._editGeometryOperations.data.geometry,j.unapply(t,this._mapBounds),this._updateDisplayBounds(),this.inputState=null)},a.undo=function(){if(null!=this.inputState)this.view.activeTool=null;else if(this.canUndo){const t=this._editGeometryOperations.undo();this.graphic.geometry=this._editGeometryOperations.data.geometry,j.unapply(t,this._mapBounds),this._updateDisplayBounds()}},a.redo=function(){if(this.canRedo){const t=this._editGeometryOperations.redo();this.graphic.geometry=this._editGeometryOperations.data.geometry,j.apply(t,this._mapBounds),this._updateDisplayBounds()}},e._createClass(i,[{key:"preserveAspectRatio",get:function(){return this._preserveAspectRatio.enabled},set:function(t){this._preserveAspectRatio.enabled=t,this._set("preserveAspectRatio",t)}},{key:"_moveUnit",get:function(){return c.lengthUnitFromSpatialReference(this.view.spatialReference)??"meters"}},{key:"_displayBoundsMargin",get:function(){const t=this.view.pointsOfInterest,e=t?t.centerOnSurfaceFrequent.location:this._editGeometryOperations.data.geometry.extent?.center;return e?nt*this.view.pixelSizeAt(e):0}},{key:"canUndo",get:function(){return this._editGeometryOperations.canUndo}},{key:"canRedo",get:function(){return this._editGeometryOperations.canRedo}},{key:"test",get:function(){return{resizeManipulators:this._resizeManipulators,rotateManipulator:this._rotateManipulator,moveZManipulator:this._moveZManipulator,tooltip:this._tooltip}}}]),i}(a.EventedMixin(V.InteractiveToolBase)),i.__decorate([h.property({constructOnly:!0,nonNullable:!0})],t.ExtentTransformTool.prototype,"view",void 0),i.__decorate([h.property({constructOnly:!0,nonNullable:!0})],t.ExtentTransformTool.prototype,"graphic",void 0),i.__decorate([h.property({constructOnly:!0,nonNullable:!0})],t.ExtentTransformTool.prototype,"enableZ",void 0),i.__decorate([h.property()],t.ExtentTransformTool.prototype,"enableRotation",void 0),i.__decorate([h.property()],t.ExtentTransformTool.prototype,"enableScaling",void 0),i.__decorate([h.property({constructOnly:!0,type:J})],t.ExtentTransformTool.prototype,"tooltipOptions",void 0),i.__decorate([h.property()],t.ExtentTransformTool.prototype,"preserveAspectRatio",null),i.__decorate([h.property()],t.ExtentTransformTool.prototype,"grabbing",void 0),i.__decorate([h.property()],t.ExtentTransformTool.prototype,"inputState",void 0),i.__decorate([h.property({readOnly:!0})],t.ExtentTransformTool.prototype,"type",void 0),i.__decorate([h.property()],t.ExtentTransformTool.prototype,"_moveUnit",null),t.ExtentTransformTool=i.__decorate([g.subclass("esri.views.3d.interactive.editingTools.graphicTransform3D.ExtentTransformTool")],t.ExtentTransformTool);const at="draped-elevation-changes",nt=10,ot=80,rt=1e-6;t.EPSILON=rt,Object.defineProperty(t,Symbol.toStringTag,{value:"Module"})}));
