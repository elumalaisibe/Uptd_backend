/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/mat4","../../../chunks/vec3","../../../chunks/vec4f64","../../../geometry/support/vectorStacks","../../../layers/graphics/hydratedFeatures","./Manipulator3D","./RenderObject","../layers/graphics/graphicUtils","../webgl-engine/lib/Attribute","../webgl-engine/lib/basicInterfaces","../webgl-engine/lib/Geometry","../webgl-engine/lib/GeometryUtil","../webgl-engine/lib/Material","../webgl-engine/lib/VertexAttribute","../webgl-engine/materials/ColorMaterial","../webgl-engine/materials/ImageMaterial","../webgl-engine/materials/NativeLineMaterial","../webgl-engine/materials/RibbonLineMaterial","../webgl-engine/materials/ShadedColorMaterial","../../interactive/interfaces"],(function(e,t,a,n,r,l,i,c,o,u,s,d,g,p,b,m,M,O,w,h,f){"use strict";function F(e,t=p.RenderOccludedFlag.OccludeAndTransparent,a=!0){const r=n.fromValues(e[0],e[1],e[2],e.length>3?e[3]:1),l=e[3]<1,i=!l;return a?new h.ShadedColorMaterial({color:r,transparent:l,writeDepth:i,cullFace:s.CullFaceOptions.Back,renderOccluded:t}):new m.ColorMaterial({color:r,transparent:l,writeDepth:i,cullFace:s.CullFaceOptions.Back,renderOccluded:t})}function S(e,t=p.RenderOccludedFlag.OccludeAndTransparent){const a=n.fromValues(e[0],e[1],e[2],4===e.length?e[3]:1);return new m.ColorMaterial({color:a,transparent:!0,writeDepth:!0,cullFace:s.CullFaceOptions.Front,renderOccluded:t})}const y=Object.freeze({calloutLength:40,calloutWidth:1,discRadius:27,focusMultiplier:1.1});function R(e,t){const a=new i.Manipulator3D({view:e,autoScaleRenderObjects:!1,collisionPriority:1,metadata:t.metadata});return v(a,t),a}function v(e,t){const a=t.material??new M.ImageMaterial({transparent:!0,writeDepth:!1,textureId:t.texture?.id,renderOccluded:p.RenderOccludedFlag.Opaque}),n=t.focusMultiplier??y.focusMultiplier,r=t.calloutLength??y.calloutLength,l=y.discRadius*(t.discScale??1),i=l*n,o=(e,t)=>{const a=[0,1,2,2,3,0];return new d.Geometry(t,[[b.VertexAttribute.POSITION,new u.Attribute([r-e,-e,0,r+e,-e,0,r+e,e,0,r-e,e,0],3,!0)],[b.VertexAttribute.UV0,new u.Attribute([0,0,1,0,1,1,0,1],2,!0)]],[[b.VertexAttribute.POSITION,a],[b.VertexAttribute.UV0,a]])},s=t.calloutWidth??y.calloutWidth,m=new(s>1?w.RibbonLineMaterial:O.NativeLineMaterial)({width:s,color:t.calloutColor,renderOccluded:p.RenderOccludedFlag.OccludeAndTransparent}),h=g.createPolylineGeometry(m,[[0,0,0],[r-l,0,0]]),F=g.createPolylineGeometry(m,[[0,0,0],[r-i,0,0]]),S=t.customStateMask??f.ManipulatorStateCustomFlags.None;e.collisionType={type:"disc",direction:[0,0,1],offset:[r,0,0]},e.focusMultiplier=n,e.metadata=t.metadata,e.radius=l,e.renderObjects=[new c.RenderObject(o(l,a),f.ManipulatorStateFlags.Unfocused|S),new c.RenderObject(h,f.ManipulatorStateFlags.Unfocused|S),new c.RenderObject(o(i,a),f.ManipulatorStateFlags.Focused|S),new c.RenderObject(F,f.ManipulatorStateFlags.Focused|S)]}function A(e,t,a=f.ManipulatorStateCustomFlags.None){const n=F(t),r=[new c.RenderObject(g.createSphereGeometry(n,1,32,32),a)];return new i.Manipulator3D({view:e,renderObjects:r})}const j=Object.freeze({autoScaleRenderObjects:!1,worldSized:!0});function C(e,n,l,i){const c=a.subtract(r.sv3d.get(),e,l),o=G(c,a.cross(r.sv3d.get(),i,c),l,r.sm4d.get());t.invert(o,o);const u=a.transformMat4(r.sv3d.get(),n,o);return Math.atan2(u[1],u[0])}function G(e,t,n,l){const i=a.normalize(r.sv3d.get(),e),c=a.normalize(r.sv3d.get(),t),o=a.cross(r.sv3d.get(),i,c);return l[0]=i[0],l[1]=i[1],l[2]=i[2],l[3]=0,l[4]=c[0],l[5]=c[1],l[6]=c[2],l[7]=0,l[8]=o[0],l[9]=o[1],l[10]=o[2],l[11]=0,l[12]=n[0],l[13]=n[1],l[14]=n[2],l[15]=1,l}function V(e,t){const a=e.getViewForGraphic(t);return null!=a&&"computeAttachmentOrigin"in a?a.computeAttachmentOrigin(t,e.spatialReference):null}function I(e,t,a){const n=V(e,a);null==n?T(t,a.geometry):t.elevationAlignedLocation=n}function T(e,t){if(null==t)return;const a="mesh"===t.type?t.anchor:o.computeCentroid(t);null!=a&&(e.location=l.hydrateGeometry(a))}e.calculateInputRotationTransform=C,e.calculateTranslateRotateFromBases=G,e.createManipulatorMaterial=F,e.createManipulatorOutlineMaterial=S,e.createRotateManipulator=R,e.createSphereManipulator=A,e.getGraphicAttachmentOrigin=V,e.placeAtGraphic=I,e.updateRotateManipulator=v,e.worldScaledManipulatorSettings=j,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
