/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["../../../../../chunks/_rollupPluginBabelHelpers","../../../../../chunks/tslib.es6","../../../../../core/Handles","../../../../../core/maybe","../../../../../core/memoize","../../../../../core/promiseUtils","../../../../../core/reactiveUtils","../../../../../core/accessorSupport/decorators/property","../../../../../core/accessorSupport/ensureType","../../../../../core/arrayUtils","../../../../../core/has","../../../../../core/accessorSupport/decorators/subclass","../../../../../core/support/WatchUpdatingTracking","../../../../../geometry/Point","../../../../../layers/graphics/hydratedFeatures","../../../analysis/support/measurementUtils","../../SnappingVisualizer3D","../../editingTools/dragEventPipeline3D","./AreaMeasurement3DView","../support/PickRequest","../../../../interactive/AnalysisToolBase","../../../../interactive/coordinateHelper","../../../../interactive/dragEventPipeline","../../../../interactive/ManipulatorCollection","../../../../interactive/editGeometry/EditGeometry","../../../../interactive/editGeometry/EditGeometryOperations","../../../../interactive/snapping/SceneSnappingManagerPool","../../../../interactive/snapping/SnappingContext","../../../../interactive/snapping/SnappingDragPipelineStep","../../../../interactive/snapping/SnappingOperation","../../../../interactive/snapping/snappingUtils","../../../../support/screenUtils"],(function(t,e,n,i,a,s,o,r,p,l,c,d,u,g,h,y,m,_,v,w,f,P,S,M,V,D,k,b,x,O,A,C){"use strict";let E=function(e){function r(t){var i;return(i=e.call(this,t)||this)._handles=new n,i._updatingHandles=new u.WatchUpdatingTracking,i.polygonState="initial",i.manipulators=new M.ManipulatorCollection,i._getSnappingContext=a.memoize((t=>new b.SnappingContext({elevationInfo:{mode:"absolute-height",offset:0},pointer:t,editGeometryOperations:new D.EditGeometryOperations(new V.EditGeometry("point",P.createCoordinateHelper(!0,!1,i.view.spatialReference))),visualizer:new m.SnappingVisualizer3D}))),i}t._inherits(r,e);var p=r.prototype;return p.initialize=function(){const{view:t,analysisViewData:e,manipulators:n,visible:i}=this;this.measurementView=new v({view:t,analysisViewData:e,toolState:this,manipulators:n,visible:i});const a=k.acquire(t);this._snappingManagerResult=a,this._handles.add(a),this._snappingOperation=new O.SnappingOperation({view:t}),this._updatingHandles.add((()=>this.stagedPoint),(t=>{this.analysisViewData.cursorPoint=null!=t?h.clonePoint(t,new g):null}),o.syncAndInitial),A.setupSnappingToggleHandles(this,(()=>{const t=this.view.inputManager.latestPointerType??"mouse",e=this._getSnappingContext(t);this._updatingHandles.addPromise(s.ignoreAbortErrors(this._snappingOperation.resnap(this._snappingManager,e)))})),this._setupManipulators(),this._handles.add(o.watch((()=>this.state),(t=>{"measured"===t&&this.finishToolCreation()}),o.syncAndInitial))},p.destroy=function(){this.measurementView.destroy(),this._set("measurementView",null),this._handles=i.destroyMaybe(this._handles),this._updatingHandles=i.destroyMaybe(this._updatingHandles)},p.finishMeasurement=function(){const{path:t}=this.analysisViewData;t.numVertices<3?(t.clear(),this.polygonState="initial"):(t.close(),this.polygonState="measured"),this._resetSnappingState()},p.onShow=function(){this.measurementView.show()},p.onHide=function(){this.measurementView.hide()},p.onDeactivate=function(){this._resetSnappingState()},p.onInputEvent=function(t){switch(t.type){case"immediate-double-click":this._handleImmediateDoubleClick(t);break;case"immediate-click":this._handleImmediateClick(t);break;case"pointer-move":this._handlePointerMove(t);break;case"drag":this._handleDrag(t);break;case"key-down":this._handleKeyDown(t)}},p._setupManipulators=function(){const t=t=>t.events.on("grab-changed",(()=>{if(this.analysisViewData.validMeasurement){const t=this.manipulators.some((t=>t.manipulator.grabbing));this.polygonState=t?"editing":"measured"}})),e=e=>{this._handles.add([S.createManipulatorDragEventPipeline(e,((t,e,n,i)=>{const a=_.hideManipulatorWhileDragging(t),s=t.metadata,o=this._snappingManager,r=this._getSnappingContext(i),p=this._updatingHandles,{snappingStep:l,cancelSnapping:c}=x.createSnapDragEventPipelineStep({snappingManager:o,snappingContext:r,updatingHandles:p});n=n.next(a).next((e=>(this.analysisViewData.lastDraggedVertex=null,this.analysisViewData.path.setVertexPosition(s,d),t.location=d,e))).next(c),e.next(a).next(_.screenToMap3D(this.view)).next(...l).next((e=>{t.location=e.mapEnd,this.analysisViewData.lastDraggedVertex="end"===e.action?null:s,this.analysisViewData.path.setVertexPosition(s,h.clonePoint(e.mapEnd))}));const d=h.clonePoint(this.analysisViewData.path.getVertexPositionAsPoint(s))})),t(e)],e)};this.manipulators.forEach((({manipulator:t})=>{e(t)})),this._handles.add([this.manipulators.on("after-add",(({item:{manipulator:t}})=>{e(t)})),this.manipulators.on("after-remove",(({item:{manipulator:t}})=>this._handles.remove(t)))])},p._handleImmediateDoubleClick=function(t){y.isPrimaryPointerAction(t)&&("drawing"===this.polygonState&&this.finishMeasurement(),t.stopPropagation())},p._handleDrag=function(t){"editing"===this.polygonState&&t.stopPropagation()},p._handleImmediateClick=function(t){if(!y.isPrimaryPointerAction(t))return;const e=C.createScreenPointFromEvent(t),{pointerType:n}=t;if(this.active)switch(this.polygonState){case"initial":if(this._addVertexAt(e,n))return this.stagedPoint=null,this.polygonState="drawing",void t.stopPropagation();break;case"drawing":{const i=this.measurementView.vertexHandleAt(e,n);if(null==i){if(this._addVertexAt(e,n))return this.stagedPoint=null,void t.stopPropagation()}else 0===i.index&&(this.finishMeasurement(),t.stopPropagation());break}}"mouse"===t.pointerType&&this._hoverAt(e)},p._handlePointerMove=function(t){if("mouse"===t.pointerType){const e=C.createScreenPointFromEvent(t);this._hoverAt(e)}},p._handleKeyDown=function(t){"Enter"===t.key&&"drawing"===this.polygonState&&(this.finishMeasurement(),t.stopPropagation())},p._hoverAt=function(t){const{polygonState:e}=this;if(this.active&&("initial"===e||"drawing"===e)){const e=this._pick(t);if(null!=e&&null!=e.mapPoint){const t=this._getSnappingContext("mouse");this._updatingHandles.addPromise(s.ignoreAbortErrors(this._snappingOperation.snap({point:e.mapPoint},this._snappingManager,t)))}}else this.stagedPoint=null},p._addVertexAt=function(t,e){const n=this._pick(t);if(null!=n&&null!=n.mapPoint){const{mapPoint:t}=n,i=this._getSnappingContext(e),a=this._snappingOperation.update({point:t},this._snappingManager,i),s=h.clonePoint(a,new g);return this.analysisViewData.path.add(s),!0}return!1},p._pick=function(t){const e=new w.PickRequest(t);return this.measurementView.pick(e)},p._resetSnappingState=function(){this._snappingManager.doneSnapping(),this._snappingOperation.abort(),this._snappingOperation.stagedPoint=null},t._createClass(r,[{key:"_snappingManager",get:function(){return this._snappingManagerResult.snappingManager}},{key:"state",get:function(){return 0===this.analysisViewData.path.numVertices?"ready":this.analysisViewData.validMeasurement&&"editing"!==this.polygonState?"measured":"measuring"}},{key:"cursor",get:function(){return"ready"===this.state||"drawing"===this.polygonState?"crosshair":null}},{key:"updating",get:function(){return this._updatingHandles.updating||this._snappingManager.updating}},{key:"stagedPoint",get:function(){return this._snappingOperation.stagedPoint},set:function(t){this._snappingOperation.stagedPoint=t}},{key:"snappingOptions",get:function(){return this._snappingManager.options}},{key:"test",get:function(){return{snappingManager:this._snappingManager}}}]),r}(f.AnalysisToolBase);e.__decorate([r.property({readOnly:!0})],E.prototype,"state",null),e.__decorate([r.property()],E.prototype,"polygonState",void 0),e.__decorate([r.property({readOnly:!0})],E.prototype,"cursor",null),e.__decorate([r.property()],E.prototype,"measurementView",void 0),e.__decorate([r.property({constructOnly:!0})],E.prototype,"view",void 0),e.__decorate([r.property({constructOnly:!0})],E.prototype,"analysis",void 0),e.__decorate([r.property({constructOnly:!0})],E.prototype,"analysisViewData",void 0),e.__decorate([r.property({readOnly:!0})],E.prototype,"manipulators",void 0),e.__decorate([r.property()],E.prototype,"updating",null),e.__decorate([r.property()],E.prototype,"stagedPoint",null),e.__decorate([r.property()],E.prototype,"snappingOptions",null),E=e.__decorate([d.subclass("esri.views.3d.interactive.measurementTools.areaMeasurement3D.AreaMeasurement3DTool")],E);return E}));
