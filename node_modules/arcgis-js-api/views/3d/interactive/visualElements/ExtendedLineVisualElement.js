/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../../chunks/_rollupPluginBabelHelpers","../../../../core/has","../../../../chunks/vec3","../../../../chunks/vec3f64","../../../../chunks/vec4","../../../../chunks/vec4f32","../../../../geometry/support/clipRay","../../../../geometry/support/frustum","../../../../geometry/support/lineSegment","../../../../geometry/support/ray","./EngineVisualElement","./LaserlineVisualElement","../../terrain/OverlayRenderer","../../webgl-engine/lib/GeometryUtil","../../webgl-engine/lib/Material","../../webgl-engine/lib/RenderGeometry","../../webgl-engine/lib/VertexAttribute","../../webgl-engine/materials/RibbonLineMaterial"],(function(e,t,i,n,r,s,o,a,l,c,u,d,h,_,p,f,y,m,g){"use strict";let b=function(i){function d(t){var n;return(n=i.call(this,t)||this)._ray=u.create(),n._isWorldDown=!1,n._start=r.create(),n._end=r.fromValues(1,0,0),n._width=1,n._color=o.fromValues(1,0,1,1),n._polygonOffset=!1,n._writeDepthEnabled=!0,n._innerWidth=0,n._innerColor=o.fromValues(1,1,1,1),n._stipplePattern=null,n._stippleOffColor=null,n._stipplePreferContinuous=!0,n._falloff=0,n._extensionType=e.ExtensionType.LINE,n._laserlineStyle=null,n._laserlineEnabled=!1,n._renderOccluded=f.RenderOccludedFlag.OccludeAndTransparent,n._fadedExtensions=w,n._laserline=new h.LaserlineVisualElement({view:n.view}),n.applyProps(t),n}t._inherits(d,i);var b=d.prototype;return b.destroy=function(){this._laserline.destroy(),t._get(t._getPrototypeOf(d.prototype),"destroy",this).call(this)},b.createObject3DResourceFactory=function(e){return{view:e,createResources:e=>this._createObject3DResources(e),destroyResources:e=>this._destroyExternalResources(e),recreateGeometry:(e,t)=>this._recreateObject3DGeometry(e,t),cameraChanged:()=>this._updateGeometry()}},b.createDrapedResourceFactory=function(e){return{view:e,createResources:()=>this._createDrapedResources(),destroyResources:e=>this._destroyExternalResources(e),recreateGeometry:e=>this._recreateDrapedGeometry(e)}},b.updateVisibility=function(e){t._get(t._getPrototypeOf(d.prototype),"updateVisibility",this).call(this,e),this._laserline.visible=e},b.onAttachedChange=function(){this._laserline.attached=this._laserlineAttached},b.setStartEndFromWorldDownAtLocation=function(e){this._isWorldDown=!0,n.copy(this._start,e),this.view.renderCoordsHelper.worldUpAtPosition(e,this._end),n.subtract(this._end,e,this._end),u.fromPoints(this._start,this._end,this._ray),this._updateGeometry()},b._updateMaterial=function(){const{materialParameters:e}=this;this.object3dResources.resources?.material.setParameters(e),this.drapedResources.resources?.material.setParameters(e)},b._createObject3DResources=function(e){const t=new g.RibbonLineMaterial(this.materialParameters),i=new Array;return this._createObject3DGeometry(t,e,i),{material:t,geometries:i,forEach:e=>{e(t),i.forEach(e)}}},b._destroyExternalResources=function(e){e.geometries=[],e.material.dispose()},b._recreateObject3DGeometry=function(e,t){e.geometries.length=0,this._createObject3DGeometry(e.material,t,e.geometries)},b._createObject3DGeometry=function(e,t,i){const n=this._createGeometry(e);i.push(n),t.addGeometry(n),this._updateVerticesObject3D(t)},b._createDrapedResources=function(){const e=new g.RibbonLineMaterial(this.materialParameters);return{material:e,geometries:[this._createDrapedGeometry(e)]}},b._recreateDrapedGeometry=function(e){e.geometries=[this._createDrapedGeometry(e.material)]},b._createDrapedGeometry=function(e){const t=this._createGeometry(e);return this._updateVerticesDraped(t),new y.RenderGeometry(t)},b._createGeometry=function(t){const i=this.extensionType===e.ExtensionType.FADED,n=i?[r.create(),r.create(),r.create(),r.create()]:[r.create(),r.create()],s=i?[1,1,1,0,1,1,1,1,1,1,1,1,1,1,1,0]:null;return p.createPolylineGeometry(t,n,null,s)},b._updateGeometry=function(){if(this.isDraped)this.drapedResources.recreateGeometry();else{const e=this.object3dResources.object;e&&this._updateVerticesObject3D(e)}},b._updateVerticesObject3D=function(e){const t=this._lineSegment;this._updateVertexAttributesObject3D(e,t),this._laserline.intersectsLine=t},b._updateVerticesDraped=function(e){this._updateVertexAttributesDraped(e,this._lineSegment)},b._updateLineSegmentFinite=function(e){return c.fromPoints(this._start,this._end,e)},b._updateLineSegmentInfinite=function(t,i){const r=this.view.state.camera;switch(a.fromRay(this._ray,E),t){case e.ExtensionType.LINE:E.c0=-Number.MAX_VALUE;break;case e.ExtensionType.RAY:case e.ExtensionType.GROUND_RAY:{const t=this._ray.origin,i=this.view.elevationProvider.getElevation(t[0],t[1],t[2],this.view.renderCoordsHelper.spatialReference,"ground")??0,r=this.view.renderCoordsHelper.getAltitude(t);this._isWorldDown&&r<i&&n.negate(E.ray.direction,E.ray.direction),this._extensionType===e.ExtensionType.GROUND_RAY&&null!=i&&(E.c1=Math.abs(r-i));break}}if(!l.intersectClipRay(r.frustum,E))return this._updateLineSegmentFinite(i);const s=a.getStart(E,D),o=a.getEnd(E,O);return c.fromPoints(s,o,i)},b._updateVertexAttributesObject3D=function(e,t){const i=e.geometries[0].getMutableAttribute(m.VertexAttribute.POSITION)?.data;if(!i)return;let n=0;for(const r of this._lineVertices(t))i[n++]=r[0],i[n++]=r[1],i[n++]=r[2];e.geometryVertexAttrsUpdated(e.geometries[0])},b._updateVertexAttributesDraped=function(e,t){const i=e.getMutableAttribute(m.VertexAttribute.POSITION)?.data;if(!i)return;let n=0;for(const r of this._lineVertices(t))i[n++]=r[0],i[n++]=r[1],i[n++]=_.DRAPED_Z;e.invalidateBoundingInfo()},b._lineVertices=function*(t){this.extensionType===e.ExtensionType.FADED?(yield c.pointAt(t,-this.fadedExtensions.start,D),yield c.pointAt(t,0,D),yield c.pointAt(t,1,D),yield c.pointAt(t,1+this.fadedExtensions.end,D)):(yield c.pointAt(t,0,D),yield c.pointAt(t,1,D))},t._createClass(d,[{key:"start",get:function(){return this._start},set:function(e){this._isWorldDown=!1,n.exactEquals(this._start,e)||(n.copy(this._start,e),u.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"end",get:function(){return this._end},set:function(e){this._isWorldDown=!1,n.exactEquals(this._end,e)||(n.copy(this._end,e),u.fromPoints(this._start,this._end,this._ray),this._updateGeometry())}},{key:"width",get:function(){return this._width},set:function(e){e!==this._width&&(this._width=e,this._updateMaterial())}},{key:"color",get:function(){return this._color},set:function(e){s.exactEquals(e,this._color)||(s.copy(this._color,e),this._updateMaterial())}},{key:"polygonOffset",get:function(){return this._polygonOffset},set:function(e){e!==this._polygonOffset&&(this._polygonOffset=e,this._updateMaterial())}},{key:"writeDepthEnabled",get:function(){return this._writeDepthEnabled},set:function(e){this._writeDepthEnabled!==e&&(this._writeDepthEnabled=e,this._updateMaterial())}},{key:"innerWidth",get:function(){return this._innerWidth},set:function(e){e!==this._innerWidth&&(this._innerWidth=e,this._updateMaterial())}},{key:"innerColor",get:function(){return this._innerColor},set:function(e){s.exactEquals(e,this._innerColor)||(s.copy(this._innerColor,e),this._updateMaterial())}},{key:"stipplePattern",get:function(){return this._stipplePattern},set:function(e){const t=null!=e!=(null!=this._stipplePattern);this._stipplePattern=e,t?this.recreate():this._updateMaterial()}},{key:"stippleOffColor",get:function(){return this._stippleOffColor},set:function(e){null!=e&&null!=this._stippleOffColor&&s.exactEquals(e,this._stippleOffColor)||(this._stippleOffColor=null!=e?o.clone(e):null,this._updateMaterial())}},{key:"stipplePreferContinuous",get:function(){return this._stipplePreferContinuous},set:function(e){e!==this._stipplePreferContinuous&&(this._stipplePreferContinuous=e,this._updateMaterial())}},{key:"falloff",get:function(){return this._falloff},set:function(e){e!==this._falloff&&(this._falloff=e,this._updateMaterial())}},{key:"extensionType",get:function(){return this._extensionType},set:function(e){e!==this._extensionType&&(this._extensionType=e,this.recreateGeometry())}},{key:"_laserlineAttached",get:function(){return this._laserlineEnabled&&null!=this._laserlineStyle&&this.attached&&!this.isDraped}},{key:"laserlineStyle",get:function(){return this._laserlineStyle},set:function(e){this._laserlineStyle=e,this._laserline.attached=this._laserlineAttached,null!=e&&(this._laserline.style=e)}},{key:"laserlineEnabled",get:function(){return this._laserlineEnabled},set:function(e){this._laserlineEnabled!==e&&(this._laserlineEnabled=e,this._laserline.attached=this._laserlineAttached)}},{key:"renderOccluded",get:function(){return this._renderOccluded},set:function(e){e!==this._renderOccluded&&(this._renderOccluded=e,this._updateMaterial())}},{key:"_normalizedRenderOccluded",get:function(){return this.isDraped&&this._renderOccluded===f.RenderOccludedFlag.OccludeAndTransparentStencil?f.RenderOccludedFlag.OccludeAndTransparent:this._renderOccluded}},{key:"fadedExtensions",get:function(){return this._fadedExtensions},set:function(e){this._fadedExtensions=e??w,this.recreateGeometry()}},{key:"materialParameters",get:function(){return{width:this._width,color:this._color,stippleOffColor:this._stippleOffColor,stipplePattern:this._stipplePattern,stipplePreferContinuous:this._stipplePreferContinuous,innerWidth:this._innerWidth,innerColor:this._innerColor,falloff:this._falloff,hasPolygonOffset:this._polygonOffset,renderOccluded:this._normalizedRenderOccluded,writeDepth:this._writeDepthEnabled}}},{key:"_lineSegment",get:function(){return this._extensionType===e.ExtensionType.FADED?this._updateLineSegmentFinite(x):this._updateLineSegmentInfinite(this._extensionType,x)}}]),d}(d.EngineVisualElement);const E=a.create(),D=r.create(),O=r.create(),x=c.create();var R;e.ExtensionType=void 0,(R=e.ExtensionType||(e.ExtensionType={}))[R.LINE=0]="LINE",R[R.RAY=1]="RAY",R[R.GROUND_RAY=2]="GROUND_RAY",R[R.FADED=3]="FADED";const A=1/3,w={start:A,end:A};e.ExtendedLineVisualElement=b,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
