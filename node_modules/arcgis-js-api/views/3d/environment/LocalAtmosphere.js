/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../../chunks/_rollupPluginBabelHelpers","../../../core/maybe","../../../chunks/mat4","../../../chunks/mat4f64","./AtmosphereType","../../../chunks/SimpleAtmosphere.glsl","./SimpleAtmosphereTechnique","./SimpleAtmosphereTechniqueConfiguration","./resources/SimpleAtmosphereTexture","../support/buffer/glUtil","../support/buffer/InterleavedLayout","../webgl-engine/lib/DefaultVertexAttributeLocations","../webgl-engine/lib/GeometryUtil","../webgl-engine/lib/VertexArrayObject","../webgl-engine/lib/VertexAttribute","../../webgl/BufferObject","../../webgl/enums","../../webgl/Texture","../../webgl/TextureDescriptor","../../webgl/Util"],(function(e,t,r,i,s,o,n,a,u,c,l,h,p,m,b,f,g,y,x,A,_){"use strict";let d=function(){function e(e,t){this.type=o.AtmosphereType.Local,this._configuration=new u.SimpleAtmosphereTechniqueConfiguration,this._passParameters=new n.SimpleAtmospherePassParameters,this._configuration.geometry=u.SimpleAtmosphereGeometry.Cylinder,this._technique=t.techniqueRepository.acquire(a.SimpleAtmosphereTechnique,this._configuration);const r=t.renderContext.rctx;this._vao=this._createVertexArrayObject(r),this._vaoCount=_.vertexCount(this._vao,"geometry");const i=new A.TextureDescriptor;i.wrapMode=y.TextureWrapMode.CLAMP_TO_EDGE,i.flipped=!0,i.width=1,i.height=512,this._passParameters.texture=new x.Texture(r,i,c.earthAtmosphereTextureSimple)}var i=e.prototype;return i.destroy=function(){this._passParameters.texture=r.disposeMaybe(this._passParameters.texture),this._vao.dispose(),this._technique.release()},i.render=function(e){const t=e.rctx,r=t.bindTechnique(this._technique,this._passParameters,e.bindParameters);T(w,e.bindParameters.camera.viewMatrix),r.setUniformMatrix4fv("view",w),t.bindVAO(this._vao),r.assertCompatibleVertexAttributeLocations(this._vao),t.drawArrays(y.PrimitiveType.TRIANGLES,0,this._vaoCount)},i.renderHaze=function(){return!1},i._createVertexArrayObject=function(e){const t=m.createPolySphereData(1,2,!1),r=t.indices[0][1],i=t.vertexAttributes[0][1];for(let a=0;a<r.length;a+=3){const e=r[a];r[a]=r[a+2],r[a+2]=e}const s=i.data,o=v.createBuffer(r.length),n=o.position;for(let a=0;a<r.length;++a){const e=3*r[a];n.set(a,0,s[e]),n.set(a,1,s[e+1]),n.set(a,2,s[e+2])}return new b.VertexArrayObject(e,p.Default3D,{geometry:l.glLayout(v)},{geometry:g.BufferObject.createVertex(e,y.Usage.STATIC_DRAW,o.buffer)})},t._createClass(e)}();function T(e,t){i.copy(e,t),e[12]=0,e[13]=0,e[14]=0,e[15]=1}const w=s.create(),v=h.newLayout().vec3f(f.VertexAttribute.POSITION);e.LocalAtmosphere=d,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
