/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../chunks/tslib.es6","../../core/Evented","../../core/HandleOwner","../../core/lang","../../core/maybe","../../core/promiseUtils","../../core/reactiveUtils","../../core/screenUtils","../../core/accessorSupport/decorators/property","../../core/accessorSupport/ensureType","../../core/accessorSupport/decorators/subclass","../../core/accessorSupport/diffUtils","../../layers/graphics/dehydratedFeatureComparison","../../support/elevationInfoUtils","../ViewingMode","./DrawingMode","./DrawManipulator","../interactive/coordinateHelper","../interactive/dragEventPipeline","../interactive/editGeometry/EditGeometry","../interactive/editGeometry/EditGeometryOperations","../interactive/sketch/SketchLabelOptions","../interactive/sketch/SketchTooltipOptions","../interactive/snapping/SnappingContext","../interactive/snapping/SnappingDragPipelineStep","../interactive/snapping/SnappingOperation","../interactive/snapping/snappingUtils"],(function(e,t,n,i,r,o,a,s,p,c,l,d,h,u,g,y,m,_,v,f,x,w,O,S,D,b,V,M,T){"use strict";function P(e,t,n){const i=e.x-t.x,r=e.y-t.y;return i*i+r*r<=n}e.DrawOperation=function(e){function n(t){var n;return(n=e.call(this,t)||this)._createOperationCompleted=!1,n._pointerDownStates=new Set,n._stagedScreenPoint=null,n._stagedPointerType=null,n.isDraped=!0,n.labelOptions=new S,n.tooltipOptions=new D,n.cursor=null,n.loading=!1,n.snapToSceneEnabled=null,n.lastVertex=null,null==t.elevationInfo&&(n.elevationInfo=y.getEffectiveElevationInfo(!!t.hasZ)),n}t._inherits(n,e);var i=n.prototype;return i.initialize=function(){const{geometryType:e,view:t}=this,n=t.spatialReference,i="viewingMode"in t.state?t.state.viewingMode:m.ViewingMode.Local,r="segment"===e||"multipoint"===e?"polyline":e;this.coordinateHelper=f.createCoordinateHelper(this.hasZ,this.hasM,n),this._editGeometryOperations=new O.EditGeometryOperations(new w.EditGeometry(r,this.coordinateHelper)),this._snappingOperation=new M.SnappingOperation({view:t,constrainResult:e=>null==e?e:this._getEffectiveDrawSurface()?.constrainZ(e)}),this.addHandles([p.watch((()=>this.stagedVertex),(e=>{null!=e&&this.emit("cursor-update",{updated:null,vertices:[{componentIndex:0,vertexIndex:this._activeComponent.vertices.length,coordinates:this.coordinateHelper.pointToArray(e)}],operation:"apply",type:"vertex-update"})}),{sync:!0,equals:(e,t)=>a.equalsMaybe(e,t,g.pointEquals)}),p.watch((()=>this.view.viewpoint),((e,t)=>{e&&t&&u.diff(e,t)&&this._onViewpointChange()}))]),this._activeComponent=new w.Component(n,i),this._editGeometryOperations.data.components.push(this._activeComponent);const o=this.segmentLabels;null!=o&&(o.context={view:t,editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,labelOptions:this.labelOptions},this.addHandles([p.watch((()=>this.labelOptions.enabled),(e=>{o.visible=e}),p.syncAndInitial),this.on("cursor-update",(()=>{const e=this.stagedVertex;o.stagedVertex=null!=e?this.coordinateHelper.pointToVector(e):null}))])),this.addHandles(this._editGeometryOperations.on(["vertex-add","vertex-update","vertex-remove"],(e=>{const t=e.vertices.map((e=>({componentIndex:0,vertexIndex:e.index,coordinates:this.coordinateHelper.vectorToArray(e.pos)}))),n=t.map((e=>e.coordinates));switch(e.type){case"vertex-add":this.emit(e.type,{...e,added:n,vertices:t});break;case"vertex-update":this.emit(e.type,{...e,updated:n,vertices:t});break;case"vertex-remove":this.emit(e.type,{...e,removed:n,vertices:t})}const i=this._activeComponent.getLastVertex(),r=null!=i?this.coordinateHelper.vectorToDehydratedPoint(i.pos):null;null!=r&&null!=this.lastVertex&&g.pointEquals(this.lastVertex,r)||(this.lastVertex=r)})));const c=this._manipulator=new v.DrawManipulator({grabbableForEvent:e=>"click"!==this.drawingMode||"touch"===e.pointerType&&this._snappingEnabled&&1===this._pointerDownStates.size});this.manipulators.add(c),c.grabbable="point"!==e,this.addHandles([this._createManipulatorDragPipeline(c),c.events.on("immediate-click",(e=>this._onImmediateClick(e))),c.events.on("immediate-double-click",(e=>this._onImmediateDoubleClick(e))),p.watch((()=>({cursor:this.cursor,loading:this.loading})),(({cursor:e,loading:t})=>{c.cursor=t?"progress":e}),p.syncAndInitial)]),T.setupSnappingToggleHandles(this,(()=>{const e=this.view.inputManager.latestPointerType??"mouse",t=this._getSnappingContext(e);null!=this.snappingManager&&this.updatingHandles.addPromise(s.ignoreAbortErrors(this._snappingOperation.resnap(this.snappingManager,t)))}))},i.destroy=function(){a.destroyMaybe(this.segmentLabels),a.destroyMaybe(this._snappingOperation),this._editGeometryOperations=a.destroyMaybe(this._editGeometryOperations)},i.cancel=function(){this.complete({aborted:!0})},i.commitStagedVertex=function(){if(this._snappingOperation.abort(),null!=this.stagedVertex){const{stagedVertex:e}=this;this.stagedVertex=null,this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(e))}},i.complete=function(e){const t=e&&e.aborted||!1;this._snappingOperation.abort(),null!=this.snappingManager&&this.snappingManager.doneSnapping(),"segment"===this.geometryType||"point"===this.geometryType?this.commitStagedVertex():this.stagedVertex=null;const n="multipoint"===this.geometryType&&0===this.numVertices||"polyline"===this.geometryType&&this.numVertices<2||"polygon"===this.geometryType&&this.numVertices<3;this._createOperationCompleted=!n,(this.isCompleted||t)&&this.emit("complete",{vertices:this.vertices.map(((e,t)=>({componentIndex:0,vertexIndex:t,coordinates:e}))),aborted:t,type:"complete"})},i.onInputEvent=function(e){switch(e.type){case"pointer-down":this._pointerDownStates.add(e.pointerId);break;case"pointer-up":this._pointerDownStates.delete(e.pointerId)}switch(e.type){case"pointer-move":return this._onPointerMove(e);case"hold":return this._onHold(e)}},i.redo=function(){this._editGeometryOperations.redo()},i.undo=function(){null!=this.snappingManager&&this.snappingManager.doneSnapping(),this._editGeometryOperations.undo()},i._closeOnClickVertexIndex=function(e){const t=this._activeComponent;if("polygon"===this.geometryType&&t.vertices.length>2){if(this._vertexWithinPointerDistance(t.vertices[0].pos,e))return 0;if(this._vertexWithinPointerDistance(t.vertices[t.vertices.length-1].pos,e))return t.vertices.length-1}return null},i._createManipulatorDragPipeline=function(e){switch(this.drawingMode){case"click":return this._createManipulatorDragPipelineClick(e);case"freehand":return this._createManipulatorDragPipelineFreehand(e);case"hybrid":return this._createManipulatorDragPipelineHybrid(e)}},i._createManipulatorDragPipelineClick=function(e){return x.createManipulatorDragEventPipeline(e,((e,t,n,i)=>{const r="touch"===i&&this._snappingEnabled;if(this.isCompleted||!r)return;const{snappingStep:o,cancelSnapping:a}=V.createSnapDragEventPipelineStep({predicate:()=>r,snappingManager:this.snappingManager,snappingContext:new b.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:i,visualizer:this.snappingVisualizer}),updatingHandles:this.updatingHandles,useZ:!this._requiresScenePoint});n=n.next((e=>(r&&null!=this.snappingManager&&this.snappingManager.doneSnapping(),e))).next(a),t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(this.stagedVertex=e.mapStart,("segment"===this.geometryType||r&&0===this.numVertices)&&this.commitStagedVertex()),e))).next(x.sceneSnappingAtLocation(this.view,this.elevationInfo)).next(...o).next((e=>(r&&(this.stagedVertex=e.mapEnd,"end"===e.action&&this.commitStagedVertex()),e))).next((e=>("end"===e.action&&("segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()),e)))}))},i._createManipulatorDragPipelineFreehand=function(e){return x.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(null==this.stagedVertex&&(this.stagedVertex=e.mapStart),"segment"===this.geometryType&&this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":this.complete()}return e}))}))},i._createManipulatorDragPipelineHybrid=function(e){return x.createManipulatorDragEventPipeline(e,((e,t)=>{this.isCompleted||t.next(this._screenToMapDragEventStep()).next((e=>("start"===e.action&&(null==this.stagedVertex&&(this.stagedVertex=e.mapStart),this.commitStagedVertex()),e))).next((e=>{switch(e.action){case"start":case"update":this.stagedVertex=e.mapEnd,"polygon"!==this.geometryType&&"polyline"!==this.geometryType||this.commitStagedVertex();break;case"end":"segment"!==this.geometryType&&"point"!==this.geometryType||this.complete()}return e}))}))},i._getEffectiveDrawSurface=function(){if(null==this.elevationDrawSurface)return this.drawSurface;if(!this.coordinateHelper.hasZ())return this.elevationDrawSurface.defaultZ=null,this.elevationDrawSurface;let e=this.defaultZ,t=!1;return null!=this.elevationInfo&&"absolute-height"===this.elevationInfo.mode&&(t=!0),null!=this.snapToSceneEnabled&&(t=this.snapToSceneEnabled),null!=this.elevationInfo&&"on-the-ground"===this.elevationInfo.mode&&(t=!1),this._drawAtFixedElevation&&(e=this.coordinateHelper.getZ(this._activeComponent.vertices[0].pos),t=!1),t?this.drawSurface:(this.elevationDrawSurface.defaultZ=e,this.elevationDrawSurface)},i._mapToScreen=function(e){return this._getEffectiveDrawSurface()?.mapToScreen(e)},i._onHold=function(e){this._snappingOperation.abort(),"click"===this.drawingMode&&"touch"===e.pointerType&&this._snappingEnabled&&(this.stagedVertex=e.mapPoint),e.stopPropagation()},i._onImmediateClick=function(e){if("mouse"===e.pointerType&&2===e.button||this._manipulator.dragging)return;const t=this._activeComponent;if(null!=this._closeOnClickVertexIndex(e.screenPoint))return e.stopPropagation(),void this.complete();const n=this._screenToMap(e.screenPoint);if(null!=n)switch(this.drawingMode){case"freehand":"point"===this.geometryType&&(null!=this.stagedVertex?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),this.complete());break;case"click":case"hybrid":this._snappingOperation.abort(),null!=this.stagedVertex?this.commitStagedVertex():this._editGeometryOperations.appendVertex(this.coordinateHelper.pointToVector(n)),("point"===this.geometryType||"segment"===this.geometryType&&2===t.vertices.length||"segment"===this.geometryType&&"hybrid"===this.drawingMode&&1===t.vertices.length)&&this.complete()}e.stopPropagation()},i._onImmediateDoubleClick=function(e){this._manipulator.dragging||"point"===this.geometryType||(this.complete(),e.stopPropagation())},i._onPointerMove=function(e){const t=c.createScreenPoint(e.x,e.y);this._stagedScreenPoint=t,this._stagedPointerType=e.pointerType;const n=this._snappingOperation,i=this._manipulator;i.dragging||this._pointerDownStates.has(e.pointerId)||i.grabbing||!i.interactive?n.abort():(e.stopPropagation(),this._updateStagedVertexOnPointerMove(t,e.pointerType))},i._onViewpointChange=function(){const e=this._manipulator;this._stagedScreenPoint&&!e.dragging&&!e.grabbing&&e.interactive?this._updateStagedVertexOnPointerMove(this._stagedScreenPoint,this._stagedPointerType??"mouse"):this._snappingOperation.abort()},i._updateStagedVertexOnPointerMove=function(e,t){const n=this._snappingOperation,i=this._closeOnClickVertexIndex(e);if(null!=i)return this._closeOnVertex(i),void n.abort();const r=this._screenToMap(e),o=this._requiresScenePoint?this.drawSurface?.screenToMap(e):null;if(null==r)return this.cursor=null,void n.abort();this.cursor="crosshair";const a=this.snappingManager;if(null==a)return this.stagedVertex=r,void n.abort();const p=this._getSnappingContext(t);this.updatingHandles.addPromise(s.ignoreAbortErrors(n.snap({point:r,scenePoint:o},a,p)))},i._closeOnVertex=function(e){this.stagedVertex=null;const t={componentIndex:0,vertexIndex:e,coordinates:this.coordinateHelper.vectorToArray(this._activeComponent.vertices[e].pos)};this.emit("cursor-update",{updated:null,vertices:[t],operation:"apply",type:"vertex-update"})},i._screenToMap=function(e){return this._getEffectiveDrawSurface()?.screenToMap(e)},i._screenToMapDragEventStep=function(){let e=null;return t=>{if("start"===t.action&&(e=this._screenToMap(t.screenStart)),null==e)return null;const n=this._screenToMap(t.screenEnd);return null!=n?{...t,mapStart:e,mapEnd:n}:null}},i._vertexWithinPointerDistance=function(e,t){const n=25,i=this._mapToScreen(this.coordinateHelper.vectorToDehydratedPoint(e));return null!=i&&P(i,t,n)},i._getSnappingContext=function(e){const t=this._drawAtFixedElevation?a.applySome(this.elevationDrawSurface,(({defaultZ:e})=>e)):null;return new b.SnappingContext({editGeometryOperations:this._editGeometryOperations,elevationInfo:this.elevationInfo,pointer:e,visualizer:this.snappingVisualizer,selfSnappingZ:null!=t?{value:t,elevationInfo:this.elevationInfo}:null})},t._createClass(n,[{key:"_snappingEnabled",get:function(){return null!=this.snappingManager&&this.snappingManager.options.effectiveEnabled}},{key:"_requiresScenePoint",get:function(){const e=this._getEffectiveDrawSurface();return"3d"===this.view.type&&this.drawSurface!==e}},{key:"canRedo",get:function(){return this._editGeometryOperations.canRedo}},{key:"canUndo",get:function(){return this._editGeometryOperations.canUndo}},{key:"committedVertices",get:function(){return this._activeComponent.vertices.map((e=>this.coordinateHelper.vectorToArray(e.pos)))}},{key:"drawingMode",set:function(e){this._set("drawingMode",e??_.defaultDrawingMode)}},{key:"interactive",get:function(){return this._manipulator.interactive},set:function(e){this._manipulator.interactive=e}},{key:"isCompleted",get:function(){return this._createOperationCompleted}},{key:"numCommittedVertices",get:function(){return this._activeComponent.vertices.length}},{key:"numVertices",get:function(){return null!=this.stagedVertex?this._activeComponent.vertices.length+1:this._activeComponent.vertices.length}},{key:"snappingOptions",get:function(){return null!=this.snappingManager?this.snappingManager.options:null}},{key:"stagedVertex",get:function(){return this._snappingOperation.stagedPoint},set:function(e){this._snappingOperation.stagedPoint=o.clone(e)}},{key:"updating",get:function(){return this.updatingHandles.updating}},{key:"vertices",get:function(){const e=this.committedVertices;return null!=this.stagedVertex&&e.push(this.coordinateHelper.pointToArray(this.stagedVertex)),e}},{key:"_drawAtFixedElevation",get:function(){return("segment"===this.geometryType||"polygon"===this.geometryType)&&this.numCommittedVertices>0}}]),n}(i.EventedMixin(r.HandleOwner)),n.__decorate([l.property()],e.DrawOperation.prototype,"_snappingEnabled",null),n.__decorate([l.property()],e.DrawOperation.prototype,"defaultZ",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"isDraped",void 0),n.__decorate([l.property({value:_.defaultDrawingMode})],e.DrawOperation.prototype,"drawingMode",null),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationDrawSurface",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"elevationInfo",void 0),n.__decorate([l.property({constructOnly:!0,type:S})],e.DrawOperation.prototype,"labelOptions",void 0),n.__decorate([l.property({constructOnly:!0,type:D})],e.DrawOperation.prototype,"tooltipOptions",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"geometryType",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"hasM",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"hasZ",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"cursor",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"loading",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"manipulators",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"drawSurface",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"segmentLabels",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingManager",void 0),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"snappingVisualizer",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"snapToSceneEnabled",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"_snappingOperation",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"stagedVertex",null),n.__decorate([l.property()],e.DrawOperation.prototype,"lastVertex",void 0),n.__decorate([l.property()],e.DrawOperation.prototype,"updating",null),n.__decorate([l.property({constructOnly:!0})],e.DrawOperation.prototype,"view",void 0),e.DrawOperation=n.__decorate([h.subclass("esri.views.draw.DrawOperation")],e.DrawOperation),Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
