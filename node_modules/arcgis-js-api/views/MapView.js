/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["require","../chunks/_rollupPluginBabelHelpers","../chunks/tslib.es6","../Graphic","../Viewpoint","../core/arrayUtils","../core/Collection","../core/CollectionFlattener","../core/Error","../core/has","../core/iteratorUtils","../core/Logger","../core/maybe","../core/promiseUtils","../core/reactiveUtils","../core/workers/workers","../core/accessorSupport/decorators/property","../core/accessorSupport/decorators/cast","../core/accessorSupport/decorators/subclass","../core/accessorSupport/ensureType","../geometry/projection","../layers/support/TileInfo","./BreakpointsOwner","./DOMContainer","./PopupView","./View","./ViewAnimation","./2d/AnimationManager","./2d/FrameTask","./2d/layerViewModuleImportUtils","./2d/MapViewConstraints","./2d/tiling/PagedTileQueue","./2d/tiling/TileInfoView","./2d/tiling/TileKey","./2d/tiling/TileQueue","./2d/tiling/TileStrategy","./2d/viewpointUtils","./2d/ViewStateManager","./2d/input/MapViewInputManager","./2d/layers/features/support/TileStore","./2d/support/HighlightOptions","./2d/support/Timeline","./support/createScreenshotPlan","./support/screenshotUtils","./support/screenUtils","./support/WebGLRequirements","./ui/DefaultUI","./ui/2d/DefaultUI2D","../webmap/background/ColorBackground"],(function(e,t,i,n,r,a,s,o,p,l,c,h,u,d,g,y,f,_,m,w,M,V,v,S,k,T,b,P,O,L,R,x,E,I,C,D,A,z,G,q,N,U,F,W,$,j,H,B,Q){"use strict";let J,K,Y,X,Z,ee;async function te(){const[,{GraphicsView2D:t,GraphicContainer:i,LabelManager:n,MapViewNavigation:r,MagnifierView2D:a,Stage:s}]=await Promise.all([new Promise(((t,i)=>e(["./2d/webglDeps"],t,i))),new Promise(((t,i)=>e(["./2d/mapViewDeps"],t,i)))]);K=t,Y=i,X=n,Z=r,ee=a,J=s}const ie=160,ne={flipY:!0,premultipliedAlpha:!0};let re=function(e){function i(i){var n;return(n=e.call(this,i)||this)._magnifierView=null,n._stage=null,n._resolveWhenReady=[],n.rootLayerViews=new o({getCollections:()=>[n.basemapView?.baseLayerViews,n.layerViews,n.basemapView?.referenceLayerViews],getChildrenFunction:()=>null}),n.featuresTilingScheme=null,n.fullOpacity=1,n.graphicsView=null,n.stateManager=new z.ViewStateManager({constraints:new R({view:t._assertThisInitialized(n)})}),n.labelManager=null,n.mapViewNavigation=null,n.renderingOptions={samplingMode:"dynamic",edgeLabelsVisible:!0,labelsAnimationTime:125,labelCollisionsEnabled:!0},n.rendering=!1,n.supersampleScreenshotsEnabled=!0,n.supportsGround=!1,n._stationaryTimer=null,n._gotoTask=null,n.frameTask=new O(t._assertThisInitialized(n)),n._pePromise=null,n.floors=new s,n.highlightOptions=new N,n.inputManager=new G({view:t._assertThisInitialized(n)}),n.map=null,n.spatialReferenceLocked=!1,n.timeline=new U.Timeline,n.type="2d",n.ui=new B,n.padding={top:0,right:0,bottom:0,left:0},n.addHandles([g.watch((()=>n.viewpoint),(()=>{n._lastStationaryEventTimestamp=performance.now(),n._flipStationary(ie)}),g.sync),n.on("resize",(e=>n.stateManager.resize(e.width,e.height))),g.watch((()=>n.animationManager?.animation),(e=>{n.animation=e}))]),y.initialize(),n}t._inherits(i,e);var n=i.prototype;return n.destroy=function(){this._set("preconditionsReady",!1),this.frameTask=u.destroyMaybe(this.frameTask),this._gotoTask=null,this.rootLayerViews.destroy(),this.inputManager.destroy(),this._set("inputManager",null)},n.goTo=function(e,t){if(e)return this.animation&&(this.animation=null),this._createAnimation(),g.whenOnce((()=>this.ready),t).then((()=>{const i={animate:!0,...t},n=A.create(e,this);return this.animation?.update(n),this._gotoTask={},i.animate?this._gotoAnimated(n,i):this._gotoImmediate(n,i)}));h.getLogger(this).error("#goTo()","target cannot be null or undefined")},n.hitTest=async function(e,t){const i=$.isSupportedScreenPointEvent(e)?$.createScreenPointFromSupportedEvent(this,e):e;if(!this.ready||isNaN(i.x)||isNaN(i.y))return{screenPoint:i,results:[]};let n=new Set,r=!1,s=null,o=null;t?.include?oe(t.include,se(this,(e=>n.add(e)),(e=>{s||(s=new Set),s.add(e)}),(e=>n.add(e)),(()=>r=!0))):(r=!0,n=new Set(this.allLayerViews)),t?.exclude&&oe(t.exclude,se(this,(e=>n.delete(e)),(e=>{o||(o=new Set),o.add(e)})));const p=this.allLayerViews.filter((e=>!e.suspended&&n.has(e))).reverse(),l=this.toMap(i);let c=[...r?this.graphicsView.hitTest(l).map((e=>({type:"graphic",graphic:e,layer:null,mapPoint:l}))):[],...await Promise.all(p.map((e=>e.hitTest(l,i))).toArray())].filter(a.isSome).flat().filter(a.isSome);return s&&(c=c.filter((e=>!("graphic"in e)||!e.graphic||s?.has(ae(e.graphic))))),o&&(c=c.filter((e=>!("graphic"in e)||!e.graphic||!o?.has(ae(e.graphic))))),{screenPoint:i,results:c}},n.takeScreenshot=async function(e){const t=this._createScreenshotPlan(e),i=await this._stage.takeScreenshot(t);return W.encode(i,{format:t.format,quality:t.quality,rotation:0,disableDecorations:!1},ne)},n._takeScreenshot=async function(e){const t=this._createScreenshotPlan(e),i=await this._stage.takeScreenshot(t);return W.encodeData(i,ne)},n._createScreenshotPlan=function(e){e=e??{};const t=this.supersampleScreenshotsEnabled?Math.min(4,W.getMaximumResolutionScale(this.size,Math.min(4096,this._stage.context.parameters.maxTextureSize))):1;let i;e.layers?(i=[],e.layers.forEach((e=>{const t=this.allLayerViews.find((t=>t.layer.id===e.id));t&&"container"in t&&t.container&&i.push(t.container)}))):i=this._stage.children;const{format:n,quality:r}=W.getFormatAndQuality(e.format,e.quality);return F(e,t,this.size,this.padding,n,r,i,e.rotation)},n.toMap=function(e){if(!this.ready)return null;const t=$.isSupportedScreenPointEvent(e)?$.createScreenPointFromSupportedEvent(this,e):e;return this.stateManager.toMap(t)},n.toScreen=function(e){return this.stateManager.toScreen(e)},n.on=function(e,n,r,a){const s=this.inputManager&&this.viewEvents.on(e,n,r,a);return s||t._get(t._getPrototypeOf(i.prototype),"on",this).call(this,e,n)},n.hasEventListener=function(e){return t._get(t._getPrototypeOf(i.prototype),"hasEventListener",this).call(this,e)||this.viewEvents.hasHandler(e)},n.whenLayerView=function(e){return t._get(t._getPrototypeOf(i.prototype),"whenLayerView",this).call(this,e)},n.graphicChanged=function(e){if(this.graphicsView){this.graphicsView.graphicUpdateHandler(e)}},n.whenReady=function(){return new Promise((e=>{this.ready?e(this):this._resolveWhenReady.push(e)}))},n.forceDOMReadyCycle=function(){this.forceReadyCycle()},n.getDefaultSpatialReference=function(){return this.map&&"initialViewProperties"in this.map&&this.map?.initialViewProperties?.spatialReference||this.defaultsFromMap?.spatialReference||null},n.hasLayerViewModule=function(e){return L.layerView2DImporter.hasLayerViewModule(e)},n.importLayerView=function(e){return L.layerView2DImporter.importLayerView(e)},n.pixelSizeAt=function(){return this.ready?this.resolution:(h.getLogger(this).error("#pixelSizeAt()","Map view cannot be used before it is ready"),null)},n.popupHitTest=function(e){return this.hitTest(e).then((t=>({...t,mapPoint:this.toMap(e)})))},n.requestUpdate=function(){this.ready&&this.frameTask.requestUpdate()},n.validate=function(){let e=j.check(this.type);return l("safari")&&l("safari")<9&&(e=new p("mapview:browser-not-supported","This browser is not supported by MapView (Safari < 9)",{type:"safari",requiredVersion:9,detectedVersion:l("safari")})),null!=e?(h.getLogger(this).warn("#validate()",e.message),Promise.reject(e)):te()},n._createAnimation=function(){return this.animation&&!this.animation.done||(this.animation=new b),this.animation},n._cancellableGoTo=function(e,t,i){const n=()=>e===this._gotoTask,r=i.then((()=>{n()&&(this.animation=null)})).catch((e=>{throw n()&&(t&&!t.done&&(t.stop(),this.frameTask.animationInProgress=!1),this.animation=null),e})),a=new Promise((e=>e(r)));return t.when().catch((()=>{n()&&a.cancel&&a.cancel()})),a},n._gotoImmediate=function(e,t){const i=this._gotoTask,n=this.animation,r=e.then((e=>{if(d.throwIfAborted(t),i!==this._gotoTask)throw new p("view:goto-interrupted","Goto was interrupted");this.viewpoint=n.target=e,n.finish()}));return this._cancellableGoTo(i,n,r)},n._flipStationary=function(e){return null!==this._stationaryTimer||(this._stationaryTimer=setTimeout((()=>{this._stationaryTimer=null;const e=performance.now()-this._lastStationaryEventTimestamp;e<ie&&(this._stationaryTimer=this._flipStationary(e))}),e)),this._stationaryTimer},n._getDefaultViewpoint=function(){const{constraints:e,initialExtent:t,map:i,padding:n,size:a}=this;if(!e)return null;const s=i&&"initialViewProperties"in i?i.initialViewProperties:void 0,o=this.stateManager.getUserStartupOptions(this.size),p=s?.viewpoint,l=p?.targetGeometry?.extent??t,c=l?.center,h=p?.rotation??0,u=p?.scale||l&&A.extentToScale(l,[a[0]-n.left-n.right,a[1]-n.top-n.bottom]),d=o.center??c,g=o.rotation??h,y=o.scale??u;return d&&y?new r({targetGeometry:d,scale:y,rotation:g}):null},n._gotoAnimated=function(e,t){const i=this._gotoTask,n=this.animation;if(!n)return Promise.resolve();const r=e.then((e=>{if(d.throwIfAborted(t),i!==this._gotoTask)throw new p("view:goto-interrupted","Goto was interrupted");return n.update(e),this.animationManager.animate(n,this.viewpoint,t),n.when().then((()=>{}),(()=>{}))}));return this._cancellableGoTo(i,n,r)},n._startup=function(){this.timeline.begin("MapView Startup");const e=this._getDefaultViewpoint();this.stateManager.startup(e,this.size,this.spatialReference,this.defaultsFromMap.extent?.center),this.graphics.owner=this;const t=new J(this.surface,{canvas:this.renderCanvas,supersampleScreenshots:this.supersampleScreenshotsEnabled,contextOptions:{disabledExtensions:this.deactivatedWebGLExtensions,debugWebGLExtensions:this.debugWebGLExtensions},renderingOptions:this.renderingOptions,timeline:this.timeline});this._stage=t,this._magnifierView=new ee,this._magnifierView.magnifier=this.magnifier;const i=new X({view:this});this._set("labelManager",i);const n=new P({view:this});this._set("animationManager",n);const r=new Z({view:this,animationManager:n});this._set("mapViewNavigation",r),this._setupSpatialReferenceDependentProperties(),this.handles.add([this.rootLayerViews.on("change",(()=>this._updateStageChildren())),t.on("post-render",(()=>this._set("rendering",t.renderRequested))),t.on("will-render",(()=>this._set("rendering",t.renderRequested))),t.on("webgl-error",(e=>this.fatalError=e.error)),g.watch((()=>this.stationary),(e=>t.stationary=e),g.syncAndInitial),g.watch((()=>this.background),(e=>{t.backgroundColor=e?.color,this._magnifierView.backgroundColor=e?.color}),g.syncAndInitial),g.watch((()=>this.magnifier),(e=>this._magnifierView.magnifier=e),g.syncAndInitial),g.watch((()=>this.renderingOptions),(e=>t.renderingOptions=e),g.syncAndInitial),g.watch((()=>this.highlightOptions),(e=>t.highlightOptions=e),g.syncAndInitial),g.watch((()=>this.state.id),(()=>t.state=this.state),g.syncAndInitial)],"map-view"),this._updateStageChildren();const a=this._resolveWhenReady;this._resolveWhenReady=[],a.forEach((e=>e(this))),this.timeline.end("MapView Startup"),this.frameTask.start(),this._set("ready",!0)},n._teardown=function(){this._destroySpatialReferenceDependentProperties(),this.handles.remove("map-view"),this.mapViewNavigation.destroy(),this._set("mapViewNavigation",null),this.animationManager.destroy(),this._set("animationManager",null),this.layerViewManager.clear(),this.labelManager.destroy(),this._magnifierView.destroy(),this._stage.destroy(),this._stage=null,this._set("graphicsView",null),this._magnifierView=null,this._set("labelManager",null),this._set("mapViewNavigation",null),this.graphics.owner=null,this.frameTask.stop(),this._stationaryTimer&&(clearTimeout(this._stationaryTimer),this._stationaryTimer=null),this._set("ready",!1),this.stateManager.teardown(),this.animation=null},n._updateStageChildren=function(){this._stage.removeAllChildren(),this.rootLayerViews.forEach((e=>{this._stage.addChild(e.container)}));const e=this.graphicsView;this._stage.addChild(e.container),this._stage.addChild(this._magnifierView)},n._setupSpatialReferenceDependentProperties=function(){const e=new E(V.create({spatialReference:this.spatialReference,size:512,numLODs:36}));this._set("featuresTilingScheme",e);const t=new K({view:this,graphics:this.graphics,requestUpdateCallback:()=>this.requestUpdate(),container:new Y(e)});this._set("graphicsView",t)},n._destroySpatialReferenceDependentProperties=function(){const e=this.graphicsView;this._set("graphicsView",null),e.destroy(),this._set("featuresTilingScheme",null)},n._spatialReferenceChanged=function(e){if(this.ready){this.frameTask.stop();for(const e of this.allLayerViews)e.processDetach();this._destroySpatialReferenceDependentProperties(),this.stateManager.changeSpatialReference(e),this._stage.state=this.state,this._setupSpatialReferenceDependentProperties();for(const e of this.allLayerViews)e.processAttach();this.frameTask.requestFrame(),this.frameTask.start(),this._updateStageChildren()}},t._createClass(i,[{key:"graphicsTileStore",get:function(){return new q(this.featuresTilingScheme)}},{key:"constraintsInfo",get:function(){const e=this.defaultsFromMap?.tileInfo,t=this.spatialReference;return{lods:e?.spatialReference?.equals(t)?e.lods:null,spatialReference:t}}},{key:"state",get:function(){return this.stateManager.state}},{key:"initialExtentRequired",get:function(){if(!this.stateManager)return!1;const{scale:e,constraints:t,center:i,viewpoint:n,extent:r}=this;let a=this.zoom;return!(this.map&&"initialViewProperties"in this.map&&this.map.initialViewProperties?.viewpoint)&&(!r&&(t?.effectiveLODs||(a=-1),(!i||0===e&&-1===a)&&(!n||null==n.targetGeometry||"extent"!==n.targetGeometry.type&&!n.scale)))}},{key:"resourceManager",get:function(){return this._stage.resourceManager}},{key:"textureManager",get:function(){return this._stage.painter.textureManager}},{key:"_defaultsFromMapSettings",get:function(){return{required:{tileInfo:!0,heightModelInfo:!1,extent:!1},requiresExtentInSpatialReference:this.spatialReferenceLocked}}},{key:"_projectionEngineLoaded",get:function(){return!!M.isLoaded()||(this._pePromise||(this._pePromise=M.load().finally((()=>{this._pePromise=null}))),!1)}},{key:"typeSpecificPreconditionsReady",get:function(){const e=this._getDefaultViewpoint();if(!e)return!1;const t=this.spatialReference,i=e.targetGeometry;return!!M.canProjectWithoutEngine(i.spatialReference,t)||this._projectionEngineLoaded}},{key:"animation",set:function(e){const t=this._get("animation");if(e===t)return;if(t&&t.stop(),!e||e.isFulfilled())return void this._set("animation",null);this._set("animation",e),this.frameTask.animationInProgress=!0;const i=()=>{e===this._get("animation")&&(this._set("animation",null),this.frameTask?.requestFrame()),this.frameTask.animationInProgress=!1};e.when(i,i)}},{key:"background",get:function(){return pe(this.map)?this.map.initialViewProperties.background:null},set:function(e){this._override("background",e)}},{key:"center",get:function(){return this.stateManager?.center??null},set:function(e){this.stateManager.center=e}},{key:"constraints",get:function(){return this.stateManager?.constraints},set:function(e){e.view=this;const t=this.stateManager.constraints;this.stateManager.constraints=e,t?.destroy()}},{key:"extent",get:function(){return this.stateManager?.extent??null},set:function(e){this.stateManager.extent=e}},{key:"padding",get:function(){return this.stateManager?.padding},set:function(e){this.stateManager&&(this.stateManager.padding=e)}},{key:"resizeAlign",get:function(){return this.stateManager.resizeAlign},set:function(e){this.stateManager.resizeAlign=e}},{key:"resolution",get:function(){return this.stateManager.resolution??0}},{key:"rotation",get:function(){return this.stateManager.rotation??0},set:function(e){this.stateManager.rotation=e}},{key:"scale",get:function(){return this.stateManager?.scale??0},set:function(e){this.stateManager&&(this.stateManager.scale=e)}},{key:"stationary",get:function(){return!(this.animation||this.navigating||this.resizing||this._stationaryTimer)}},{key:"updating",get:function(){const e=!this.destroyed&&(!this.layerViewManager||!this.labelManager||!this.graphicsView||!0===this.layerViewManager.updating||!0===this.labelManager.updating||!0===this.graphicsView.updating||this.allLayerViews.some((e=>!e.destroyed&&!("layerViews"in e)&&!0===e.updating)));if(l("esri-2d-log-updating")){const t=this.allLayerViews.reduce(((e,t)=>({...e,[t.layer.id]:!t.destroyed&&!("layerViews"in t)&&t.updating})),{});console.log(`Updating MapView: ${e}\n-> Null LayerViewManager: ${!this.layerViewManager}\n-> Null LabelManager: ${!this.labelManager}\n-> Null GraphicsView: ${!this.graphicsView}\n-> layerViewManager.updating: ${this.layerViewManager?.updating}\n-> labelManager.updating: ${this.labelManager?.updating}\n-> graphicsView.updating: ${this.graphicsView?.updating}\n-> allLayerViews: ${JSON.stringify(t)}\n`)}return e}},{key:"viewpoint",get:function(){return this.stateManager.viewpoint??null},set:function(e){this.stateManager.viewpoint=e,this.frameTask.requestFrame()}},{key:"zoom",get:function(){return this.stateManager.zoom??-1},set:function(e){this.stateManager.zoom=e}},{key:"navigating",get:function(){return!(!this.mapViewNavigation||!this.mapViewNavigation.interacting)}},{key:"test",get:function(){return{takeScreenshot:e=>this._takeScreenshot(e)}}}]),i}(v.BreakpointsOwner(k.PopupView(S.DOMContainer(T))));re.type="2d",i.__decorate([f.property({readOnly:!0})],re.prototype,"animationManager",void 0),i.__decorate([f.property({constructOnly:!0})],re.prototype,"deactivatedWebGLExtensions",void 0),i.__decorate([f.property({constructOnly:!0})],re.prototype,"debugWebGLExtensions",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"featuresTilingScheme",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"fullOpacity",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"graphicsTileStore",null),i.__decorate([f.property()],re.prototype,"graphicsView",void 0),i.__decorate([f.property()],re.prototype,"stateManager",void 0),i.__decorate([f.property()],re.prototype,"constraintsInfo",null),i.__decorate([f.property({readOnly:!0})],re.prototype,"state",null),i.__decorate([f.property()],re.prototype,"initialExtentRequired",null),i.__decorate([f.property()],re.prototype,"labelManager",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"resourceManager",null),i.__decorate([f.property({readOnly:!0})],re.prototype,"textureManager",null),i.__decorate([f.property({readOnly:!0})],re.prototype,"mapViewNavigation",void 0),i.__decorate([f.property({constructOnly:!0})],re.prototype,"renderCanvas",void 0),i.__decorate([f.property()],re.prototype,"renderingOptions",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"rendering",void 0),i.__decorate([f.property({constructOnly:!0})],re.prototype,"supersampleScreenshotsEnabled",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"supportsGround",void 0),i.__decorate([f.property()],re.prototype,"_stationaryTimer",void 0),i.__decorate([f.property()],re.prototype,"_defaultsFromMapSettings",null),i.__decorate([f.property()],re.prototype,"_pePromise",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"typeSpecificPreconditionsReady",null),i.__decorate([f.property()],re.prototype,"animation",null),i.__decorate([f.property({type:Q})],re.prototype,"background",null),i.__decorate([f.property()],re.prototype,"center",null),i.__decorate([f.property({type:R})],re.prototype,"constraints",null),i.__decorate([f.property()],re.prototype,"extent",null),i.__decorate([f.property()],re.prototype,"floors",void 0),i.__decorate([f.property({type:N})],re.prototype,"highlightOptions",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"inputManager",void 0),i.__decorate([f.property()],re.prototype,"map",void 0),i.__decorate([f.property()],re.prototype,"padding",null),i.__decorate([f.property()],re.prototype,"resizeAlign",null),i.__decorate([f.property({readOnly:!0})],re.prototype,"resolution",null),i.__decorate([f.property()],re.prototype,"rotation",null),i.__decorate([f.property()],re.prototype,"scale",null),i.__decorate([f.property({constructOnly:!0})],re.prototype,"spatialReferenceLocked",void 0),i.__decorate([f.property()],re.prototype,"stationary",null),i.__decorate([f.property({type:U.Timeline,readOnly:!0})],re.prototype,"timeline",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"type",void 0),i.__decorate([f.property({readOnly:!0})],re.prototype,"updating",null),i.__decorate([f.property()],re.prototype,"viewpoint",null),i.__decorate([f.property()],re.prototype,"zoom",null),i.__decorate([f.property({readOnly:!0})],re.prototype,"navigating",null),i.__decorate([f.property(),_.cast((e=>e instanceof H?e:w.ensureClass(B,e)))],re.prototype,"ui",void 0),re=i.__decorate([m.subclass("esri.views.MapView")],re);function ae(e){const t=e.getObjectId();return t?`${e.layer?.uid??e.sourceLayer?.uid??"MapView"}/${t}`:`"MapView/${e.uid}`}function se(e,t,i,r,a){return s=>{if(s instanceof n){if(s.layer===e)a?.();else{const t=e.allLayerViews.find((e=>e.layer===s.layer));t&&r?.(t)}i(ae(s))}else{const i=e.allLayerViews.find((e=>e.layer===s));i&&t(i)}}}function oe(e,t){if(e)if(c.isIterable(e))for(const i of e)if(c.isIterable(i))for(const e of i)t(e);else t(i);else t(e)}function pe(e){return"esri.WebMap"===e?.declaredClass}return re}));
