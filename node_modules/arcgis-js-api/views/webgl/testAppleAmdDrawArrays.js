/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../core/has","../3d/webgl-engine/core/shaderModules/interfaces","./AppleAmdDriverHelper","./BufferObject","./contextUtils","./enums","./FramebufferObject","./TextureDescriptor","./WebGLDriverTestModule"],(function(e,r,t,n,o,i,a,s,l,p,c){"use strict";let u=function(e){function c(r){var n;return(n=e.call(this)||this)._rctx=r,n._helperProgram=null,n._rctx.type===a.ContextType.WEBGL2&&t("mac")&&t("chrome")&&(n._program=n._prepareProgram(),n._helperProgram=n._prepareHelperProgram()),n}r._inherits(c,e);var u=c.prototype;return u.dispose=function(){r._get(r._getPrototypeOf(c.prototype),"dispose",this).call(this),this._helperProgram?.dispose(),this._helperProgram=null},u._test=function(e){const r=this._rctx;r.resetState();const t=new p.TextureDescriptor(1);t.wrapMode=s.TextureWrapMode.CLAMP_TO_EDGE,t.samplingMode=s.TextureSamplingMode.NEAREST;const n=new l.FramebufferObject(r,t),o=i.BufferObject.createIndex(this._rctx,s.Usage.STATIC_DRAW,new Uint8Array([0]));r.bindFramebuffer(n),r.setViewport(0,0,1,1),r.useProgram(this._helperProgram),r.bindBuffer(o,s.BufferType.ELEMENT_ARRAY_BUFFER),r.drawElements(s.PrimitiveType.POINTS,1,s.DataType.UNSIGNED_BYTE,0),r.useProgram(e),r.bindVAO(null),r.drawArrays(s.PrimitiveType.TRIANGLES,0,258);const a=new Uint8Array(4);return n.readPixels(0,0,1,1,s.PixelFormat.RGBA,s.PixelType.UNSIGNED_BYTE,a),n.dispose(),o.dispose(),255===a[0]},u._prepareProgram=function(){const e=85,r=`#version 300 es\n    precision highp float;\n\n    out float triangleId;\n\n    const vec3 triangleVertices[3] = vec3[3](vec3(-0.5, -0.5, 0.0), vec3(0.5, -0.5, 0.0), vec3(0.0, 0.5, 0.0));\n\n    void main(void) {\n      triangleId = floor(float(gl_VertexID)/3.0);\n\n      vec3 position = triangleVertices[gl_VertexID % 3];\n      float offset = triangleId / ${n.glsl.float(e)};\n      position.z = 0.5 - offset;\n\n      gl_Position = vec4(position, 1.0);\n    }\n    `,t=`#version 300 es\n    precision highp float;\n\n    in float triangleId;\n\n    out vec4 fragColor;\n\n    void main(void) {\n      fragColor = triangleId == ${n.glsl.float(e)} ? vec4(0.0, 1.0, 0.0, 1.0) : vec4(1.0, 0.0, 0.0, 1.0);\n    }\n    `;return this._rctx.programCache.acquire(r,t,new Map([]))},u._prepareHelperProgram=function(){const e=o.AppleAmdDriverHelper.getShaderSources();return this._rctx.programCache.acquire(e.vertex,e.fragment,new Map([]))},r._createClass(c)}(c.WebGLDriverTestModule);e.DrawArraysRequiresIndicesTypeReset=u,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
