/*
All material copyright ESRI, All Rights Reserved, unless otherwise specified.
See https://js.arcgis.com/4.27/esri/copyright.txt for details.
*/
define(["exports","../../chunks/_rollupPluginBabelHelpers","../../core/arrayUtils","../../core/Logger","../../core/maybe","../../core/typedArrayUtil","./checkWebGLError","./contextUtils","./enums"],(function(e,t,r,n,i,s,f,o,u){"use strict";const a=n.getLogger("esri.views.webgl.BufferObject");let c=function(){function e(e,t,r,n){this._context=e,this.bufferType=t,this.usage=r,this._glName=null,this._size=-1,this._indexType=void 0,e.instanceCounter.increment(u.ResourceType.BufferObject,this),this._glName=this._context.gl.createBuffer(),f.checkWebGLError(this._context.gl),n&&this.setData(n)}e.createIndex=function(t,r,n){return new e(t,u.BufferType.ELEMENT_ARRAY_BUFFER,r,n)},e.createVertex=function(t,r,n){return new e(t,u.BufferType.ARRAY_BUFFER,r,n)},e.createUniform=function(t,r,n){if(t.type!==o.ContextType.WEBGL2)throw new Error("Uniform buffers are supported in WebGL2 only!");return new e(t,u.BufferType.UNIFORM_BUFFER,r,n)},e.createPixelPack=function(t,r=u.Usage.STREAM_READ,n){if(t.type!==o.ContextType.WEBGL2)throw new Error("Pixel pack buffers are supported in WebGL2 only!");const i=new e(t,u.BufferType.PIXEL_PACK_BUFFER,r);return n&&i.setSize(n),i},e.createPixelUnpack=function(t,r=u.Usage.STREAM_DRAW,n){if(t.type!==o.ContextType.WEBGL2)throw new Error("Pixel unpack buffers are supported in WebGL2 only!");return new e(t,u.BufferType.PIXEL_UNPACK_BUFFER,r,n)};var r=e.prototype;return r.dispose=function(){if(this._context?.gl){if(this._glName){this._context.gl.deleteBuffer(this._glName),this._glName=null}this._context.instanceCounter.decrement(u.ResourceType.BufferObject,this),this._context=i.nullifyNonNullableForDispose(this._context)}else this._glName&&a.warn("Leaked WebGL buffer object")},r.setSize=function(e,t=null){if(e<=0&&a.error("Buffer size needs to be positive!"),this.bufferType===u.BufferType.ELEMENT_ARRAY_BUFFER&&null!=t)switch(this._indexType=t,t){case u.DataType.UNSIGNED_SHORT:e*=2;break;case u.DataType.UNSIGNED_INT:e*=4}this._setBufferData(e)},r.setData=function(e){if(!e)return;let t=e.byteLength;this.bufferType===u.BufferType.ELEMENT_ARRAY_BUFFER&&(s.isUint16Array(e)&&(t/=2,this._indexType=u.DataType.UNSIGNED_SHORT),s.isUint32Array(e)&&(t/=4,this._indexType=u.DataType.UNSIGNED_INT)),this._setBufferData(t,e)},r._setBufferData=function(e,t=null){this._size=e;const r=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const n=this._context.gl;null!=t?n.bufferData(this.bufferType,t,this.usage):n.bufferData(this.bufferType,e,this.usage),f.checkWebGLError(n),this._isVAOAware&&this._context.bindVAO(r)},r.setSubData=function(e,t,r,n){if(!e)return;(t<0||t*e.BYTES_PER_ELEMENT>=this.byteLength)&&a.error("offset is out of range!"),r>=n&&a.error("end must be bigger than start!"),(t+(n-r))*e.BYTES_PER_ELEMENT>this.byteLength&&a.error("An attempt to write beyond the end of the buffer!");const i=this._context.getBoundVAO();this._isVAOAware&&this._context.bindVAO(null),this._context.bindBuffer(this);const s=this._context.gl;if(this._context.type===o.ContextType.WEBGL2)s.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,e,r,n-r);else{const i=0===r&&n===e.length?e:e.subarray(r,n);s.bufferSubData(this.bufferType,t*e.BYTES_PER_ELEMENT,i)}f.checkWebGLError(s),this._isVAOAware&&this._context.bindVAO(i)},r.getSubData=function(e,t=0,r,n){if(this._context.type!==o.ContextType.WEBGL2)return void a.error("Get buffer subdata is supported in WebGL2 only!");if(r<0||n<0)return void a.error("Problem getting subdata: offset and length were less than zero!");const i=h(e)?e.BYTES_PER_ELEMENT:1;if(i*((r??0)+(n??0))>e.byteLength)return void a.error("Problem getting subdata: offset and length exceeded destination size!");t+i*(n??0)>this.byteLength&&a.warn("Potential problem getting subdata: requested data exceeds buffer size!");const s=this._context.gl;this._context.bindBuffer(this,u.BufferType.COPY_READ_BUFFER),s.getBufferSubData(u.BufferType.COPY_READ_BUFFER,t,e,r,n),this._context.unbindBuffer(u.BufferType.COPY_READ_BUFFER)},r.getSubDataAsync=async function(e,t=0,r,n){this._context.type===o.ContextType.WEBGL2?(await this._context.clientWaitAsync(),this.getSubData(e,t,r,n)):a.error("Get buffer subdata is supported in WebGL2 only!")},t._createClass(e,[{key:"glName",get:function(){return this._glName}},{key:"size",get:function(){return this._size}},{key:"indexType",get:function(){return this._indexType}},{key:"byteLength",get:function(){return this.bufferType===u.BufferType.ELEMENT_ARRAY_BUFFER?this._indexType===u.DataType.UNSIGNED_INT?4*this._size:2*this._size:this._size}},{key:"_isVAOAware",get:function(){return this.bufferType===u.BufferType.ELEMENT_ARRAY_BUFFER||this.bufferType===u.BufferType.ARRAY_BUFFER}}]),e}();function h(e){return r.isArrayLike(e)}e.BufferObject=c,Object.defineProperty(e,Symbol.toStringTag,{value:"Module"})}));
